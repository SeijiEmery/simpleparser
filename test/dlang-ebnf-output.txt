dlang.ebnf
2702 term atom(s) allocated:
  7ff32a027400 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 080db5d 1 1 0 0 0    EITHER    => [ 7ff32b004460 ] (array memory at 1015ddb80)
  7ff32a027420 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0172047 1 1 0 0 0      TREF   'mulExpression' at 7ff32a027400 (string memory at 101472017)
  7ff32a027440 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 060b05c 1 1 0 0 0    EITHER    => [ 7ff32a027560 ] (array memory at 1015cb060)
  7ff32a027460 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 02c2047 1 1 0 0 0      TREF   'addExpression' at 7ff32a027440 (string memory at 10147202c)
  7ff32a027480 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 03c2047 1 1 0 0 0   LITERAL   '+' (string memory at 10147203c)
  7ff32a0274a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0422047 1 1 0 0 0   LITERAL   '-' (string memory at 101472042)
  7ff32a0274c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0482047 1 1 0 0 0   LITERAL   '~' (string memory at 101472048)
  7ff32a0274e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060f05c 1 1 0 0 0    EITHER    => [ 7ff32a0274a0 7ff32a0274c0 ] (array memory at 1015cf060)
  7ff32a027500 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080f05c 1 1 0 0 0    EITHER    => [ 7ff32a027480 7ff32a0274e0 ] (array memory at 1015cf080)
  7ff32a027520 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 04c2047 1 1 0 0 0      TREF   'mulExpression' at 7ff32a027400 (string memory at 10147204c)
  7ff32a027540 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0a0f05c 1 1 0 0 0  SEQUENCE    => [ 7ff32a027460 7ff32a027500 7ff32a027520 ] (array memory at 1015cf0a0)
  7ff32a027560 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0f05c 1 1 0 0 0    EITHER    => [ 7ff32a027420 7ff32a027540 ] (array memory at 1015cf0c0)
  7ff32a027580 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 07c2047 1 1 0 0 0   LITERAL   'alias' (string memory at 10147207c)
  7ff32a0275a0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 030b15c 1 1 0 0 0    EITHER    => [ 7ff32a027c60 ] (array memory at 1015cb130)
  7ff32a0275c0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0832047 1 1 0 0 0      TREF   'aliasInitializer' at 7ff32a0275a0 (string memory at 101472083)
  7ff32a0275e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0962047 1 1 0 0 0   LITERAL   ',' (string memory at 101472096)
  7ff32a027600 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0992047 1 1 0 0 0      TREF   'aliasInitializer' at 7ff32a0275a0 (string memory at 101472099)
  7ff32a027620 | 34 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020f15c 1 1 0 0 0  SEQUENCE *  => [ 7ff32a0275e0 7ff32a027600 ] (array memory at 1015cf120)
  7ff32a027640 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0ad2047 1 1 0 0 0   LITERAL   ';' (string memory at 1014720ad)
  7ff32a027660 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 060a05c 1 1 0 0 0  SEQUENCE    => [ 7ff32a027580 7ff32a0275c0 7ff32a027620 7ff32a027640 ] (array memory at 1015ca060)
  7ff32a027680 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0b82047 1 1 0 0 0   LITERAL   'alias' (string memory at 1014720b8)
  7ff32a0276a0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b0 95e 1 1 0 0 0    EITHER    => [ 7ff32b8038e0 ] (array memory at 1015e09b0)
  7ff32a0276c0 | 32 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0bf2047 1 1 0 0 0      TREF * 'storageClass' at 7ff32a0276a0 (string memory at 1014720bf)
  7ff32a0276e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f0315e 1 1 0 0 0    EITHER    => [ 7ff32b805a40 ] (array memory at 1015e31f0)
  7ff32a027700 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0cd2047 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 1014720cd)
  7ff32a027720 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0c0a85d 1 1 0 0 0    EITHER    => [ 7ff32a802fa0 ] (array memory at 1015da8c0)
  7ff32a027740 |  2 0 0 0 0 0 0 018 0 0 0 0 0 0 0d22047 1 1 0 0 0      TREF   'declaratorIdentifierList' at 7ff32a027720 (string memory at 1014720d2)
  7ff32a027760 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0ec2047 1 1 0 0 0   LITERAL   ';' (string memory at 1014720ec)
  7ff32a027780 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 090a05c 1 1 0 0 0  SEQUENCE    => [ 7ff32a027680 7ff32a0276c0 7ff32a027700 7ff32a027740 7ff32a027760 ] (array memory at 1015ca090)
  7ff32a0277a0 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0f72047 1 1 0 0 0   LITERAL   'alias' (string memory at 1014720f7)
  7ff32a0277c0 | 32 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0fe2047 1 1 0 0 0      TREF * 'storageClass' at 7ff32a0276a0 (string memory at 1014720fe)
  7ff32a0277e0 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 c2147 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 10147210c)
  7ff32a027800 |  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0      NONE   
  7ff32a027820 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0112147 1 1 0 0 0      TREF   'identifier' at 7ff32a027800 (string memory at 101472111)
  7ff32a027840 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 01d2147 1 1 0 0 0   LITERAL   '(' (string memory at 10147211d)
  7ff32a027860 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0df5d 1 1 0 0 0    EITHER    => [ 7ff32b800bc0 ] (array memory at 1015ddf00)
  7ff32a027880 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0202147 1 1 0 0 0      TREF   'parameters' at 7ff32a027860 (string memory at 101472120)
  7ff32a0278a0 | 31 0 0 0 0 0 0 0 0 0 0 0 0 0 0 02c2147 1 1 0 0 0   LITERAL * '' (string memory at 10147212c)
  7ff32a0278c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0312147 1 1 0 0 0   LITERAL   ';' (string memory at 101472131)
  7ff32a0278e0 |  4 0 0 0 0 0 0 0 8 0 0 0 0 0 0 060 05d 1 1 0 0 0  SEQUENCE    => [ 7ff32a0277a0 7ff32a0277c0 7ff32a0277e0 7ff32a027820 7ff32a027840 7ff32a027880 7ff32a0278a0 7ff32a0278c0 ] (array memory at 1015d0060)
  7ff32a027900 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020f25c 1 1 0 0 0    EITHER    => [ 7ff32a027780 7ff32a0278e0 ] (array memory at 1015cf220)
  7ff32a027920 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040f25c 1 1 0 0 0    EITHER    => [ 7ff32a027660 7ff32a027900 ] (array memory at 1015cf240)
  7ff32a027940 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d0b05c 1 1 0 0 0    EITHER    => [ 7ff32a027920 ] (array memory at 1015cb0d0)
  7ff32a027960 |  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0      NONE   
  7ff32a027980 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0552147 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101472155)
  7ff32a0279a0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 070 d5e 1 1 0 0 0    EITHER    => [ 7ff32b804860 ] (array memory at 1015e0d70)
  7ff32a0279c0 | 12 0 0 0 0 0 0 012 0 0 0 0 0 0 0602147 1 1 0 0 0      TREF ? 'templateParameters' at 7ff32a0279a0 (string memory at 101472160)
  7ff32a0279e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0752147 1 1 0 0 0   LITERAL   '=' (string memory at 101472175)
  7ff32a027a00 | 32 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0782147 1 1 0 0 0      TREF * 'storageClass' at 7ff32a0276a0 (string memory at 101472178)
  7ff32a027a20 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0862147 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 101472186)
  7ff32a027a40 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0f0a05c 1 1 0 0 0  SEQUENCE    => [ 7ff32a027980 7ff32a0279c0 7ff32a0279e0 7ff32a027a00 7ff32a027a20 ] (array memory at 1015ca0f0)
  7ff32a027a60 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0922147 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101472192)
  7ff32a027a80 | 12 0 0 0 0 0 0 012 0 0 0 0 0 0 09d2147 1 1 0 0 0      TREF ? 'templateParameters' at 7ff32a0279a0 (string memory at 10147219d)
  7ff32a027aa0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b22147 1 1 0 0 0   LITERAL   '=' (string memory at 1014721b2)
  7ff32a027ac0 | 32 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0b52147 1 1 0 0 0      TREF * 'storageClass' at 7ff32a0276a0 (string memory at 1014721b5)
  7ff32a027ae0 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0c32147 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 1014721c3)
  7ff32a027b00 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0c82147 1 1 0 0 0      TREF   'parameters' at 7ff32a027860 (string memory at 1014721c8)
  7ff32a027b20 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0da5d 1 1 0 0 0    EITHER    => [ 7ff32b003e00 ] (array memory at 1015dda00)
  7ff32a027b40 | 32 0 0 0 0 0 0 017 0 0 0 0 0 0 0d32147 1 1 0 0 0      TREF * 'memberFunctionAttribute' at 7ff32a027b20 (string memory at 1014721d3)
  7ff32a027b60 |  4 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0c0c05c 1 1 0 0 0  SEQUENCE    => [ 7ff32a027a60 7ff32a027a80 7ff32a027aa0 7ff32a027ac0 7ff32a027ae0 7ff32a027b00 7ff32a027b40 ] (array memory at 1015cc0c0)
  7ff32a027b80 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0f32147 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 1014721f3)
  7ff32a027ba0 | 12 0 0 0 0 0 0 012 0 0 0 0 0 0 0fe2147 1 1 0 0 0      TREF ? 'templateParameters' at 7ff32a0279a0 (string memory at 1014721fe)
  7ff32a027bc0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0132247 1 1 0 0 0   LITERAL   '=' (string memory at 101472213)
  7ff32a027be0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 010d15d 1 1 0 0 0    EITHER    => [ 7ff32b000fe0 ] (array memory at 1015dd110)
  7ff32a027c00 |  2 0 0 0 0 0 0 019 0 0 0 0 0 0 0162247 1 1 0 0 0      TREF   'functionLiteralExpression' at 7ff32a027be0 (string memory at 101472216)
  7ff32a027c20 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 050a15c 1 1 0 0 0  SEQUENCE    => [ 7ff32a027b80 7ff32a027ba0 7ff32a027bc0 7ff32a027c00 ] (array memory at 1015ca150)
  7ff32a027c40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060f35c 1 1 0 0 0    EITHER    => [ 7ff32a027b60 7ff32a027c20 ] (array memory at 1015cf360)
  7ff32a027c60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080f35c 1 1 0 0 0    EITHER    => [ 7ff32a027a40 7ff32a027c40 ] (array memory at 1015cf380)
  7ff32a027c80 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0542247 1 1 0 0 0   LITERAL   'alias' (string memory at 101472254)
  7ff32a027ca0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 05b2247 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 10147225b)
  7ff32a027cc0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0672247 1 1 0 0 0   LITERAL   'this' (string memory at 101472267)
  7ff32a027ce0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 06e2247 1 1 0 0 0   LITERAL   ';' (string memory at 10147226e)
  7ff32a027d00 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 080a15c 1 1 0 0 0  SEQUENCE    => [ 7ff32a027c80 7ff32a027ca0 7ff32a027cc0 7ff32a027ce0 ] (array memory at 1015ca180)
  7ff32a027d20 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 050b15c 1 1 0 0 0    EITHER    => [ 7ff32a027d00 ] (array memory at 1015cb150)
  7ff32a027d40 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 08f2247 1 1 0 0 0   LITERAL   'align' (string memory at 10147228f)
  7ff32a027d60 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0982247 1 1 0 0 0   LITERAL   '(' (string memory at 101472298)
  7ff32a027d80 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 020ba5c 1 1 0 0 0    EITHER    => [ 7ff32a02a3a0 ] (array memory at 1015cba20)
  7ff32a027da0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 09b2247 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 10147229b)
  7ff32a027dc0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0ad2247 1 1 0 0 0   LITERAL   ')' (string memory at 1014722ad)
  7ff32a027de0 | 14 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0f45c 1 1 0 0 0  SEQUENCE ?  => [ 7ff32a027d60 7ff32a027da0 7ff32a027dc0 ] (array memory at 1015cf400)
  7ff32a027e00 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020f45c 1 1 0 0 0  SEQUENCE    => [ 7ff32a027d40 7ff32a027de0 ] (array memory at 1015cf420)
  7ff32a027e20 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 080b15c 1 1 0 0 0    EITHER    => [ 7ff32a027e00 ] (array memory at 1015cb180)
  7ff32a027e40 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e0dc5d 1 1 0 0 0    EITHER    => [ 7ff32b800200 ] (array memory at 1015ddce0)
  7ff32a027e60 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0d32247 1 1 0 0 0      TREF   'orExpression' at 7ff32a027e40 (string memory at 1014722d3)
  7ff32a027e80 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b0b15c 1 1 0 0 0    EITHER    => [ 7ff32a027f20 ] (array memory at 1015cb1b0)
  7ff32a027ea0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0e72247 1 1 0 0 0      TREF   'andAndExpression' at 7ff32a027e80 (string memory at 1014722e7)
  7ff32a027ec0 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0f92247 1 1 0 0 0   LITERAL   '&&' (string memory at 1014722f9)
  7ff32a027ee0 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0fd2247 1 1 0 0 0      TREF   'orExpression' at 7ff32a027e40 (string memory at 1014722fd)
  7ff32a027f00 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0a0f45c 1 1 0 0 0  SEQUENCE    => [ 7ff32a027ea0 7ff32a027ec0 7ff32a027ee0 ] (array memory at 1015cf4a0)
  7ff32a027f20 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0f45c 1 1 0 0 0    EITHER    => [ 7ff32a027e60 7ff32a027f00 ] (array memory at 1015cf4c0)
  7ff32a027f40 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d0a25d 1 1 0 0 0    EITHER    => [ 7ff32a800fe0 ] (array memory at 1015da2d0)
  7ff32a027f60 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0282347 1 1 0 0 0      TREF   'cmpExpression' at 7ff32a027f40 (string memory at 101472328)
  7ff32a027f80 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e0b15c 1 1 0 0 0    EITHER    => [ 7ff32a028020 ] (array memory at 1015cb1e0)
  7ff32a027fa0 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 03d2347 1 1 0 0 0      TREF   'andExpression' at 7ff32a027f80 (string memory at 10147233d)
  7ff32a027fc0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 04c2347 1 1 0 0 0   LITERAL   '&' (string memory at 10147234c)
  7ff32a027fe0 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 04f2347 1 1 0 0 0      TREF   'cmpExpression' at 7ff32a027f40 (string memory at 10147234f)
  7ff32a028000 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 020f55c 1 1 0 0 0  SEQUENCE    => [ 7ff32a027fa0 7ff32a027fc0 7ff32a027fe0 ] (array memory at 1015cf520)
  7ff32a028020 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040f55c 1 1 0 0 0    EITHER    => [ 7ff32a027f60 7ff32a028000 ] (array memory at 1015cf540)
  7ff32a028040 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0782347 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 101472378)
  7ff32a028060 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 08b2347 1 1 0 0 0   LITERAL   ',' (string memory at 10147238b)
  7ff32a028080 | 12 0 0 0 0 0 0 010 0 0 0 0 0 0 08e2347 1 1 0 0 0      TREF ? 'assignExpression' at 7ff32a027d80 (string memory at 10147238e)
  7ff32a0280a0 | 34 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060f55c 1 1 0 0 0  SEQUENCE *  => [ 7ff32a028060 7ff32a028080 ] (array memory at 1015cf560)
  7ff32a0280c0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080f55c 1 1 0 0 0  SEQUENCE    => [ 7ff32a028040 7ff32a0280a0 ] (array memory at 1015cf580)
  7ff32a0280e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 010b25c 1 1 0 0 0    EITHER    => [ 7ff32a0280c0 ] (array memory at 1015cb210)
  7ff32a028100 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0bb2347 1 1 0 0 0   LITERAL   '(' (string memory at 1014723bb)
  7ff32a028120 | 12 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0be2347 1 1 0 0 0      TREF ? 'argumentList' at 7ff32a0280e0 (string memory at 1014723be)
  7ff32a028140 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0cd2347 1 1 0 0 0   LITERAL   ')' (string memory at 1014723cd)
  7ff32a028160 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0c0f55c 1 1 0 0 0  SEQUENCE    => [ 7ff32a028100 7ff32a028120 7ff32a028140 ] (array memory at 1015cf5c0)
  7ff32a028180 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 030b25c 1 1 0 0 0    EITHER    => [ 7ff32a028160 ] (array memory at 1015cb230)
  7ff32a0281a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f22347 1 1 0 0 0   LITERAL   '[' (string memory at 1014723f2)
  7ff32a0281c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f62347 1 1 0 0 0   LITERAL   ']' (string memory at 1014723f6)
  7ff32a0281e0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0f65c 1 1 0 0 0  SEQUENCE    => [ 7ff32a0281a0 7ff32a0281c0 ] (array memory at 1015cf600)
  7ff32a028200 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 12447 1 1 0 0 0   LITERAL   '[' (string memory at 101472401)
  7ff32a028220 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d0b25c 1 1 0 0 0    EITHER    => [ 7ff32a028480 ] (array memory at 1015cb2d0)
  7ff32a028240 |  2 0 0 0 0 0 0 019 0 0 0 0 0 0 0 42447 1 1 0 0 0      TREF   'arrayMemberInitialization' at 7ff32a028220 (string memory at 101472404)
  7ff32a028260 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0202447 1 1 0 0 0   LITERAL   ',' (string memory at 101472420)
  7ff32a028280 | 12 0 0 0 0 0 0 019 0 0 0 0 0 0 0232447 1 1 0 0 0      TREF ? 'arrayMemberInitialization' at 7ff32a028220 (string memory at 101472423)
  7ff32a0282a0 | 34 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060f65c 1 1 0 0 0  SEQUENCE *  => [ 7ff32a028260 7ff32a028280 ] (array memory at 1015cf660)
  7ff32a0282c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0412447 1 1 0 0 0   LITERAL   ']' (string memory at 101472441)
  7ff32a0282e0 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0b0a15c 1 1 0 0 0  SEQUENCE    => [ 7ff32a028200 7ff32a028240 7ff32a0282a0 7ff32a0282c0 ] (array memory at 1015ca1b0)
  7ff32a028300 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080f65c 1 1 0 0 0    EITHER    => [ 7ff32a0281e0 7ff32a0282e0 ] (array memory at 1015cf680)
  7ff32a028320 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 080b25c 1 1 0 0 0    EITHER    => [ 7ff32a028300 ] (array memory at 1015cb280)
  7ff32a028340 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0602447 1 1 0 0 0   LITERAL   '[' (string memory at 101472460)
  7ff32a028360 | 12 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0632447 1 1 0 0 0      TREF ? 'argumentList' at 7ff32a0280e0 (string memory at 101472463)
  7ff32a028380 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0722447 1 1 0 0 0   LITERAL   ']' (string memory at 101472472)
  7ff32a0283a0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0c0f65c 1 1 0 0 0  SEQUENCE    => [ 7ff32a028340 7ff32a028360 7ff32a028380 ] (array memory at 1015cf6c0)
  7ff32a0283c0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a0b25c 1 1 0 0 0    EITHER    => [ 7ff32a0283a0 ] (array memory at 1015cb2a0)
  7ff32a0283e0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 09e2447 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 10147249e)
  7ff32a028400 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b02447 1 1 0 0 0   LITERAL   ':' (string memory at 1014724b0)
  7ff32a028420 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0f75c 1 1 0 0 0  SEQUENCE ?  => [ 7ff32a0283e0 7ff32a028400 ] (array memory at 1015cf700)
  7ff32a028440 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 080dc5d 1 1 0 0 0    EITHER    => [ 7ff32b800060 ] (array memory at 1015ddc80)
  7ff32a028460 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 0b52447 1 1 0 0 0      TREF   'nonVoidInitializer' at 7ff32a028440 (string memory at 1014724b5)
  7ff32a028480 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040f75c 1 1 0 0 0  SEQUENCE    => [ 7ff32a028420 7ff32a028460 ] (array memory at 1015cf740)
  7ff32a0284a0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0c0b55c 1 1 0 0 0    EITHER    => [ 7ff32a029160 ] (array memory at 1015cb5c0)
  7ff32a0284c0 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0e22447 1 1 0 0 0      TREF   'asmMulExp' at 7ff32a0284a0 (string memory at 1014724e2)
  7ff32a0284e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 020b35c 1 1 0 0 0    EITHER    => [ 7ff32a0285c0 ] (array memory at 1015cb320)
  7ff32a028500 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0f32447 1 1 0 0 0      TREF   'asmAddExp' at 7ff32a0284e0 (string memory at 1014724f3)
  7ff32a028520 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0ff2447 1 1 0 0 0   LITERAL   '+' (string memory at 1014724ff)
  7ff32a028540 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 52547 1 1 0 0 0   LITERAL   '-' (string memory at 101472505)
  7ff32a028560 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0f75c 1 1 0 0 0    EITHER    => [ 7ff32a028520 7ff32a028540 ] (array memory at 1015cf7a0)
  7ff32a028580 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0 92547 1 1 0 0 0      TREF   'asmMulExp' at 7ff32a0284a0 (string memory at 101472509)
  7ff32a0285a0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0c0f75c 1 1 0 0 0  SEQUENCE    => [ 7ff32a028500 7ff32a028560 7ff32a028580 ] (array memory at 1015cf7c0)
  7ff32a0285c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0f75c 1 1 0 0 0    EITHER    => [ 7ff32a0284c0 7ff32a0285a0 ] (array memory at 1015cf7e0)
  7ff32a0285e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d0b35c 1 1 0 0 0    EITHER    => [ 7ff32a028920 ] (array memory at 1015cb3d0)
  7ff32a028600 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 02d2547 1 1 0 0 0      TREF   'asmEqualExp' at 7ff32a0285e0 (string memory at 10147252d)
  7ff32a028620 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 050b35c 1 1 0 0 0    EITHER    => [ 7ff32a0286c0 ] (array memory at 1015cb350)
  7ff32a028640 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0402547 1 1 0 0 0      TREF   'asmAndExp' at 7ff32a028620 (string memory at 101472540)
  7ff32a028660 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 04b2547 1 1 0 0 0   LITERAL   '&' (string memory at 10147254b)
  7ff32a028680 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 04e2547 1 1 0 0 0      TREF   'asmEqualExp' at 7ff32a0285e0 (string memory at 10147254e)
  7ff32a0286a0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 040f85c 1 1 0 0 0  SEQUENCE    => [ 7ff32a028640 7ff32a028660 7ff32a028680 ] (array memory at 1015cf840)
  7ff32a0286c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060f85c 1 1 0 0 0    EITHER    => [ 7ff32a028600 7ff32a0286a0 ] (array memory at 1015cf860)
  7ff32a0286e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 070b95c 1 1 0 0 0    EITHER    => [ 7ff32a02a060 ] (array memory at 1015cb970)
  7ff32a028700 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0732547 1 1 0 0 0      TREF   'asmUnaExp' at 7ff32a0286e0 (string memory at 101472573)
  7ff32a028720 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 080b35c 1 1 0 0 0    EITHER    => [ 7ff32a028800 ] (array memory at 1015cb380)
  7ff32a028740 | 12 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0842547 1 1 0 0 0      TREF ? 'asmBrExp' at 7ff32a028720 (string memory at 101472584)
  7ff32a028760 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 08f2547 1 1 0 0 0   LITERAL   '[' (string memory at 10147258f)
  7ff32a028780 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0b45c 1 1 0 0 0    EITHER    => [ 7ff32a028a20 ] (array memory at 1015cb400)
  7ff32a0287a0 |  2 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0922547 1 1 0 0 0      TREF   'asmExp' at 7ff32a028780 (string memory at 101472592)
  7ff32a0287c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 09a2547 1 1 0 0 0   LITERAL   ']' (string memory at 10147259a)
  7ff32a0287e0 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0e0a15c 1 1 0 0 0  SEQUENCE    => [ 7ff32a028740 7ff32a028760 7ff32a0287a0 7ff32a0287c0 ] (array memory at 1015ca1e0)
  7ff32a028800 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0f95c 1 1 0 0 0    EITHER    => [ 7ff32a028700 7ff32a0287e0 ] (array memory at 1015cf900)
  7ff32a028820 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 020b75c 1 1 0 0 0    EITHER    => [ 7ff32a029740 ] (array memory at 1015cb720)
  7ff32a028840 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0b92547 1 1 0 0 0      TREF   'asmRelExp' at 7ff32a028820 (string memory at 1014725b9)
  7ff32a028860 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0ca2547 1 1 0 0 0      TREF   'asmEqualExp' at 7ff32a0285e0 (string memory at 1014725ca)
  7ff32a028880 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0d82547 1 1 0 0 0   LITERAL   '==' (string memory at 1014725d8)
  7ff32a0288a0 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0df2547 1 1 0 0 0   LITERAL   '!=' (string memory at 1014725df)
  7ff32a0288c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040f95c 1 1 0 0 0    EITHER    => [ 7ff32a028880 7ff32a0288a0 ] (array memory at 1015cf940)
  7ff32a0288e0 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0e42547 1 1 0 0 0      TREF   'asmRelExp' at 7ff32a028820 (string memory at 1014725e4)
  7ff32a028900 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 060f95c 1 1 0 0 0  SEQUENCE    => [ 7ff32a028860 7ff32a0288c0 7ff32a0288e0 ] (array memory at 1015cf960)
  7ff32a028920 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080f95c 1 1 0 0 0    EITHER    => [ 7ff32a028840 7ff32a028900 ] (array memory at 1015cf980)
  7ff32a028940 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 060b55c 1 1 0 0 0    EITHER    => [ 7ff32a029020 ] (array memory at 1015cb560)
  7ff32a028960 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0 32647 1 1 0 0 0      TREF   'asmLogOrExp' at 7ff32a028940 (string memory at 101472603)
  7ff32a028980 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0112647 1 1 0 0 0   LITERAL   '?' (string memory at 101472611)
  7ff32a0289a0 |  2 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0142647 1 1 0 0 0      TREF   'asmExp' at 7ff32a028780 (string memory at 101472614)
  7ff32a0289c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 01c2647 1 1 0 0 0   LITERAL   ':' (string memory at 10147261c)
  7ff32a0289e0 |  2 0 0 0 0 0 0 0 6 0 0 0 0 0 0 01f2647 1 1 0 0 0      TREF   'asmExp' at 7ff32a028780 (string memory at 10147261f)
  7ff32a028a00 | 14 0 0 0 0 0 0 0 4 0 0 0 0 0 0 010a25c 1 1 0 0 0  SEQUENCE ?  => [ 7ff32a028980 7ff32a0289a0 7ff32a0289c0 7ff32a0289e0 ] (array memory at 1015ca210)
  7ff32a028a20 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0f95c 1 1 0 0 0  SEQUENCE    => [ 7ff32a028960 7ff32a028a00 ] (array memory at 1015cf9e0)
  7ff32a028a40 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0472647 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101472647)
  7ff32a028a60 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 05a2647 1 1 0 0 0   LITERAL   'align' (string memory at 10147265a)
  7ff32a028a80 |  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0      NONE   
  7ff32a028aa0 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0612647 1 1 0 0 0      TREF   'IntegerLiteral' at 7ff32a028a80 (string memory at 101472661)
  7ff32a028ac0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020fa5c 1 1 0 0 0  SEQUENCE    => [ 7ff32a028a60 7ff32a028aa0 ] (array memory at 1015cfa20)
  7ff32a028ae0 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0782647 1 1 0 0 0   LITERAL   'align' (string memory at 101472678)
  7ff32a028b00 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 07f2647 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 10147267f)
  7ff32a028b20 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040fa5c 1 1 0 0 0  SEQUENCE    => [ 7ff32a028ae0 7ff32a028b00 ] (array memory at 1015cfa40)
  7ff32a028b40 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0912647 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101472691)
  7ff32a028b60 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 09d2647 1 1 0 0 0   LITERAL   ':' (string memory at 10147269d)
  7ff32a028b80 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 010b55c 1 1 0 0 0    EITHER    => [ 7ff32a028e80 ] (array memory at 1015cb510)
  7ff32a028ba0 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0a02647 1 1 0 0 0      TREF   'asmInstruction' at 7ff32a028b80 (string memory at 1014726a0)
  7ff32a028bc0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 060fa5c 1 1 0 0 0  SEQUENCE    => [ 7ff32a028b40 7ff32a028b60 7ff32a028ba0 ] (array memory at 1015cfa60)
  7ff32a028be0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0b62647 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 1014726b6)
  7ff32a028c00 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b0dc5d 1 1 0 0 0    EITHER    => [ 7ff32b800120 ] (array memory at 1015ddcb0)
  7ff32a028c20 |  2 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0c12647 1 1 0 0 0      TREF   'operands' at 7ff32a028c00 (string memory at 1014726c1)
  7ff32a028c40 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0fa5c 1 1 0 0 0  SEQUENCE    => [ 7ff32a028be0 7ff32a028c20 ] (array memory at 1015cfac0)
  7ff32a028c60 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0d22647 1 1 0 0 0   LITERAL   'in' (string memory at 1014726d2)
  7ff32a028c80 |  2 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0d62647 1 1 0 0 0      TREF   'operands' at 7ff32a028c00 (string memory at 1014726d6)
  7ff32a028ca0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0fa5c 1 1 0 0 0  SEQUENCE    => [ 7ff32a028c60 7ff32a028c80 ] (array memory at 1015cfae0)
  7ff32a028cc0 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0e72647 1 1 0 0 0   LITERAL   'out' (string memory at 1014726e7)
  7ff32a028ce0 |  2 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0ec2647 1 1 0 0 0      TREF   'operands' at 7ff32a028c00 (string memory at 1014726ec)
  7ff32a028d00 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0fb5c 1 1 0 0 0  SEQUENCE    => [ 7ff32a028cc0 7ff32a028ce0 ] (array memory at 1015cfb00)
  7ff32a028d20 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0fd2647 1 1 0 0 0   LITERAL   'int' (string memory at 1014726fd)
  7ff32a028d40 |  2 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 22747 1 1 0 0 0      TREF   'operands' at 7ff32a028c00 (string memory at 101472702)
  7ff32a028d60 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020fb5c 1 1 0 0 0  SEQUENCE    => [ 7ff32a028d20 7ff32a028d40 ] (array memory at 1015cfb20)
  7ff32a028d80 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0132747 1 1 0 0 0   LITERAL   ';' (string memory at 101472713)
  7ff32a028da0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040fb5c 1 1 0 0 0    EITHER    => [ 7ff32a028d60 7ff32a028d80 ] (array memory at 1015cfb40)
  7ff32a028dc0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060fb5c 1 1 0 0 0    EITHER    => [ 7ff32a028d00 7ff32a028da0 ] (array memory at 1015cfb60)
  7ff32a028de0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080fb5c 1 1 0 0 0    EITHER    => [ 7ff32a028ca0 7ff32a028dc0 ] (array memory at 1015cfb80)
  7ff32a028e00 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0fb5c 1 1 0 0 0    EITHER    => [ 7ff32a028c40 7ff32a028de0 ] (array memory at 1015cfba0)
  7ff32a028e20 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0fb5c 1 1 0 0 0    EITHER    => [ 7ff32a028bc0 7ff32a028e00 ] (array memory at 1015cfbc0)
  7ff32a028e40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0fb5c 1 1 0 0 0    EITHER    => [ 7ff32a028b20 7ff32a028e20 ] (array memory at 1015cfbe0)
  7ff32a028e60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0fc5c 1 1 0 0 0    EITHER    => [ 7ff32a028ac0 7ff32a028e40 ] (array memory at 1015cfc00)
  7ff32a028e80 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020fc5c 1 1 0 0 0    EITHER    => [ 7ff32a028a40 7ff32a028e60 ] (array memory at 1015cfc20)
  7ff32a028ea0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f0b55c 1 1 0 0 0    EITHER    => [ 7ff32a029240 ] (array memory at 1015cb5f0)
  7ff32a028ec0 |  2 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0312747 1 1 0 0 0      TREF   'asmOrExp' at 7ff32a028ea0 (string memory at 101472731)
  7ff32a028ee0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 030b55c 1 1 0 0 0    EITHER    => [ 7ff32a028f60 ] (array memory at 1015cb530)
  7ff32a028f00 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 03f2747 1 1 0 0 0      TREF   'asmLogAndExp' at 7ff32a028ee0 (string memory at 10147273f)
  7ff32a028f20 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 04d2747 1 1 0 0 0   LITERAL   '&&' (string memory at 10147274d)
  7ff32a028f40 |  2 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0512747 1 1 0 0 0      TREF   'asmOrExp' at 7ff32a028ea0 (string memory at 101472751)
  7ff32a028f60 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 040a25c 1 1 0 0 0  SEQUENCE    => [ 7ff32a028ec0 7ff32a028f00 7ff32a028f20 7ff32a028f40 ] (array memory at 1015ca240)
  7ff32a028f80 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0762747 1 1 0 0 0      TREF   'asmLogAndExp' at 7ff32a028ee0 (string memory at 101472776)
  7ff32a028fa0 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 08a2747 1 1 0 0 0      TREF   'asmLogOrExp' at 7ff32a028940 (string memory at 10147278a)
  7ff32a028fc0 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0972747 1 1 0 0 0   LITERAL   '||' (string memory at 101472797)
  7ff32a028fe0 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 09b2747 1 1 0 0 0      TREF   'asmLogAndExp' at 7ff32a028ee0 (string memory at 10147279b)
  7ff32a029000 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0a0fc5c 1 1 0 0 0  SEQUENCE    => [ 7ff32a028fa0 7ff32a028fc0 7ff32a028fe0 ] (array memory at 1015cfca0)
  7ff32a029020 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0fc5c 1 1 0 0 0    EITHER    => [ 7ff32a028f80 7ff32a029000 ] (array memory at 1015cfcc0)
  7ff32a029040 |  2 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0c22747 1 1 0 0 0      TREF   'asmBrExp' at 7ff32a028720 (string memory at 1014727c2)
  7ff32a029060 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0d22747 1 1 0 0 0      TREF   'asmMulExp' at 7ff32a0284a0 (string memory at 1014727d2)
  7ff32a029080 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0de2747 1 1 0 0 0   LITERAL   '*' (string memory at 1014727de)
  7ff32a0290a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e42747 1 1 0 0 0   LITERAL   '/' (string memory at 1014727e4)
  7ff32a0290c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0ea2747 1 1 0 0 0   LITERAL   '%' (string memory at 1014727ea)
  7ff32a0290e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0fc5c 1 1 0 0 0    EITHER    => [ 7ff32a0290a0 7ff32a0290c0 ] (array memory at 1015cfce0)
  7ff32a029100 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0fd5c 1 1 0 0 0    EITHER    => [ 7ff32a029080 7ff32a0290e0 ] (array memory at 1015cfd00)
  7ff32a029120 |  2 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0ee2747 1 1 0 0 0      TREF   'asmBrExp' at 7ff32a028720 (string memory at 1014727ee)
  7ff32a029140 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 020fd5c 1 1 0 0 0  SEQUENCE    => [ 7ff32a029060 7ff32a029100 7ff32a029120 ] (array memory at 1015cfd20)
  7ff32a029160 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040fd5c 1 1 0 0 0    EITHER    => [ 7ff32a029040 7ff32a029140 ] (array memory at 1015cfd40)
  7ff32a029180 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a0b95c 1 1 0 0 0    EITHER    => [ 7ff32a02a120 ] (array memory at 1015cb9a0)
  7ff32a0291a0 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0102847 1 1 0 0 0      TREF   'asmXorExp' at 7ff32a029180 (string memory at 101472810)
  7ff32a0291c0 |  2 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0212847 1 1 0 0 0      TREF   'asmOrExp' at 7ff32a028ea0 (string memory at 101472821)
  7ff32a0291e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 02b2847 1 1 0 0 0   LITERAL   '|' (string memory at 10147282b)
  7ff32a029200 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 02e2847 1 1 0 0 0      TREF   'asmXorExp' at 7ff32a029180 (string memory at 10147282e)
  7ff32a029220 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 080fd5c 1 1 0 0 0  SEQUENCE    => [ 7ff32a0291c0 7ff32a0291e0 7ff32a029200 ] (array memory at 1015cfd80)
  7ff32a029240 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0fd5c 1 1 0 0 0    EITHER    => [ 7ff32a0291a0 7ff32a029220 ] (array memory at 1015cfda0)
  7ff32a029260 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0562847 1 1 0 0 0      TREF   'IntegerLiteral' at 7ff32a028a80 (string memory at 101472856)
  7ff32a029280 |  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0      NONE   
  7ff32a0292a0 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 06c2847 1 1 0 0 0      TREF   'FloatLiteral' at 7ff32a029280 (string memory at 10147286c)
  7ff32a0292c0 |  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0      NONE   
  7ff32a0292e0 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0802847 1 1 0 0 0      TREF   'StringLiteral' at 7ff32a0292c0 (string memory at 101472880)
  7ff32a029300 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 35e 1 1 0 0 0    EITHER    => [ 7ff32b801d60 ] (array memory at 1015e0300)
  7ff32a029320 |  2 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0952847 1 1 0 0 0      TREF   'register' at 7ff32a029300 (string memory at 101472895)
  7ff32a029340 |  2 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0a52847 1 1 0 0 0      TREF   'register' at 7ff32a029300 (string memory at 1014728a5)
  7ff32a029360 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0af2847 1 1 0 0 0   LITERAL   ':' (string memory at 1014728af)
  7ff32a029380 |  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0      NONE   
  7ff32a0293a0 |  2 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0b22847 1 1 0 0 0      TREF   'AsmExp' at 7ff32a029380 (string memory at 1014728b2)
  7ff32a0293c0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 020fe5c 1 1 0 0 0  SEQUENCE    => [ 7ff32a029340 7ff32a029360 7ff32a0293a0 ] (array memory at 1015cfe20)
  7ff32a0293e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 050d25d 1 1 0 0 0    EITHER    => [ 7ff32b001700 ] (array memory at 1015dd250)
  7ff32a029400 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0c02847 1 1 0 0 0      TREF   'identifierChain' at 7ff32a0293e0 (string memory at 1014728c0)
  7ff32a029420 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d82847 1 1 0 0 0   LITERAL   '$' (string memory at 1014728d8)
  7ff32a029440 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0e32847 1 1 0 0 0   LITERAL   'this' (string memory at 1014728e3)
  7ff32a029460 |  1 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0f12847 1 1 0 0 0   LITERAL   '__LOCAL_SIZE' (string memory at 1014728f1)
  7ff32a029480 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080fe5c 1 1 0 0 0    EITHER    => [ 7ff32a029440 7ff32a029460 ] (array memory at 1015cfe80)
  7ff32a0294a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0fe5c 1 1 0 0 0    EITHER    => [ 7ff32a029420 7ff32a029480 ] (array memory at 1015cfea0)
  7ff32a0294c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0fe5c 1 1 0 0 0    EITHER    => [ 7ff32a029400 7ff32a0294a0 ] (array memory at 1015cfec0)
  7ff32a0294e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0fe5c 1 1 0 0 0    EITHER    => [ 7ff32a0293c0 7ff32a0294c0 ] (array memory at 1015cfee0)
  7ff32a029500 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0ff5c 1 1 0 0 0    EITHER    => [ 7ff32a029320 7ff32a0294e0 ] (array memory at 1015cff00)
  7ff32a029520 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020ff5c 1 1 0 0 0    EITHER    => [ 7ff32a0292e0 7ff32a029500 ] (array memory at 1015cff20)
  7ff32a029540 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040ff5c 1 1 0 0 0    EITHER    => [ 7ff32a0292a0 7ff32a029520 ] (array memory at 1015cff40)
  7ff32a029560 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060ff5c 1 1 0 0 0    EITHER    => [ 7ff32a029260 7ff32a029540 ] (array memory at 1015cff60)
  7ff32a029580 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a0b65c 1 1 0 0 0    EITHER    => [ 7ff32a029560 ] (array memory at 1015cb6a0)
  7ff32a0295a0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 070b75c 1 1 0 0 0    EITHER    => [ 7ff32a029860 ] (array memory at 1015cb770)
  7ff32a0295c0 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0192947 1 1 0 0 0      TREF   'asmShiftExp' at 7ff32a0295a0 (string memory at 101472919)
  7ff32a0295e0 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 02c2947 1 1 0 0 0      TREF   'asmRelExp' at 7ff32a028820 (string memory at 10147292c)
  7ff32a029600 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0392947 1 1 0 0 0   LITERAL   '<' (string memory at 101472939)
  7ff32a029620 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 03f2947 1 1 0 0 0   LITERAL   '<=' (string memory at 10147293f)
  7ff32a029640 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0462947 1 1 0 0 0   LITERAL   '>' (string memory at 101472946)
  7ff32a029660 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 04c2947 1 1 0 0 0   LITERAL   '>=' (string memory at 10147294c)
  7ff32a029680 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0ff5c 1 1 0 0 0    EITHER    => [ 7ff32a029640 7ff32a029660 ] (array memory at 1015cffc0)
  7ff32a0296a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0ff5c 1 1 0 0 0    EITHER    => [ 7ff32a029620 7ff32a029680 ] (array memory at 1015cffe0)
  7ff32a0296c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0805d 1 1 0 0 0    EITHER    => [ 7ff32a029600 7ff32a0296a0 ] (array memory at 1015d8000)
  7ff32a0296e0 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0512947 1 1 0 0 0      TREF   'asmShiftExp' at 7ff32a0295a0 (string memory at 101472951)
  7ff32a029700 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020805d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32a0296c0 7ff32a0296e0 ] (array memory at 1015d8020)
  7ff32a029720 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040805d 1 1 0 0 0  SEQUENCE    => [ 7ff32a0295e0 7ff32a029700 ] (array memory at 1015d8040)
  7ff32a029740 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060805d 1 1 0 0 0    EITHER    => [ 7ff32a0295c0 7ff32a029720 ] (array memory at 1015d8060)
  7ff32a029760 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0792947 1 1 0 0 0      TREF   'asmAddExp' at 7ff32a0284e0 (string memory at 101472979)
  7ff32a029780 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0882947 1 1 0 0 0      TREF   'asmShiftExp' at 7ff32a0295a0 (string memory at 101472988)
  7ff32a0297a0 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0962947 1 1 0 0 0   LITERAL   '<<' (string memory at 101472996)
  7ff32a0297c0 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 09d2947 1 1 0 0 0   LITERAL   '>>' (string memory at 10147299d)
  7ff32a0297e0 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0a42947 1 1 0 0 0   LITERAL   '>>>' (string memory at 1014729a4)
  7ff32a029800 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0805d 1 1 0 0 0    EITHER    => [ 7ff32a0297c0 7ff32a0297e0 ] (array memory at 1015d80a0)
  7ff32a029820 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0805d 1 1 0 0 0    EITHER    => [ 7ff32a0297a0 7ff32a029800 ] (array memory at 1015d80c0)
  7ff32a029840 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0aa2947 1 1 0 0 0      TREF   'asmAddExp' at 7ff32a0284e0 (string memory at 1014729aa)
  7ff32a029860 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 070a25c 1 1 0 0 0  SEQUENCE    => [ 7ff32a029760 7ff32a029780 7ff32a029820 7ff32a029840 ] (array memory at 1015ca270)
  7ff32a029880 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0d02947 1 1 0 0 0   LITERAL   'asm' (string memory at 1014729d0)
  7ff32a0298a0 |  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0      NONE   
  7ff32a0298c0 | 12 0 0 0 0 0 0 012 0 0 0 0 0 0 0d52947 1 1 0 0 0      TREF ? 'functionAttributes' at 7ff32a0298a0 (string memory at 1014729d5)
  7ff32a0298e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0ea2947 1 1 0 0 0   LITERAL   '{' (string memory at 1014729ea)
  7ff32a029900 | 22 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0ef2947 1 1 0 0 0      TREF + 'asmInstruction' at 7ff32a028b80 (string memory at 1014729ef)
  7ff32a029920 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 070d15d 1 1 0 0 0    EITHER    => [ 7ff32b001300 ] (array memory at 1015dd170)
  7ff32a029940 | 22 0 0 0 0 0 0 011 0 0 0 0 0 0 0 12a47 1 1 0 0 0      TREF + 'gccAsmInstruction' at 7ff32a029920 (string memory at 101472a01)
  7ff32a029960 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040815d 1 1 0 0 0    EITHER    => [ 7ff32a029900 7ff32a029940 ] (array memory at 1015d8140)
  7ff32a029980 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0172a47 1 1 0 0 0   LITERAL   '}' (string memory at 101472a17)
  7ff32a0299a0 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0a0a25c 1 1 0 0 0  SEQUENCE    => [ 7ff32a029880 7ff32a0298c0 7ff32a0298e0 7ff32a029960 7ff32a029980 ] (array memory at 1015ca2a0)
  7ff32a0299c0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b0b75c 1 1 0 0 0    EITHER    => [ 7ff32a0299a0 ] (array memory at 1015cb7b0)
  7ff32a0299e0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0382a47 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101472a38)
  7ff32a029a00 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0432a47 1 1 0 0 0      TREF ? 'Identifier' at 7ff32a027960 (string memory at 101472a43)
  7ff32a029a20 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080815d 1 1 0 0 0  SEQUENCE    => [ 7ff32a0299e0 7ff32a029a00 ] (array memory at 1015d8180)
  7ff32a029a40 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0572a47 1 1 0 0 0   LITERAL   'byte' (string memory at 101472a57)
  7ff32a029a60 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 05d2a47 1 1 0 0 0      TREF ? 'Identifier' at 7ff32a027960 (string memory at 101472a5d)
  7ff32a029a80 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0815d 1 1 0 0 0  SEQUENCE    => [ 7ff32a029a40 7ff32a029a60 ] (array memory at 1015d81a0)
  7ff32a029aa0 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0712a47 1 1 0 0 0   LITERAL   'short' (string memory at 101472a71)
  7ff32a029ac0 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0782a47 1 1 0 0 0      TREF ? 'Identifier' at 7ff32a027960 (string memory at 101472a78)
  7ff32a029ae0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0815d 1 1 0 0 0  SEQUENCE    => [ 7ff32a029aa0 7ff32a029ac0 ] (array memory at 1015d81c0)
  7ff32a029b00 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 08c2a47 1 1 0 0 0   LITERAL   'int' (string memory at 101472a8c)
  7ff32a029b20 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0912a47 1 1 0 0 0      TREF ? 'Identifier' at 7ff32a027960 (string memory at 101472a91)
  7ff32a029b40 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0815d 1 1 0 0 0  SEQUENCE    => [ 7ff32a029b00 7ff32a029b20 ] (array memory at 1015d81e0)
  7ff32a029b60 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0a52a47 1 1 0 0 0   LITERAL   'float' (string memory at 101472aa5)
  7ff32a029b80 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0ac2a47 1 1 0 0 0      TREF ? 'Identifier' at 7ff32a027960 (string memory at 101472aac)
  7ff32a029ba0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0825d 1 1 0 0 0  SEQUENCE    => [ 7ff32a029b60 7ff32a029b80 ] (array memory at 1015d8200)
  7ff32a029bc0 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0c02a47 1 1 0 0 0   LITERAL   'double' (string memory at 101472ac0)
  7ff32a029be0 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0c82a47 1 1 0 0 0      TREF ? 'Identifier' at 7ff32a027960 (string memory at 101472ac8)
  7ff32a029c00 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020825d 1 1 0 0 0  SEQUENCE    => [ 7ff32a029bc0 7ff32a029be0 ] (array memory at 1015d8220)
  7ff32a029c20 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0dc2a47 1 1 0 0 0   LITERAL   'real' (string memory at 101472adc)
  7ff32a029c40 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0e22a47 1 1 0 0 0      TREF ? 'Identifier' at 7ff32a027960 (string memory at 101472ae2)
  7ff32a029c60 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040825d 1 1 0 0 0  SEQUENCE    => [ 7ff32a029c20 7ff32a029c40 ] (array memory at 1015d8240)
  7ff32a029c80 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060825d 1 1 0 0 0    EITHER    => [ 7ff32a029c00 7ff32a029c60 ] (array memory at 1015d8260)
  7ff32a029ca0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080825d 1 1 0 0 0    EITHER    => [ 7ff32a029ba0 7ff32a029c80 ] (array memory at 1015d8280)
  7ff32a029cc0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0825d 1 1 0 0 0    EITHER    => [ 7ff32a029b40 7ff32a029ca0 ] (array memory at 1015d82a0)
  7ff32a029ce0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0825d 1 1 0 0 0    EITHER    => [ 7ff32a029ae0 7ff32a029cc0 ] (array memory at 1015d82c0)
  7ff32a029d00 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0825d 1 1 0 0 0    EITHER    => [ 7ff32a029a80 7ff32a029ce0 ] (array memory at 1015d82e0)
  7ff32a029d20 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0835d 1 1 0 0 0    EITHER    => [ 7ff32a029a20 7ff32a029d00 ] (array memory at 1015d8300)
  7ff32a029d40 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 090b85c 1 1 0 0 0    EITHER    => [ 7ff32a029d20 ] (array memory at 1015cb890)
  7ff32a029d60 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0 82b47 1 1 0 0 0      TREF   'asmTypePrefix' at 7ff32a029d40 (string memory at 101472b08)
  7ff32a029d80 |  2 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0162b47 1 1 0 0 0      TREF   'asmExp' at 7ff32a028780 (string memory at 101472b16)
  7ff32a029da0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040835d 1 1 0 0 0  SEQUENCE    => [ 7ff32a029d60 7ff32a029d80 ] (array memory at 1015d8340)
  7ff32a029dc0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0242b47 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101472b24)
  7ff32a029de0 |  2 0 0 0 0 0 0 0 6 0 0 0 0 0 0 02f2b47 1 1 0 0 0      TREF   'asmExp' at 7ff32a028780 (string memory at 101472b2f)
  7ff32a029e00 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060835d 1 1 0 0 0  SEQUENCE    => [ 7ff32a029dc0 7ff32a029de0 ] (array memory at 1015d8360)
  7ff32a029e20 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 03e2b47 1 1 0 0 0   LITERAL   '+' (string memory at 101472b3e)
  7ff32a029e40 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0412b47 1 1 0 0 0      TREF   'asmUnaExp' at 7ff32a0286e0 (string memory at 101472b41)
  7ff32a029e60 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080835d 1 1 0 0 0  SEQUENCE    => [ 7ff32a029e20 7ff32a029e40 ] (array memory at 1015d8380)
  7ff32a029e80 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0532b47 1 1 0 0 0   LITERAL   '-' (string memory at 101472b53)
  7ff32a029ea0 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0562b47 1 1 0 0 0      TREF   'asmUnaExp' at 7ff32a0286e0 (string memory at 101472b56)
  7ff32a029ec0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0835d 1 1 0 0 0  SEQUENCE    => [ 7ff32a029e80 7ff32a029ea0 ] (array memory at 1015d83a0)
  7ff32a029ee0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0682b47 1 1 0 0 0   LITERAL   '!' (string memory at 101472b68)
  7ff32a029f00 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 06b2b47 1 1 0 0 0      TREF   'asmUnaExp' at 7ff32a0286e0 (string memory at 101472b6b)
  7ff32a029f20 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0835d 1 1 0 0 0  SEQUENCE    => [ 7ff32a029ee0 7ff32a029f00 ] (array memory at 1015d83c0)
  7ff32a029f40 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 07d2b47 1 1 0 0 0   LITERAL   '~' (string memory at 101472b7d)
  7ff32a029f60 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0802b47 1 1 0 0 0      TREF   'asmUnaExp' at 7ff32a0286e0 (string memory at 101472b80)
  7ff32a029f80 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0835d 1 1 0 0 0  SEQUENCE    => [ 7ff32a029f40 7ff32a029f60 ] (array memory at 1015d83e0)
  7ff32a029fa0 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0912b47 1 1 0 0 0      TREF   'asmPrimaryExp' at 7ff32a029580 (string memory at 101472b91)
  7ff32a029fc0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0845d 1 1 0 0 0    EITHER    => [ 7ff32a029f80 7ff32a029fa0 ] (array memory at 1015d8400)
  7ff32a029fe0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020845d 1 1 0 0 0    EITHER    => [ 7ff32a029f20 7ff32a029fc0 ] (array memory at 1015d8420)
  7ff32a02a000 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040845d 1 1 0 0 0    EITHER    => [ 7ff32a029ec0 7ff32a029fe0 ] (array memory at 1015d8440)
  7ff32a02a020 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060845d 1 1 0 0 0    EITHER    => [ 7ff32a029e60 7ff32a02a000 ] (array memory at 1015d8460)
  7ff32a02a040 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080845d 1 1 0 0 0    EITHER    => [ 7ff32a029e00 7ff32a02a020 ] (array memory at 1015d8480)
  7ff32a02a060 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0845d 1 1 0 0 0    EITHER    => [ 7ff32a029da0 7ff32a02a040 ] (array memory at 1015d84a0)
  7ff32a02a080 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0b92b47 1 1 0 0 0      TREF   'asmAndExp' at 7ff32a028620 (string memory at 101472bb9)
  7ff32a02a0a0 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0ca2b47 1 1 0 0 0      TREF   'asmXorExp' at 7ff32a029180 (string memory at 101472bca)
  7ff32a02a0c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d52b47 1 1 0 0 0   LITERAL   '^' (string memory at 101472bd5)
  7ff32a02a0e0 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0d82b47 1 1 0 0 0      TREF   'asmAndExp' at 7ff32a028620 (string memory at 101472bd8)
  7ff32a02a100 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0c0845d 1 1 0 0 0  SEQUENCE    => [ 7ff32a02a0a0 7ff32a02a0c0 7ff32a02a0e0 ] (array memory at 1015d84c0)
  7ff32a02a120 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0845d 1 1 0 0 0    EITHER    => [ 7ff32a02a080 7ff32a02a100 ] (array memory at 1015d84e0)
  7ff32a02a140 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0 02c47 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 101472c00)
  7ff32a02a160 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0132c47 1 1 0 0 0   LITERAL   ',' (string memory at 101472c13)
  7ff32a02a180 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0162c47 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 101472c16)
  7ff32a02a1a0 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0855d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32a02a160 7ff32a02a180 ] (array memory at 1015d8500)
  7ff32a02a1c0 | 11 0 0 0 0 0 0 0 1 0 0 0 0 0 0 02a2c47 1 1 0 0 0   LITERAL ? ',' (string memory at 101472c2a)
  7ff32a02a1e0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 020855d 1 1 0 0 0  SEQUENCE    => [ 7ff32a02a140 7ff32a02a1a0 7ff32a02a1c0 ] (array memory at 1015d8520)
  7ff32a02a200 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d0b95c 1 1 0 0 0    EITHER    => [ 7ff32a02a1e0 ] (array memory at 1015cb9d0)
  7ff32a02a220 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 04e2c47 1 1 0 0 0   LITERAL   'assert' (string memory at 101472c4e)
  7ff32a02a240 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0572c47 1 1 0 0 0   LITERAL   '(' (string memory at 101472c57)
  7ff32a02a260 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 05a2c47 1 1 0 0 0      TREF   'assertArguments' at 7ff32a02a200 (string memory at 101472c5a)
  7ff32a02a280 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 06b2c47 1 1 0 0 0   LITERAL   ')' (string memory at 101472c6b)
  7ff32a02a2a0 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0d0a25c 1 1 0 0 0  SEQUENCE    => [ 7ff32a02a220 7ff32a02a240 7ff32a02a260 7ff32a02a280 ] (array memory at 1015ca2d0)
  7ff32a02a2c0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f0b95c 1 1 0 0 0    EITHER    => [ 7ff32a02a2a0 ] (array memory at 1015cb9f0)
  7ff32a02a2e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 030315e 1 1 0 0 0    EITHER    => [ 7ff32b805700 ] (array memory at 1015e3130)
  7ff32a02a300 |  2 0 0 0 0 0 0 011 0 0 0 0 0 0 08d2c47 1 1 0 0 0      TREF   'ternaryExpression' at 7ff32a02a2e0 (string memory at 101472c8d)
  7ff32a02a320 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 010bb5c 1 1 0 0 0    EITHER    => [ 7ff32a02a700 ] (array memory at 1015cbb10)
  7ff32a02a340 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0a02c47 1 1 0 0 0      TREF   'assignOperator' at 7ff32a02a320 (string memory at 101472ca0)
  7ff32a02a360 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0af2c47 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 101472caf)
  7ff32a02a380 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0855d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32a02a340 7ff32a02a360 ] (array memory at 1015d85e0)
  7ff32a02a3a0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0865d 1 1 0 0 0  SEQUENCE    => [ 7ff32a02a300 7ff32a02a380 ] (array memory at 1015d8600)
  7ff32a02a3c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e22c47 1 1 0 0 0   LITERAL   '=' (string memory at 101472ce2)
  7ff32a02a3e0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0ed2c47 1 1 0 0 0   LITERAL   '>>>=' (string memory at 101472ced)
  7ff32a02a400 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0fb2c47 1 1 0 0 0   LITERAL   '>>=' (string memory at 101472cfb)
  7ff32a02a420 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 82d47 1 1 0 0 0   LITERAL   '<<=' (string memory at 101472d08)
  7ff32a02a440 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0152d47 1 1 0 0 0   LITERAL   '+=' (string memory at 101472d15)
  7ff32a02a460 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0212d47 1 1 0 0 0   LITERAL   '-=' (string memory at 101472d21)
  7ff32a02a480 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 02d2d47 1 1 0 0 0   LITERAL   '*=' (string memory at 101472d2d)
  7ff32a02a4a0 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0392d47 1 1 0 0 0   LITERAL   '%=' (string memory at 101472d39)
  7ff32a02a4c0 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0452d47 1 1 0 0 0   LITERAL   '&=' (string memory at 101472d45)
  7ff32a02a4e0 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0512d47 1 1 0 0 0   LITERAL   '/=' (string memory at 101472d51)
  7ff32a02a500 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 05d2d47 1 1 0 0 0   LITERAL   '|=' (string memory at 101472d5d)
  7ff32a02a520 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0692d47 1 1 0 0 0   LITERAL   '^^=' (string memory at 101472d69)
  7ff32a02a540 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0762d47 1 1 0 0 0   LITERAL   '^=' (string memory at 101472d76)
  7ff32a02a560 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0822d47 1 1 0 0 0   LITERAL   '~=' (string memory at 101472d82)
  7ff32a02a580 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020865d 1 1 0 0 0    EITHER    => [ 7ff32a02a540 7ff32a02a560 ] (array memory at 1015d8620)
  7ff32a02a5a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040865d 1 1 0 0 0    EITHER    => [ 7ff32a02a520 7ff32a02a580 ] (array memory at 1015d8640)
  7ff32a02a5c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060865d 1 1 0 0 0    EITHER    => [ 7ff32a02a500 7ff32a02a5a0 ] (array memory at 1015d8660)
  7ff32a02a5e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080865d 1 1 0 0 0    EITHER    => [ 7ff32a02a4e0 7ff32a02a5c0 ] (array memory at 1015d8680)
  7ff32a02a600 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0865d 1 1 0 0 0    EITHER    => [ 7ff32a02a4c0 7ff32a02a5e0 ] (array memory at 1015d86a0)
  7ff32a02a620 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0865d 1 1 0 0 0    EITHER    => [ 7ff32a02a4a0 7ff32a02a600 ] (array memory at 1015d86c0)
  7ff32a02a640 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0865d 1 1 0 0 0    EITHER    => [ 7ff32a02a480 7ff32a02a620 ] (array memory at 1015d86e0)
  7ff32a02a660 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0875d 1 1 0 0 0    EITHER    => [ 7ff32a02a460 7ff32a02a640 ] (array memory at 1015d8700)
  7ff32a02a680 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020875d 1 1 0 0 0    EITHER    => [ 7ff32a02a440 7ff32a02a660 ] (array memory at 1015d8720)
  7ff32a02a6a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040875d 1 1 0 0 0    EITHER    => [ 7ff32a02a420 7ff32a02a680 ] (array memory at 1015d8740)
  7ff32a02a6c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060875d 1 1 0 0 0    EITHER    => [ 7ff32a02a400 7ff32a02a6a0 ] (array memory at 1015d8760)
  7ff32a02a6e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080875d 1 1 0 0 0    EITHER    => [ 7ff32a02a3e0 7ff32a02a6c0 ] (array memory at 1015d8780)
  7ff32a02a700 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0875d 1 1 0 0 0    EITHER    => [ 7ff32a02a3c0 7ff32a02a6e0 ] (array memory at 1015d87a0)
  7ff32a02a720 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a72d47 1 1 0 0 0   LITERAL   '[' (string memory at 101472da7)
  7ff32a02a740 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 090d85d 1 1 0 0 0    EITHER    => [ 7ff32b0037a0 ] (array memory at 1015dd890)
  7ff32a02a760 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0aa2d47 1 1 0 0 0      TREF   'keyValuePairs' at 7ff32a02a740 (string memory at 101472daa)
  7ff32a02a780 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b92d47 1 1 0 0 0   LITERAL   ']' (string memory at 101472db9)
  7ff32a02a7a0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0e0875d 1 1 0 0 0  SEQUENCE    => [ 7ff32a02a720 7ff32a02a760 7ff32a02a780 ] (array memory at 1015d87e0)
  7ff32a02a7c0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 030bb5c 1 1 0 0 0    EITHER    => [ 7ff32a02a7a0 ] (array memory at 1015cbb30)
  7ff32a02a7e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d92d47 1 1 0 0 0   LITERAL   '@' (string memory at 101472dd9)
  7ff32a02a800 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0dc2d47 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101472ddc)
  7ff32a02a820 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020885d 1 1 0 0 0  SEQUENCE    => [ 7ff32a02a7e0 7ff32a02a800 ] (array memory at 1015d8820)
  7ff32a02a840 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0ef2d47 1 1 0 0 0   LITERAL   '@' (string memory at 101472def)
  7ff32a02a860 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0f22d47 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101472df2)
  7ff32a02a880 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0fe2d47 1 1 0 0 0   LITERAL   '(' (string memory at 101472dfe)
  7ff32a02a8a0 | 12 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0 12e47 1 1 0 0 0      TREF ? 'argumentList' at 7ff32a0280e0 (string memory at 101472e01)
  7ff32a02a8c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0102e47 1 1 0 0 0   LITERAL   ')' (string memory at 101472e10)
  7ff32a02a8e0 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0a35c 1 1 0 0 0  SEQUENCE    => [ 7ff32a02a840 7ff32a02a860 7ff32a02a880 7ff32a02a8a0 7ff32a02a8c0 ] (array memory at 1015ca300)
  7ff32a02a900 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 01b2e47 1 1 0 0 0   LITERAL   '@' (string memory at 101472e1b)
  7ff32a02a920 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 01f2e47 1 1 0 0 0   LITERAL   '(' (string memory at 101472e1f)
  7ff32a02a940 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0222e47 1 1 0 0 0      TREF   'argumentList' at 7ff32a0280e0 (string memory at 101472e22)
  7ff32a02a960 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0302e47 1 1 0 0 0   LITERAL   ')' (string memory at 101472e30)
  7ff32a02a980 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 030a35c 1 1 0 0 0  SEQUENCE    => [ 7ff32a02a900 7ff32a02a920 7ff32a02a940 7ff32a02a960 ] (array memory at 1015ca330)
  7ff32a02a9a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 03b2e47 1 1 0 0 0   LITERAL   '@' (string memory at 101472e3b)
  7ff32a02a9c0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a0 c5e 1 1 0 0 0    EITHER    => [ 7ff32b8044c0 ] (array memory at 1015e0ca0)
  7ff32a02a9e0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 03e2e47 1 1 0 0 0      TREF   'templateInstance' at 7ff32a02a9c0 (string memory at 101472e3e)
  7ff32a02aa00 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0885d 1 1 0 0 0  SEQUENCE    => [ 7ff32a02a9a0 7ff32a02a9e0 ] (array memory at 1015d88a0)
  7ff32a02aa20 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0885d 1 1 0 0 0    EITHER    => [ 7ff32a02a980 7ff32a02aa00 ] (array memory at 1015d88c0)
  7ff32a02aa40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0885d 1 1 0 0 0    EITHER    => [ 7ff32a02a8e0 7ff32a02aa20 ] (array memory at 1015d88e0)
  7ff32a02aa60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0895d 1 1 0 0 0    EITHER    => [ 7ff32a02a820 7ff32a02aa40 ] (array memory at 1015d8900)
  7ff32a02aa80 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b0bb5c 1 1 0 0 0    EITHER    => [ 7ff32a02aa60 ] (array memory at 1015cbbb0)
  7ff32a02aaa0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0c0df5d 1 1 0 0 0    EITHER    => [ 7ff32b800f20 ] (array memory at 1015ddfc0)
  7ff32a02aac0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0692e47 1 1 0 0 0      TREF   'pragmaExpression' at 7ff32a02aaa0 (string memory at 101472e69)
  7ff32a02aae0 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0812e47 1 1 0 0 0      TREF   'alignAttribute' at 7ff32a027e20 (string memory at 101472e81)
  7ff32a02ab00 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 030a95d 1 1 0 0 0    EITHER    => [ 7ff32a803180 ] (array memory at 1015da930)
  7ff32a02ab20 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0972e47 1 1 0 0 0      TREF   'deprecated' at 7ff32a02ab00 (string memory at 101472e97)
  7ff32a02ab40 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0a92e47 1 1 0 0 0      TREF   'atAttribute' at 7ff32a02aa80 (string memory at 101472ea9)
  7ff32a02ab60 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 080d95d 1 1 0 0 0    EITHER    => [ 7ff32b003c60 ] (array memory at 1015dd980)
  7ff32a02ab80 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0bc2e47 1 1 0 0 0      TREF   'linkageAttribute' at 7ff32a02ab60 (string memory at 101472ebc)
  7ff32a02aba0 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0d52e47 1 1 0 0 0   LITERAL   'export' (string memory at 101472ed5)
  7ff32a02abc0 |  1 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0e52e47 1 1 0 0 0   LITERAL   'package' (string memory at 101472ee5)
  7ff32a02abe0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f02e47 1 1 0 0 0   LITERAL   '(' (string memory at 101472ef0)
  7ff32a02ac00 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0f32e47 1 1 0 0 0      TREF   'identifierChain' at 7ff32a0293e0 (string memory at 101472ef3)
  7ff32a02ac20 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 42f47 1 1 0 0 0   LITERAL   ')' (string memory at 101472f04)
  7ff32a02ac40 | 14 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0a0895d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32a02abe0 7ff32a02ac00 7ff32a02ac20 ] (array memory at 1015d89a0)
  7ff32a02ac60 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0895d 1 1 0 0 0  SEQUENCE    => [ 7ff32a02abc0 7ff32a02ac40 ] (array memory at 1015d89c0)
  7ff32a02ac80 |  1 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0112f47 1 1 0 0 0   LITERAL   'private' (string memory at 101472f11)
  7ff32a02aca0 |  1 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0222f47 1 1 0 0 0   LITERAL   'protected' (string memory at 101472f22)
  7ff32a02acc0 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0352f47 1 1 0 0 0   LITERAL   'public' (string memory at 101472f35)
  7ff32a02ace0 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0452f47 1 1 0 0 0   LITERAL   'static' (string memory at 101472f45)
  7ff32a02ad00 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0552f47 1 1 0 0 0   LITERAL   'extern' (string memory at 101472f55)
  7ff32a02ad20 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0652f47 1 1 0 0 0   LITERAL   'abstract' (string memory at 101472f65)
  7ff32a02ad40 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0772f47 1 1 0 0 0   LITERAL   'final' (string memory at 101472f77)
  7ff32a02ad60 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0862f47 1 1 0 0 0   LITERAL   'override' (string memory at 101472f86)
  7ff32a02ad80 |  1 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0982f47 1 1 0 0 0   LITERAL   'synchronized' (string memory at 101472f98)
  7ff32a02ada0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0ae2f47 1 1 0 0 0   LITERAL   'auto' (string memory at 101472fae)
  7ff32a02adc0 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0bc2f47 1 1 0 0 0   LITERAL   'scope' (string memory at 101472fbc)
  7ff32a02ade0 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0cb2f47 1 1 0 0 0   LITERAL   'const' (string memory at 101472fcb)
  7ff32a02ae00 |  1 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0da2f47 1 1 0 0 0   LITERAL   'immutable' (string memory at 101472fda)
  7ff32a02ae20 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0ed2f47 1 1 0 0 0   LITERAL   'inout' (string memory at 101472fed)
  7ff32a02ae40 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0fc2f47 1 1 0 0 0   LITERAL   'shared' (string memory at 101472ffc)
  7ff32a02ae60 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 c3047 1 1 0 0 0   LITERAL   '_gshared' (string memory at 10147300c)
  7ff32a02ae80 |  1 0 0 0 0 0 0 0 7 0 0 0 0 0 0 01e3047 1 1 0 0 0   LITERAL   'nothrow' (string memory at 10147301e)
  7ff32a02aea0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 02f3047 1 1 0 0 0   LITERAL   'pure' (string memory at 10147302f)
  7ff32a02aec0 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 03d3047 1 1 0 0 0   LITERAL   'ref' (string memory at 10147303d)
  7ff32a02aee0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0895d 1 1 0 0 0    EITHER    => [ 7ff32a02aea0 7ff32a02aec0 ] (array memory at 1015d89e0)
  7ff32a02af00 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 08a5d 1 1 0 0 0    EITHER    => [ 7ff32a02ae80 7ff32a02aee0 ] (array memory at 1015d8a00)
  7ff32a02af20 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0208a5d 1 1 0 0 0    EITHER    => [ 7ff32a02ae60 7ff32a02af00 ] (array memory at 1015d8a20)
  7ff32a02af40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0408a5d 1 1 0 0 0    EITHER    => [ 7ff32a02ae40 7ff32a02af20 ] (array memory at 1015d8a40)
  7ff32a02af60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0608a5d 1 1 0 0 0    EITHER    => [ 7ff32a02ae20 7ff32a02af40 ] (array memory at 1015d8a60)
  7ff32a02af80 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0808a5d 1 1 0 0 0    EITHER    => [ 7ff32a02ae00 7ff32a02af60 ] (array memory at 1015d8a80)
  7ff32a02afa0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a08a5d 1 1 0 0 0    EITHER    => [ 7ff32a02ade0 7ff32a02af80 ] (array memory at 1015d8aa0)
  7ff32a02afc0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c08a5d 1 1 0 0 0    EITHER    => [ 7ff32a02adc0 7ff32a02afa0 ] (array memory at 1015d8ac0)
  7ff32a02afe0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e08a5d 1 1 0 0 0    EITHER    => [ 7ff32a02ada0 7ff32a02afc0 ] (array memory at 1015d8ae0)
  7ff32a02b000 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 08b5d 1 1 0 0 0    EITHER    => [ 7ff32a02ad80 7ff32a02afe0 ] (array memory at 1015d8b00)
  7ff32a02b020 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0208b5d 1 1 0 0 0    EITHER    => [ 7ff32a02ad60 7ff32a02b000 ] (array memory at 1015d8b20)
  7ff32a02b040 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0408b5d 1 1 0 0 0    EITHER    => [ 7ff32a02ad40 7ff32a02b020 ] (array memory at 1015d8b40)
  7ff32a02b060 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0608b5d 1 1 0 0 0    EITHER    => [ 7ff32a02ad20 7ff32a02b040 ] (array memory at 1015d8b60)
  7ff32a02b080 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0808b5d 1 1 0 0 0    EITHER    => [ 7ff32a02ad00 7ff32a02b060 ] (array memory at 1015d8b80)
  7ff32a02b0a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a08b5d 1 1 0 0 0    EITHER    => [ 7ff32a02ace0 7ff32a02b080 ] (array memory at 1015d8ba0)
  7ff32a02b0c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c08b5d 1 1 0 0 0    EITHER    => [ 7ff32a02acc0 7ff32a02b0a0 ] (array memory at 1015d8bc0)
  7ff32a02b0e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e08b5d 1 1 0 0 0    EITHER    => [ 7ff32a02aca0 7ff32a02b0c0 ] (array memory at 1015d8be0)
  7ff32a02b100 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 08c5d 1 1 0 0 0    EITHER    => [ 7ff32a02ac80 7ff32a02b0e0 ] (array memory at 1015d8c00)
  7ff32a02b120 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0208c5d 1 1 0 0 0    EITHER    => [ 7ff32a02ac60 7ff32a02b100 ] (array memory at 1015d8c20)
  7ff32a02b140 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0408c5d 1 1 0 0 0    EITHER    => [ 7ff32a02aba0 7ff32a02b120 ] (array memory at 1015d8c40)
  7ff32a02b160 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0608c5d 1 1 0 0 0    EITHER    => [ 7ff32a02ab80 7ff32a02b140 ] (array memory at 1015d8c60)
  7ff32a02b180 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0808c5d 1 1 0 0 0    EITHER    => [ 7ff32a02ab40 7ff32a02b160 ] (array memory at 1015d8c80)
  7ff32a02b1a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a08c5d 1 1 0 0 0    EITHER    => [ 7ff32a02ab20 7ff32a02b180 ] (array memory at 1015d8ca0)
  7ff32a02b1c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c08c5d 1 1 0 0 0    EITHER    => [ 7ff32a02aae0 7ff32a02b1a0 ] (array memory at 1015d8cc0)
  7ff32a02b1e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e08c5d 1 1 0 0 0    EITHER    => [ 7ff32a02aac0 7ff32a02b1c0 ] (array memory at 1015d8ce0)
  7ff32a02b200 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 080bd5c 1 1 0 0 0    EITHER    => [ 7ff32a02b1e0 ] (array memory at 1015cbd80)
  7ff32a02b220 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0653047 1 1 0 0 0      TREF   'attribute' at 7ff32a02b200 (string memory at 101473065)
  7ff32a02b240 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0703047 1 1 0 0 0   LITERAL   ':' (string memory at 101473070)
  7ff32a02b260 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0208d5d 1 1 0 0 0  SEQUENCE    => [ 7ff32a02b220 7ff32a02b240 ] (array memory at 1015d8d20)
  7ff32a02b280 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a0bd5c 1 1 0 0 0    EITHER    => [ 7ff32a02b260 ] (array memory at 1015cbda0)
  7ff32a02b2a0 | 22 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0913047 1 1 0 0 0      TREF + 'storageClass' at 7ff32a0276a0 (string memory at 101473091)
  7ff32a02b2c0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f0bd5c 1 1 0 0 0    EITHER    => [ 7ff32a02b460 ] (array memory at 1015cbdf0)
  7ff32a02b2e0 |  2 0 0 0 0 0 0 013 0 0 0 0 0 0 0a03047 1 1 0 0 0      TREF   'autoDeclarationPart' at 7ff32a02b2c0 (string memory at 1014730a0)
  7ff32a02b300 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b63047 1 1 0 0 0   LITERAL   ',' (string memory at 1014730b6)
  7ff32a02b320 |  2 0 0 0 0 0 0 013 0 0 0 0 0 0 0b93047 1 1 0 0 0      TREF   'autoDeclarationPart' at 7ff32a02b2c0 (string memory at 1014730b9)
  7ff32a02b340 | 34 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a08d5d 1 1 0 0 0  SEQUENCE *  => [ 7ff32a02b300 7ff32a02b320 ] (array memory at 1015d8da0)
  7ff32a02b360 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d03047 1 1 0 0 0   LITERAL   ';' (string memory at 1014730d0)
  7ff32a02b380 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 060a35c 1 1 0 0 0  SEQUENCE    => [ 7ff32a02b2a0 7ff32a02b2e0 7ff32a02b340 7ff32a02b360 ] (array memory at 1015ca360)
  7ff32a02b3a0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d0bd5c 1 1 0 0 0    EITHER    => [ 7ff32a02b380 ] (array memory at 1015cbdd0)
  7ff32a02b3c0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0f53047 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 1014730f5)
  7ff32a02b3e0 | 12 0 0 0 0 0 0 012 0 0 0 0 0 0 0 03147 1 1 0 0 0      TREF ? 'templateParameters' at 7ff32a0279a0 (string memory at 101473100)
  7ff32a02b400 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0153147 1 1 0 0 0   LITERAL   '=' (string memory at 101473115)
  7ff32a02b420 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a0d65d 1 1 0 0 0    EITHER    => [ 7ff32b002a80 ] (array memory at 1015dd6a0)
  7ff32a02b440 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0183147 1 1 0 0 0      TREF   'initializer' at 7ff32a02b420 (string memory at 101473118)
  7ff32a02b460 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 090a35c 1 1 0 0 0  SEQUENCE    => [ 7ff32a02b3c0 7ff32a02b3e0 7ff32a02b400 7ff32a02b440 ] (array memory at 1015ca390)
  7ff32a02b480 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0423147 1 1 0 0 0   LITERAL   '{' (string memory at 101473142)
  7ff32a02b4a0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 010a85d 1 1 0 0 0    EITHER    => [ 7ff32a802ce0 ] (array memory at 1015da810)
  7ff32a02b4c0 | 12 0 0 0 0 0 0 019 0 0 0 0 0 0 0453147 1 1 0 0 0      TREF ? 'declarationsAndStatements' at 7ff32a02b4a0 (string memory at 101473145)
  7ff32a02b4e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0613147 1 1 0 0 0   LITERAL   '}' (string memory at 101473161)
  7ff32a02b500 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0408e5d 1 1 0 0 0  SEQUENCE    => [ 7ff32a02b480 7ff32a02b4c0 7ff32a02b4e0 ] (array memory at 1015d8e40)
  7ff32a02b520 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 010be5c 1 1 0 0 0    EITHER    => [ 7ff32a02b500 ] (array memory at 1015cbe10)
  7ff32a02b540 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0823147 1 1 0 0 0   LITERAL   'break' (string memory at 101473182)
  7ff32a02b560 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0893147 1 1 0 0 0      TREF ? 'Identifier' at 7ff32a027960 (string memory at 101473189)
  7ff32a02b580 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0963147 1 1 0 0 0   LITERAL   ';' (string memory at 101473196)
  7ff32a02b5a0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0808e5d 1 1 0 0 0  SEQUENCE    => [ 7ff32a02b540 7ff32a02b560 7ff32a02b580 ] (array memory at 1015d8e80)
  7ff32a02b5c0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 030be5c 1 1 0 0 0    EITHER    => [ 7ff32a02b5a0 ] (array memory at 1015cbe30)
  7ff32a02b5e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e0325e 1 1 0 0 0    EITHER    => [ 7ff32b805e20 ] (array memory at 1015e32e0)
  7ff32a02b600 |  2 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0b13147 1 1 0 0 0      TREF   'type2' at 7ff32a02b5e0 (string memory at 1014731b1)
  7ff32a02b620 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 050be5c 1 1 0 0 0    EITHER    => [ 7ff32a02b600 ] (array memory at 1015cbe50)
  7ff32a02b640 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0d33147 1 1 0 0 0      TREF   'baseClass' at 7ff32a02b620 (string memory at 1014731d3)
  7ff32a02b660 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0df3147 1 1 0 0 0   LITERAL   ',' (string memory at 1014731df)
  7ff32a02b680 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0e23147 1 1 0 0 0      TREF   'baseClass' at 7ff32a02b620 (string memory at 1014731e2)
  7ff32a02b6a0 | 34 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 08f5d 1 1 0 0 0  SEQUENCE *  => [ 7ff32a02b660 7ff32a02b680 ] (array memory at 1015d8f00)
  7ff32a02b6c0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0208f5d 1 1 0 0 0  SEQUENCE    => [ 7ff32a02b640 7ff32a02b6a0 ] (array memory at 1015d8f20)
  7ff32a02b6e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 080be5c 1 1 0 0 0    EITHER    => [ 7ff32a02b6c0 ] (array memory at 1015cbe80)
  7ff32a02b700 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 b3247 1 1 0 0 0   LITERAL   'bool' (string memory at 10147320b)
  7ff32a02b720 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0193247 1 1 0 0 0   LITERAL   'byte' (string memory at 101473219)
  7ff32a02b740 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0273247 1 1 0 0 0   LITERAL   'ubyte' (string memory at 101473227)
  7ff32a02b760 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0363247 1 1 0 0 0   LITERAL   'short' (string memory at 101473236)
  7ff32a02b780 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0453247 1 1 0 0 0   LITERAL   'ushort' (string memory at 101473245)
  7ff32a02b7a0 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0553247 1 1 0 0 0   LITERAL   'int' (string memory at 101473255)
  7ff32a02b7c0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0623247 1 1 0 0 0   LITERAL   'uint' (string memory at 101473262)
  7ff32a02b7e0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0703247 1 1 0 0 0   LITERAL   'long' (string memory at 101473270)
  7ff32a02b800 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 07e3247 1 1 0 0 0   LITERAL   'ulong' (string memory at 10147327e)
  7ff32a02b820 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 08d3247 1 1 0 0 0   LITERAL   'char' (string memory at 10147328d)
  7ff32a02b840 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 09b3247 1 1 0 0 0   LITERAL   'wchar' (string memory at 10147329b)
  7ff32a02b860 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0aa3247 1 1 0 0 0   LITERAL   'dchar' (string memory at 1014732aa)
  7ff32a02b880 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0b93247 1 1 0 0 0   LITERAL   'float' (string memory at 1014732b9)
  7ff32a02b8a0 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0c83247 1 1 0 0 0   LITERAL   'double' (string memory at 1014732c8)
  7ff32a02b8c0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0d83247 1 1 0 0 0   LITERAL   'real' (string memory at 1014732d8)
  7ff32a02b8e0 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0e63247 1 1 0 0 0   LITERAL   'ifloat' (string memory at 1014732e6)
  7ff32a02b900 |  1 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0f63247 1 1 0 0 0   LITERAL   'idouble' (string memory at 1014732f6)
  7ff32a02b920 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 73347 1 1 0 0 0   LITERAL   'ireal' (string memory at 101473307)
  7ff32a02b940 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0163347 1 1 0 0 0   LITERAL   'cfloat' (string memory at 101473316)
  7ff32a02b960 |  1 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0263347 1 1 0 0 0   LITERAL   'cdouble' (string memory at 101473326)
  7ff32a02b980 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0373347 1 1 0 0 0   LITERAL   'creal' (string memory at 101473337)
  7ff32a02b9a0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0463347 1 1 0 0 0   LITERAL   'void' (string memory at 101473346)
  7ff32a02b9c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0608f5d 1 1 0 0 0    EITHER    => [ 7ff32a02b980 7ff32a02b9a0 ] (array memory at 1015d8f60)
  7ff32a02b9e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0808f5d 1 1 0 0 0    EITHER    => [ 7ff32a02b960 7ff32a02b9c0 ] (array memory at 1015d8f80)
  7ff32a02ba00 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a08f5d 1 1 0 0 0    EITHER    => [ 7ff32a02b940 7ff32a02b9e0 ] (array memory at 1015d8fa0)
  7ff32a02ba20 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c08f5d 1 1 0 0 0    EITHER    => [ 7ff32a02b920 7ff32a02ba00 ] (array memory at 1015d8fc0)
  7ff32a02ba40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e08f5d 1 1 0 0 0    EITHER    => [ 7ff32a02b900 7ff32a02ba20 ] (array memory at 1015d8fe0)
  7ff32a02ba60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0905d 1 1 0 0 0    EITHER    => [ 7ff32a02b8e0 7ff32a02ba40 ] (array memory at 1015d9000)
  7ff32a02ba80 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020905d 1 1 0 0 0    EITHER    => [ 7ff32a02b8c0 7ff32a02ba60 ] (array memory at 1015d9020)
  7ff32a02baa0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040905d 1 1 0 0 0    EITHER    => [ 7ff32a02b8a0 7ff32a02ba80 ] (array memory at 1015d9040)
  7ff32a02bac0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060905d 1 1 0 0 0    EITHER    => [ 7ff32a02b880 7ff32a02baa0 ] (array memory at 1015d9060)
  7ff32a02bae0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080905d 1 1 0 0 0    EITHER    => [ 7ff32a02b860 7ff32a02bac0 ] (array memory at 1015d9080)
  7ff32a02bb00 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0905d 1 1 0 0 0    EITHER    => [ 7ff32a02b840 7ff32a02bae0 ] (array memory at 1015d90a0)
  7ff32a02bb20 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0905d 1 1 0 0 0    EITHER    => [ 7ff32a02b820 7ff32a02bb00 ] (array memory at 1015d90c0)
  7ff32a02bb40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0905d 1 1 0 0 0    EITHER    => [ 7ff32a02b800 7ff32a02bb20 ] (array memory at 1015d90e0)
  7ff32a02bb60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0915d 1 1 0 0 0    EITHER    => [ 7ff32a02b7e0 7ff32a02bb40 ] (array memory at 1015d9100)
  7ff32a02bb80 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020915d 1 1 0 0 0    EITHER    => [ 7ff32a02b7c0 7ff32a02bb60 ] (array memory at 1015d9120)
  7ff32a02bba0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040915d 1 1 0 0 0    EITHER    => [ 7ff32a02b7a0 7ff32a02bb80 ] (array memory at 1015d9140)
  7ff32a02bbc0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060915d 1 1 0 0 0    EITHER    => [ 7ff32a02b780 7ff32a02bba0 ] (array memory at 1015d9160)
  7ff32a02bbe0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080915d 1 1 0 0 0    EITHER    => [ 7ff32a02b760 7ff32a02bbc0 ] (array memory at 1015d9180)
  7ff32a800000 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0915d 1 1 0 0 0    EITHER    => [ 7ff32a02b740 7ff32a02bbe0 ] (array memory at 1015d91a0)
  7ff32a800020 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0915d 1 1 0 0 0    EITHER    => [ 7ff32a02b720 7ff32a800000 ] (array memory at 1015d91c0)
  7ff32a800040 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0915d 1 1 0 0 0    EITHER    => [ 7ff32a02b700 7ff32a800020 ] (array memory at 1015d91e0)
  7ff32a800060 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f0bf5c 1 1 0 0 0    EITHER    => [ 7ff32a800040 ] (array memory at 1015cbff0)
  7ff32a800080 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 06e3347 1 1 0 0 0   LITERAL   'case' (string memory at 10147336e)
  7ff32a8000a0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0743347 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 101473374)
  7ff32a8000c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0863347 1 1 0 0 0   LITERAL   ':' (string memory at 101473386)
  7ff32a8000e0 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 08a3347 1 1 0 0 0   LITERAL   '...' (string memory at 10147338a)
  7ff32a800100 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0903347 1 1 0 0 0   LITERAL   'case' (string memory at 101473390)
  7ff32a800120 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0963347 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 101473396)
  7ff32a800140 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a83347 1 1 0 0 0   LITERAL   ':' (string memory at 1014733a8)
  7ff32a800160 |  2 0 0 0 0 0 0 019 0 0 0 0 0 0 0ab3347 1 1 0 0 0      TREF   'declarationsAndStatements' at 7ff32a02b4a0 (string memory at 1014733ab)
  7ff32a800180 |  4 0 0 0 0 0 0 0 8 0 0 0 0 0 0 020 15d 1 1 0 0 0  SEQUENCE    => [ 7ff32a800080 7ff32a8000a0 7ff32a8000c0 7ff32a8000e0 7ff32a800100 7ff32a800120 7ff32a800140 7ff32a800160 ] (array memory at 1015d0120)
  7ff32a8001a0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 010a05d 1 1 0 0 0    EITHER    => [ 7ff32a800180 ] (array memory at 1015da010)
  7ff32a8001c0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0e23347 1 1 0 0 0   LITERAL   'case' (string memory at 1014733e2)
  7ff32a8001e0 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0e83347 1 1 0 0 0      TREF   'argumentList' at 7ff32a0280e0 (string memory at 1014733e8)
  7ff32a800200 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f63347 1 1 0 0 0   LITERAL   ':' (string memory at 1014733f6)
  7ff32a800220 |  2 0 0 0 0 0 0 019 0 0 0 0 0 0 0f93347 1 1 0 0 0      TREF   'declarationsAndStatements' at 7ff32a02b4a0 (string memory at 1014733f9)
  7ff32a800240 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0c0a35c 1 1 0 0 0  SEQUENCE    => [ 7ff32a8001c0 7ff32a8001e0 7ff32a800200 7ff32a800220 ] (array memory at 1015ca3c0)
  7ff32a800260 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 030a05d 1 1 0 0 0    EITHER    => [ 7ff32a800240 ] (array memory at 1015da030)
  7ff32a800280 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0313447 1 1 0 0 0   LITERAL   'cast' (string memory at 101473431)
  7ff32a8002a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0383447 1 1 0 0 0   LITERAL   '(' (string memory at 101473438)
  7ff32a8002c0 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 03c3447 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 10147343c)
  7ff32a8002e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 030a15d 1 1 0 0 0    EITHER    => [ 7ff32a8006a0 ] (array memory at 1015da130)
  7ff32a800300 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0433447 1 1 0 0 0      TREF   'castQualifier' at 7ff32a8002e0 (string memory at 101473443)
  7ff32a800320 | 18 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0925d 1 1 0 0 0    EITHER ?  => [ 7ff32a8002c0 7ff32a800300 ] (array memory at 1015d92e0)
  7ff32a800340 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0543447 1 1 0 0 0   LITERAL   ')' (string memory at 101473454)
  7ff32a800360 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0c0375e 1 1 0 0 0    EITHER    => [ 7ff32b807120 ] (array memory at 1015e37c0)
  7ff32a800380 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0573447 1 1 0 0 0      TREF   'unaryExpression' at 7ff32a800360 (string memory at 101473457)
  7ff32a8003a0 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0f0a35c 1 1 0 0 0  SEQUENCE    => [ 7ff32a800280 7ff32a8002a0 7ff32a800320 7ff32a800340 7ff32a800380 ] (array memory at 1015ca3f0)
  7ff32a8003c0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 070a05d 1 1 0 0 0    EITHER    => [ 7ff32a8003a0 ] (array memory at 1015da070)
  7ff32a8003e0 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0863447 1 1 0 0 0   LITERAL   'const' (string memory at 101473486)
  7ff32a800400 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0953447 1 1 0 0 0   LITERAL   'const' (string memory at 101473495)
  7ff32a800420 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 09d3447 1 1 0 0 0   LITERAL   'shared' (string memory at 10147349d)
  7ff32a800440 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040935d 1 1 0 0 0  SEQUENCE    => [ 7ff32a800400 7ff32a800420 ] (array memory at 1015d9340)
  7ff32a800460 |  1 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0ad3447 1 1 0 0 0   LITERAL   'immutable' (string memory at 1014734ad)
  7ff32a800480 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0c03447 1 1 0 0 0   LITERAL   'inout' (string memory at 1014734c0)
  7ff32a8004a0 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0cf3447 1 1 0 0 0   LITERAL   'inout' (string memory at 1014734cf)
  7ff32a8004c0 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0d73447 1 1 0 0 0   LITERAL   'shared' (string memory at 1014734d7)
  7ff32a8004e0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060935d 1 1 0 0 0  SEQUENCE    => [ 7ff32a8004a0 7ff32a8004c0 ] (array memory at 1015d9360)
  7ff32a800500 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0e73447 1 1 0 0 0   LITERAL   'shared' (string memory at 1014734e7)
  7ff32a800520 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0f73447 1 1 0 0 0   LITERAL   'shared' (string memory at 1014734f7)
  7ff32a800540 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 03547 1 1 0 0 0   LITERAL   'const' (string memory at 101473500)
  7ff32a800560 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080935d 1 1 0 0 0  SEQUENCE    => [ 7ff32a800520 7ff32a800540 ] (array memory at 1015d9380)
  7ff32a800580 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 f3547 1 1 0 0 0   LITERAL   'shared' (string memory at 10147350f)
  7ff32a8005a0 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0183547 1 1 0 0 0   LITERAL   'inout' (string memory at 101473518)
  7ff32a8005c0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0935d 1 1 0 0 0  SEQUENCE    => [ 7ff32a800580 7ff32a8005a0 ] (array memory at 1015d93a0)
  7ff32a8005e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0935d 1 1 0 0 0    EITHER    => [ 7ff32a800560 7ff32a8005c0 ] (array memory at 1015d93c0)
  7ff32a800600 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0935d 1 1 0 0 0    EITHER    => [ 7ff32a800500 7ff32a8005e0 ] (array memory at 1015d93e0)
  7ff32a800620 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0945d 1 1 0 0 0    EITHER    => [ 7ff32a8004e0 7ff32a800600 ] (array memory at 1015d9400)
  7ff32a800640 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020945d 1 1 0 0 0    EITHER    => [ 7ff32a800480 7ff32a800620 ] (array memory at 1015d9420)
  7ff32a800660 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040945d 1 1 0 0 0    EITHER    => [ 7ff32a800460 7ff32a800640 ] (array memory at 1015d9440)
  7ff32a800680 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060945d 1 1 0 0 0    EITHER    => [ 7ff32a800440 7ff32a800660 ] (array memory at 1015d9460)
  7ff32a8006a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080945d 1 1 0 0 0    EITHER    => [ 7ff32a8003e0 7ff32a800680 ] (array memory at 1015d9480)
  7ff32a8006c0 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0343547 1 1 0 0 0   LITERAL   'catch' (string memory at 101473534)
  7ff32a8006e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 03c3547 1 1 0 0 0   LITERAL   '(' (string memory at 10147353c)
  7ff32a800700 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 03f3547 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 10147353f)
  7ff32a800720 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0443547 1 1 0 0 0      TREF ? 'Identifier' at 7ff32a027960 (string memory at 101473544)
  7ff32a800740 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0513547 1 1 0 0 0   LITERAL   ')' (string memory at 101473551)
  7ff32a800760 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 040a85d 1 1 0 0 0    EITHER    => [ 7ff32a802d60 ] (array memory at 1015da840)
  7ff32a800780 |  2 0 0 0 0 0 0 016 0 0 0 0 0 0 0543547 1 1 0 0 0      TREF   'declarationOrStatement' at 7ff32a800760 (string memory at 101473554)
  7ff32a8007a0 |  4 0 0 0 0 0 0 0 6 0 0 0 0 0 0 040c15c 1 1 0 0 0  SEQUENCE    => [ 7ff32a8006c0 7ff32a8006e0 7ff32a800700 7ff32a800720 7ff32a800740 7ff32a800780 ] (array memory at 1015cc140)
  7ff32a8007c0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 050a15d 1 1 0 0 0    EITHER    => [ 7ff32a8007a0 ] (array memory at 1015da150)
  7ff32a8007e0 | 22 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0833547 1 1 0 0 0      TREF + 'catch' at 7ff32a8007c0 (string memory at 101473583)
  7ff32a800800 | 32 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0913547 1 1 0 0 0      TREF * 'catch' at 7ff32a8007c0 (string memory at 101473591)
  7ff32a800820 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d0d85d 1 1 0 0 0    EITHER    => [ 7ff32b0038a0 ] (array memory at 1015dd8d0)
  7ff32a800840 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0983547 1 1 0 0 0      TREF   'lastCatch' at 7ff32a800820 (string memory at 101473598)
  7ff32a800860 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020955d 1 1 0 0 0  SEQUENCE    => [ 7ff32a800800 7ff32a800840 ] (array memory at 1015d9520)
  7ff32a800880 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040955d 1 1 0 0 0    EITHER    => [ 7ff32a8007e0 7ff32a800860 ] (array memory at 1015d9540)
  7ff32a8008a0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 080a15d 1 1 0 0 0    EITHER    => [ 7ff32a800880 ] (array memory at 1015da180)
  7ff32a8008c0 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0c43547 1 1 0 0 0   LITERAL   'class' (string memory at 1014735c4)
  7ff32a8008e0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0cb3547 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 1014735cb)
  7ff32a800900 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d73547 1 1 0 0 0   LITERAL   ';' (string memory at 1014735d7)
  7ff32a800920 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 080955d 1 1 0 0 0  SEQUENCE    => [ 7ff32a8008c0 7ff32a8008e0 7ff32a800900 ] (array memory at 1015d9580)
  7ff32a800940 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0e23547 1 1 0 0 0   LITERAL   'class' (string memory at 1014735e2)
  7ff32a800960 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0e93547 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 1014735e9)
  7ff32a800980 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f63547 1 1 0 0 0   LITERAL   ':' (string memory at 1014735f6)
  7ff32a8009a0 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0f93547 1 1 0 0 0      TREF   'baseClassList' at 7ff32a02b6e0 (string memory at 1014735f9)
  7ff32a8009c0 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0955d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32a800980 7ff32a8009a0 ] (array memory at 1015d95c0)
  7ff32a8009e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d0 95e 1 1 0 0 0    EITHER    => [ 7ff32b803960 ] (array memory at 1015e09d0)
  7ff32a800a00 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0 93647 1 1 0 0 0      TREF   'structBody' at 7ff32a8009e0 (string memory at 101473609)
  7ff32a800a20 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 050a45c 1 1 0 0 0  SEQUENCE    => [ 7ff32a800940 7ff32a800960 7ff32a8009c0 7ff32a800a00 ] (array memory at 1015ca450)
  7ff32a800a40 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 01c3647 1 1 0 0 0   LITERAL   'class' (string memory at 10147361c)
  7ff32a800a60 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0233647 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101473623)
  7ff32a800a80 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 02e3647 1 1 0 0 0      TREF   'templateParameters' at 7ff32a0279a0 (string memory at 10147362e)
  7ff32a800aa0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e0a45d 1 1 0 0 0    EITHER    => [ 7ff32a801da0 ] (array memory at 1015da4e0)
  7ff32a800ac0 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0413647 1 1 0 0 0      TREF ? 'constraint' at 7ff32a800aa0 (string memory at 101473641)
  7ff32a800ae0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 04e3647 1 1 0 0 0      TREF   'structBody' at 7ff32a8009e0 (string memory at 10147364e)
  7ff32a800b00 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 05c3647 1 1 0 0 0   LITERAL   ';' (string memory at 10147365c)
  7ff32a800b20 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040965d 1 1 0 0 0    EITHER    => [ 7ff32a800ae0 7ff32a800b00 ] (array memory at 1015d9640)
  7ff32a800b40 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 080a45c 1 1 0 0 0  SEQUENCE    => [ 7ff32a800a40 7ff32a800a60 7ff32a800a80 7ff32a800ac0 7ff32a800b20 ] (array memory at 1015ca480)
  7ff32a800b60 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0683647 1 1 0 0 0   LITERAL   'class' (string memory at 101473668)
  7ff32a800b80 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 06f3647 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 10147366f)
  7ff32a800ba0 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 07a3647 1 1 0 0 0      TREF   'templateParameters' at 7ff32a0279a0 (string memory at 10147367a)
  7ff32a800bc0 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 08d3647 1 1 0 0 0      TREF ? 'constraint' at 7ff32a800aa0 (string memory at 10147368d)
  7ff32a800be0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 09b3647 1 1 0 0 0   LITERAL   ':' (string memory at 10147369b)
  7ff32a800c00 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 09e3647 1 1 0 0 0      TREF   'baseClassList' at 7ff32a02b6e0 (string memory at 10147369e)
  7ff32a800c20 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080965d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32a800be0 7ff32a800c00 ] (array memory at 1015d9680)
  7ff32a800c40 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0ae3647 1 1 0 0 0      TREF   'structBody' at 7ff32a8009e0 (string memory at 1014736ae)
  7ff32a800c60 |  4 0 0 0 0 0 0 0 6 0 0 0 0 0 0 080c15c 1 1 0 0 0  SEQUENCE    => [ 7ff32a800b60 7ff32a800b80 7ff32a800ba0 7ff32a800bc0 7ff32a800c20 7ff32a800c40 ] (array memory at 1015cc180)
  7ff32a800c80 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0c13647 1 1 0 0 0   LITERAL   'class' (string memory at 1014736c1)
  7ff32a800ca0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0c83647 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 1014736c8)
  7ff32a800cc0 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 0d33647 1 1 0 0 0      TREF   'templateParameters' at 7ff32a0279a0 (string memory at 1014736d3)
  7ff32a800ce0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e83647 1 1 0 0 0   LITERAL   ':' (string memory at 1014736e8)
  7ff32a800d00 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0eb3647 1 1 0 0 0      TREF   'baseClassList' at 7ff32a02b6e0 (string memory at 1014736eb)
  7ff32a800d20 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0965d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32a800ce0 7ff32a800d00 ] (array memory at 1015d96c0)
  7ff32a800d40 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0fb3647 1 1 0 0 0      TREF ? 'constraint' at 7ff32a800aa0 (string memory at 1014736fb)
  7ff32a800d60 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0 73747 1 1 0 0 0      TREF   'structBody' at 7ff32a8009e0 (string memory at 101473707)
  7ff32a800d80 |  4 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0c0c15c 1 1 0 0 0  SEQUENCE    => [ 7ff32a800c80 7ff32a800ca0 7ff32a800cc0 7ff32a800d20 7ff32a800d40 7ff32a800d60 ] (array memory at 1015cc1c0)
  7ff32a800da0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0965d 1 1 0 0 0    EITHER    => [ 7ff32a800c60 7ff32a800d80 ] (array memory at 1015d96e0)
  7ff32a800dc0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0975d 1 1 0 0 0    EITHER    => [ 7ff32a800b40 7ff32a800da0 ] (array memory at 1015d9700)
  7ff32a800de0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020975d 1 1 0 0 0    EITHER    => [ 7ff32a800a20 7ff32a800dc0 ] (array memory at 1015d9720)
  7ff32a800e00 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040975d 1 1 0 0 0    EITHER    => [ 7ff32a800920 7ff32a800de0 ] (array memory at 1015d9740)
  7ff32a800e20 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 070a25d 1 1 0 0 0    EITHER    => [ 7ff32a800e00 ] (array memory at 1015da270)
  7ff32a800e40 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 020 55e 1 1 0 0 0    EITHER    => [ 7ff32b802680 ] (array memory at 1015e0520)
  7ff32a800e60 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0303747 1 1 0 0 0      TREF   'shiftExpression' at 7ff32a800e40 (string memory at 101473730)
  7ff32a800e80 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 080ab5d 1 1 0 0 0    EITHER    => [ 7ff32a803c60 ] (array memory at 1015dab80)
  7ff32a800ea0 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0473747 1 1 0 0 0      TREF   'equalExpression' at 7ff32a800e80 (string memory at 101473747)
  7ff32a800ec0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 070d35d 1 1 0 0 0    EITHER    => [ 7ff32b001be0 ] (array memory at 1015dd370)
  7ff32a800ee0 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 05e3747 1 1 0 0 0      TREF   'identityExpression' at 7ff32a800ec0 (string memory at 10147375e)
  7ff32a800f00 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 030 35e 1 1 0 0 0    EITHER    => [ 7ff32b801e40 ] (array memory at 1015e0330)
  7ff32a800f20 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0783747 1 1 0 0 0      TREF   'relExpression' at 7ff32a800f00 (string memory at 101473778)
  7ff32a800f40 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f0d55d 1 1 0 0 0    EITHER    => [ 7ff32b0028a0 ] (array memory at 1015dd5f0)
  7ff32a800f60 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 08d3747 1 1 0 0 0      TREF   'inExpression' at 7ff32a800f40 (string memory at 10147378d)
  7ff32a800f80 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020985d 1 1 0 0 0    EITHER    => [ 7ff32a800f20 7ff32a800f60 ] (array memory at 1015d9820)
  7ff32a800fa0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040985d 1 1 0 0 0    EITHER    => [ 7ff32a800ee0 7ff32a800f80 ] (array memory at 1015d9840)
  7ff32a800fc0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060985d 1 1 0 0 0    EITHER    => [ 7ff32a800ea0 7ff32a800fa0 ] (array memory at 1015d9860)
  7ff32a800fe0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080985d 1 1 0 0 0    EITHER    => [ 7ff32a800e60 7ff32a800fc0 ] (array memory at 1015d9880)
  7ff32a801000 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 030395e 1 1 0 0 0    EITHER    => [ 7ff32b807680 ] (array memory at 1015e3930)
  7ff32a801020 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0bb3747 1 1 0 0 0      TREF   'versionCondition' at 7ff32a801000 (string memory at 1014737bb)
  7ff32a801040 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 090a55d 1 1 0 0 0    EITHER    => [ 7ff32a8020a0 ] (array memory at 1015da590)
  7ff32a801060 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0d33747 1 1 0 0 0      TREF   'debugCondition' at 7ff32a801040 (string memory at 1014737d3)
  7ff32a801080 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 080 85e 1 1 0 0 0    EITHER    => [ 7ff32b803480 ] (array memory at 1015e0880)
  7ff32a8010a0 |  2 0 0 0 0 0 0 011 0 0 0 0 0 0 0e93747 1 1 0 0 0      TREF   'staticIfCondition' at 7ff32a801080 (string memory at 1014737e9)
  7ff32a8010c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0995d 1 1 0 0 0    EITHER    => [ 7ff32a801060 7ff32a8010a0 ] (array memory at 1015d9900)
  7ff32a8010e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020995d 1 1 0 0 0    EITHER    => [ 7ff32a801020 7ff32a8010c0 ] (array memory at 1015d9920)
  7ff32a801100 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 010a35d 1 1 0 0 0    EITHER    => [ 7ff32a8010e0 ] (array memory at 1015da310)
  7ff32a801120 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0223847 1 1 0 0 0      TREF   'compileCondition' at 7ff32a801100 (string memory at 101473822)
  7ff32a801140 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 010a65d 1 1 0 0 0    EITHER    => [ 7ff32a8022e0 ] (array memory at 1015da610)
  7ff32a801160 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0333847 1 1 0 0 0      TREF   'declaration' at 7ff32a801140 (string memory at 101473833)
  7ff32a801180 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080995d 1 1 0 0 0  SEQUENCE    => [ 7ff32a801120 7ff32a801160 ] (array memory at 1015d9980)
  7ff32a8011a0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0463847 1 1 0 0 0      TREF   'compileCondition' at 7ff32a801100 (string memory at 101473846)
  7ff32a8011c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0583847 1 1 0 0 0   LITERAL   '{' (string memory at 101473858)
  7ff32a8011e0 | 32 0 0 0 0 0 0 0 b 0 0 0 0 0 0 05b3847 1 1 0 0 0      TREF * 'declaration' at 7ff32a801140 (string memory at 10147385b)
  7ff32a801200 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0693847 1 1 0 0 0   LITERAL   '}' (string memory at 101473869)
  7ff32a801220 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 010a55c 1 1 0 0 0  SEQUENCE    => [ 7ff32a8011a0 7ff32a8011c0 7ff32a8011e0 7ff32a801200 ] (array memory at 1015ca510)
  7ff32a801240 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0733847 1 1 0 0 0      TREF   'compileCondition' at 7ff32a801100 (string memory at 101473873)
  7ff32a801260 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0853847 1 1 0 0 0   LITERAL   ':' (string memory at 101473885)
  7ff32a801280 | 22 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0883847 1 1 0 0 0      TREF + 'declaration' at 7ff32a801140 (string memory at 101473888)
  7ff32a8012a0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0c0995d 1 1 0 0 0  SEQUENCE    => [ 7ff32a801240 7ff32a801260 7ff32a801280 ] (array memory at 1015d99c0)
  7ff32a8012c0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 09c3847 1 1 0 0 0      TREF   'compileCondition' at 7ff32a801100 (string memory at 10147389c)
  7ff32a8012e0 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0ad3847 1 1 0 0 0      TREF   'declaration' at 7ff32a801140 (string memory at 1014738ad)
  7ff32a801300 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0ba3847 1 1 0 0 0   LITERAL   'else' (string memory at 1014738ba)
  7ff32a801320 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0c13847 1 1 0 0 0   LITERAL   ':' (string memory at 1014738c1)
  7ff32a801340 | 32 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0c43847 1 1 0 0 0      TREF * 'declaration' at 7ff32a801140 (string memory at 1014738c4)
  7ff32a801360 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 040a55c 1 1 0 0 0  SEQUENCE    => [ 7ff32a8012c0 7ff32a8012e0 7ff32a801300 7ff32a801320 7ff32a801340 ] (array memory at 1015ca540)
  7ff32a801380 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0d83847 1 1 0 0 0      TREF   'compileCondition' at 7ff32a801100 (string memory at 1014738d8)
  7ff32a8013a0 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0e93847 1 1 0 0 0      TREF   'declaration' at 7ff32a801140 (string memory at 1014738e9)
  7ff32a8013c0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0f63847 1 1 0 0 0   LITERAL   'else' (string memory at 1014738f6)
  7ff32a8013e0 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0fc3847 1 1 0 0 0      TREF   'declaration' at 7ff32a801140 (string memory at 1014738fc)
  7ff32a801400 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 070a55c 1 1 0 0 0  SEQUENCE    => [ 7ff32a801380 7ff32a8013a0 7ff32a8013c0 7ff32a8013e0 ] (array memory at 1015ca570)
  7ff32a801420 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0 f3947 1 1 0 0 0      TREF   'compileCondition' at 7ff32a801100 (string memory at 10147390f)
  7ff32a801440 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0203947 1 1 0 0 0      TREF   'declaration' at 7ff32a801140 (string memory at 101473920)
  7ff32a801460 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 02d3947 1 1 0 0 0   LITERAL   'else' (string memory at 10147392d)
  7ff32a801480 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0343947 1 1 0 0 0   LITERAL   '{' (string memory at 101473934)
  7ff32a8014a0 | 32 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0373947 1 1 0 0 0      TREF * 'declaration' at 7ff32a801140 (string memory at 101473937)
  7ff32a8014c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0453947 1 1 0 0 0   LITERAL   '}' (string memory at 101473945)
  7ff32a8014e0 |  4 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0c25c 1 1 0 0 0  SEQUENCE    => [ 7ff32a801420 7ff32a801440 7ff32a801460 7ff32a801480 7ff32a8014a0 7ff32a8014c0 ] (array memory at 1015cc200)
  7ff32a801500 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 04f3947 1 1 0 0 0      TREF   'compileCondition' at 7ff32a801100 (string memory at 10147394f)
  7ff32a801520 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0613947 1 1 0 0 0   LITERAL   '{' (string memory at 101473961)
  7ff32a801540 | 32 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0643947 1 1 0 0 0      TREF * 'declaration' at 7ff32a801140 (string memory at 101473964)
  7ff32a801560 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0723947 1 1 0 0 0   LITERAL   '}' (string memory at 101473972)
  7ff32a801580 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0763947 1 1 0 0 0   LITERAL   'else' (string memory at 101473976)
  7ff32a8015a0 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 07c3947 1 1 0 0 0      TREF   'declaration' at 7ff32a801140 (string memory at 10147397c)
  7ff32a8015c0 |  4 0 0 0 0 0 0 0 6 0 0 0 0 0 0 040c25c 1 1 0 0 0  SEQUENCE    => [ 7ff32a801500 7ff32a801520 7ff32a801540 7ff32a801560 7ff32a801580 7ff32a8015a0 ] (array memory at 1015cc240)
  7ff32a8015e0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 08f3947 1 1 0 0 0      TREF   'compileCondition' at 7ff32a801100 (string memory at 10147398f)
  7ff32a801600 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a13947 1 1 0 0 0   LITERAL   '{' (string memory at 1014739a1)
  7ff32a801620 | 32 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0a43947 1 1 0 0 0      TREF * 'declaration' at 7ff32a801140 (string memory at 1014739a4)
  7ff32a801640 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b23947 1 1 0 0 0   LITERAL   '}' (string memory at 1014739b2)
  7ff32a801660 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0b63947 1 1 0 0 0   LITERAL   'else' (string memory at 1014739b6)
  7ff32a801680 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0bd3947 1 1 0 0 0   LITERAL   '{' (string memory at 1014739bd)
  7ff32a8016a0 | 32 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0c03947 1 1 0 0 0      TREF * 'declaration' at 7ff32a801140 (string memory at 1014739c0)
  7ff32a8016c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0ce3947 1 1 0 0 0   LITERAL   '}' (string memory at 1014739ce)
  7ff32a8016e0 |  4 0 0 0 0 0 0 0 8 0 0 0 0 0 0 080 15d 1 1 0 0 0  SEQUENCE    => [ 7ff32a8015e0 7ff32a801600 7ff32a801620 7ff32a801640 7ff32a801660 7ff32a801680 7ff32a8016a0 7ff32a8016c0 ] (array memory at 1015d0180)
  7ff32a801700 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0d83947 1 1 0 0 0      TREF   'compileCondition' at 7ff32a801100 (string memory at 1014739d8)
  7ff32a801720 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0ea3947 1 1 0 0 0   LITERAL   '{' (string memory at 1014739ea)
  7ff32a801740 | 32 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0ed3947 1 1 0 0 0      TREF * 'declaration' at 7ff32a801140 (string memory at 1014739ed)
  7ff32a801760 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0fb3947 1 1 0 0 0   LITERAL   '}' (string memory at 1014739fb)
  7ff32a801780 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0ff3947 1 1 0 0 0   LITERAL   'else' (string memory at 1014739ff)
  7ff32a8017a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 63a47 1 1 0 0 0   LITERAL   ':' (string memory at 101473a06)
  7ff32a8017c0 | 32 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0 93a47 1 1 0 0 0      TREF * 'declaration' at 7ff32a801140 (string memory at 101473a09)
  7ff32a8017e0 |  4 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0c0c25c 1 1 0 0 0  SEQUENCE    => [ 7ff32a801700 7ff32a801720 7ff32a801740 7ff32a801760 7ff32a801780 7ff32a8017a0 7ff32a8017c0 ] (array memory at 1015cc2c0)
  7ff32a801800 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 01d3a47 1 1 0 0 0      TREF   'compileCondition' at 7ff32a801100 (string memory at 101473a1d)
  7ff32a801820 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 02f3a47 1 1 0 0 0   LITERAL   ':' (string memory at 101473a2f)
  7ff32a801840 | 22 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0323a47 1 1 0 0 0      TREF + 'declaration' at 7ff32a801140 (string memory at 101473a32)
  7ff32a801860 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0403a47 1 1 0 0 0   LITERAL   'else' (string memory at 101473a40)
  7ff32a801880 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0463a47 1 1 0 0 0      TREF   'declaration' at 7ff32a801140 (string memory at 101473a46)
  7ff32a8018a0 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 060a65c 1 1 0 0 0  SEQUENCE    => [ 7ff32a801800 7ff32a801820 7ff32a801840 7ff32a801860 7ff32a801880 ] (array memory at 1015ca660)
  7ff32a8018c0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0593a47 1 1 0 0 0      TREF   'compileCondition' at 7ff32a801100 (string memory at 101473a59)
  7ff32a8018e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 06b3a47 1 1 0 0 0   LITERAL   ':' (string memory at 101473a6b)
  7ff32a801900 | 22 0 0 0 0 0 0 0 b 0 0 0 0 0 0 06e3a47 1 1 0 0 0      TREF + 'declaration' at 7ff32a801140 (string memory at 101473a6e)
  7ff32a801920 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 07c3a47 1 1 0 0 0   LITERAL   'else' (string memory at 101473a7c)
  7ff32a801940 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0833a47 1 1 0 0 0   LITERAL   '{' (string memory at 101473a83)
  7ff32a801960 | 32 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0863a47 1 1 0 0 0      TREF * 'declaration' at 7ff32a801140 (string memory at 101473a86)
  7ff32a801980 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0943a47 1 1 0 0 0   LITERAL   '}' (string memory at 101473a94)
  7ff32a8019a0 |  4 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0 0c35c 1 1 0 0 0  SEQUENCE    => [ 7ff32a8018c0 7ff32a8018e0 7ff32a801900 7ff32a801920 7ff32a801940 7ff32a801960 7ff32a801980 ] (array memory at 1015cc300)
  7ff32a8019c0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 09e3a47 1 1 0 0 0      TREF   'compileCondition' at 7ff32a801100 (string memory at 101473a9e)
  7ff32a8019e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b03a47 1 1 0 0 0   LITERAL   ':' (string memory at 101473ab0)
  7ff32a801a00 | 22 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0b33a47 1 1 0 0 0      TREF + 'declaration' at 7ff32a801140 (string memory at 101473ab3)
  7ff32a801a20 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0c13a47 1 1 0 0 0   LITERAL   'else' (string memory at 101473ac1)
  7ff32a801a40 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0c83a47 1 1 0 0 0   LITERAL   ':' (string memory at 101473ac8)
  7ff32a801a60 | 32 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0cb3a47 1 1 0 0 0      TREF * 'declaration' at 7ff32a801140 (string memory at 101473acb)
  7ff32a801a80 |  4 0 0 0 0 0 0 0 6 0 0 0 0 0 0 040c35c 1 1 0 0 0  SEQUENCE    => [ 7ff32a8019c0 7ff32a8019e0 7ff32a801a00 7ff32a801a20 7ff32a801a40 7ff32a801a60 ] (array memory at 1015cc340)
  7ff32a801aa0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 09b5d 1 1 0 0 0    EITHER    => [ 7ff32a8019a0 7ff32a801a80 ] (array memory at 1015d9b00)
  7ff32a801ac0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0209b5d 1 1 0 0 0    EITHER    => [ 7ff32a8018a0 7ff32a801aa0 ] (array memory at 1015d9b20)
  7ff32a801ae0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0409b5d 1 1 0 0 0    EITHER    => [ 7ff32a8017e0 7ff32a801ac0 ] (array memory at 1015d9b40)
  7ff32a801b00 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0609b5d 1 1 0 0 0    EITHER    => [ 7ff32a8016e0 7ff32a801ae0 ] (array memory at 1015d9b60)
  7ff32a801b20 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0809b5d 1 1 0 0 0    EITHER    => [ 7ff32a8015c0 7ff32a801b00 ] (array memory at 1015d9b80)
  7ff32a801b40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a09b5d 1 1 0 0 0    EITHER    => [ 7ff32a8014e0 7ff32a801b20 ] (array memory at 1015d9ba0)
  7ff32a801b60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c09b5d 1 1 0 0 0    EITHER    => [ 7ff32a801400 7ff32a801b40 ] (array memory at 1015d9bc0)
  7ff32a801b80 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e09b5d 1 1 0 0 0    EITHER    => [ 7ff32a801360 7ff32a801b60 ] (array memory at 1015d9be0)
  7ff32a801ba0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 09c5d 1 1 0 0 0    EITHER    => [ 7ff32a8012a0 7ff32a801b80 ] (array memory at 1015d9c00)
  7ff32a801bc0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0209c5d 1 1 0 0 0    EITHER    => [ 7ff32a801220 7ff32a801ba0 ] (array memory at 1015d9c20)
  7ff32a801be0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0409c5d 1 1 0 0 0    EITHER    => [ 7ff32a801180 7ff32a801bc0 ] (array memory at 1015d9c40)
  7ff32a801c00 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 090a45d 1 1 0 0 0    EITHER    => [ 7ff32a801be0 ] (array memory at 1015da490)
  7ff32a801c20 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0fb3a47 1 1 0 0 0      TREF   'compileCondition' at 7ff32a801100 (string memory at 101473afb)
  7ff32a801c40 |  2 0 0 0 0 0 0 016 0 0 0 0 0 0 0 c3b47 1 1 0 0 0      TREF   'declarationOrStatement' at 7ff32a800760 (string memory at 101473b0c)
  7ff32a801c60 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0253b47 1 1 0 0 0   LITERAL   'else' (string memory at 101473b25)
  7ff32a801c80 |  2 0 0 0 0 0 0 016 0 0 0 0 0 0 02b3b47 1 1 0 0 0      TREF   'declarationOrStatement' at 7ff32a800760 (string memory at 101473b2b)
  7ff32a801ca0 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a09c5d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32a801c60 7ff32a801c80 ] (array memory at 1015d9ca0)
  7ff32a801cc0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0809c5d 1 1 0 0 0  SEQUENCE    => [ 7ff32a801c20 7ff32a801c40 7ff32a801ca0 ] (array memory at 1015d9c80)
  7ff32a801ce0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0c0a45d 1 1 0 0 0    EITHER    => [ 7ff32a801cc0 ] (array memory at 1015da4c0)
  7ff32a801d00 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 05e3b47 1 1 0 0 0   LITERAL   'if' (string memory at 101473b5e)
  7ff32a801d20 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0633b47 1 1 0 0 0   LITERAL   '(' (string memory at 101473b63)
  7ff32a801d40 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b0ab5d 1 1 0 0 0    EITHER    => [ 7ff32a803d00 ] (array memory at 1015dabb0)
  7ff32a801d60 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0663b47 1 1 0 0 0      TREF   'expression' at 7ff32a801d40 (string memory at 101473b66)
  7ff32a801d80 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0723b47 1 1 0 0 0   LITERAL   ')' (string memory at 101473b72)
  7ff32a801da0 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0f0a65c 1 1 0 0 0  SEQUENCE    => [ 7ff32a801d00 7ff32a801d20 7ff32a801d60 7ff32a801d80 ] (array memory at 1015ca6f0)
  7ff32a801dc0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0903b47 1 1 0 0 0   LITERAL   'this' (string memory at 101473b90)
  7ff32a801de0 | 12 0 0 0 0 0 0 012 0 0 0 0 0 0 0963b47 1 1 0 0 0      TREF ? 'templateParameters' at 7ff32a0279a0 (string memory at 101473b96)
  7ff32a801e00 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0aa3b47 1 1 0 0 0      TREF   'parameters' at 7ff32a027860 (string memory at 101473baa)
  7ff32a801e20 | 32 0 0 0 0 0 0 017 0 0 0 0 0 0 0b53b47 1 1 0 0 0      TREF * 'memberFunctionAttribute' at 7ff32a027b20 (string memory at 101473bb5)
  7ff32a801e40 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0ce3b47 1 1 0 0 0      TREF ? 'constraint' at 7ff32a800aa0 (string memory at 101473bce)
  7ff32a801e60 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b0ae5d 1 1 0 0 0    EITHER    => [ 7ff32b0003c0 ] (array memory at 1015daeb0)
  7ff32a801e80 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0db3b47 1 1 0 0 0      TREF   'functionBody' at 7ff32a801e60 (string memory at 101473bdb)
  7ff32a801ea0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0eb3b47 1 1 0 0 0   LITERAL   ';' (string memory at 101473beb)
  7ff32a801ec0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0609d5d 1 1 0 0 0    EITHER    => [ 7ff32a801e80 7ff32a801ea0 ] (array memory at 1015d9d60)
  7ff32a801ee0 |  4 0 0 0 0 0 0 0 6 0 0 0 0 0 0 080c35c 1 1 0 0 0  SEQUENCE    => [ 7ff32a801dc0 7ff32a801de0 7ff32a801e00 7ff32a801e20 7ff32a801e40 7ff32a801ec0 ] (array memory at 1015cc380)
  7ff32a801f00 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 020a55d 1 1 0 0 0    EITHER    => [ 7ff32a801ee0 ] (array memory at 1015da520)
  7ff32a801f20 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0103c47 1 1 0 0 0   LITERAL   'continue' (string memory at 101473c10)
  7ff32a801f40 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 01a3c47 1 1 0 0 0      TREF ? 'Identifier' at 7ff32a027960 (string memory at 101473c1a)
  7ff32a801f60 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0273c47 1 1 0 0 0   LITERAL   ';' (string memory at 101473c27)
  7ff32a801f80 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0a09d5d 1 1 0 0 0  SEQUENCE    => [ 7ff32a801f20 7ff32a801f40 7ff32a801f60 ] (array memory at 1015d9da0)
  7ff32a801fa0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 040a55d 1 1 0 0 0    EITHER    => [ 7ff32a801f80 ] (array memory at 1015da540)
  7ff32a801fc0 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0483c47 1 1 0 0 0   LITERAL   'debug' (string memory at 101473c48)
  7ff32a801fe0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0513c47 1 1 0 0 0   LITERAL   '(' (string memory at 101473c51)
  7ff32a802000 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0553c47 1 1 0 0 0      TREF   'IntegerLiteral' at 7ff32a028a80 (string memory at 101473c55)
  7ff32a802020 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0663c47 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101473c66)
  7ff32a802040 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e09d5d 1 1 0 0 0    EITHER    => [ 7ff32a802000 7ff32a802020 ] (array memory at 1015d9de0)
  7ff32a802060 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0733c47 1 1 0 0 0   LITERAL   ')' (string memory at 101473c73)
  7ff32a802080 | 14 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 09e5d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32a801fe0 7ff32a802040 7ff32a802060 ] (array memory at 1015d9e00)
  7ff32a8020a0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0209e5d 1 1 0 0 0  SEQUENCE    => [ 7ff32a801fc0 7ff32a802080 ] (array memory at 1015d9e20)
  7ff32a8020c0 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 09a3c47 1 1 0 0 0   LITERAL   'debug' (string memory at 101473c9a)
  7ff32a8020e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a23c47 1 1 0 0 0   LITERAL   '=' (string memory at 101473ca2)
  7ff32a802100 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0a63c47 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101473ca6)
  7ff32a802120 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0b33c47 1 1 0 0 0      TREF   'IntegerLiteral' at 7ff32a028a80 (string memory at 101473cb3)
  7ff32a802140 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0609e5d 1 1 0 0 0    EITHER    => [ 7ff32a802100 7ff32a802120 ] (array memory at 1015d9e60)
  7ff32a802160 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0c43c47 1 1 0 0 0   LITERAL   ';' (string memory at 101473cc4)
  7ff32a802180 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 050a75c 1 1 0 0 0  SEQUENCE    => [ 7ff32a8020c0 7ff32a8020e0 7ff32a802140 7ff32a802160 ] (array memory at 1015ca750)
  7ff32a8021a0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d0a55d 1 1 0 0 0    EITHER    => [ 7ff32a802180 ] (array memory at 1015da5d0)
  7ff32a8021c0 | 32 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0e33c47 1 1 0 0 0      TREF * 'attribute' at 7ff32a02b200 (string memory at 101473ce3)
  7ff32a8021e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f0a75d 1 1 0 0 0    EITHER    => [ 7ff32a802cc0 ] (array memory at 1015da7f0)
  7ff32a802200 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0ee3c47 1 1 0 0 0      TREF   'declaration2' at 7ff32a8021e0 (string memory at 101473cee)
  7ff32a802220 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c09e5d 1 1 0 0 0  SEQUENCE    => [ 7ff32a8021c0 7ff32a802200 ] (array memory at 1015d9ec0)
  7ff32a802240 | 22 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0 23d47 1 1 0 0 0      TREF + 'attribute' at 7ff32a02b200 (string memory at 101473d02)
  7ff32a802260 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 e3d47 1 1 0 0 0   LITERAL   '{' (string memory at 101473d0e)
  7ff32a802280 | 32 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0113d47 1 1 0 0 0      TREF * 'declaration' at 7ff32a801140 (string memory at 101473d11)
  7ff32a8022a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 01f3d47 1 1 0 0 0   LITERAL   '}' (string memory at 101473d1f)
  7ff32a8022c0 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 080a75c 1 1 0 0 0  SEQUENCE    => [ 7ff32a802240 7ff32a802260 7ff32a802280 7ff32a8022a0 ] (array memory at 1015ca780)
  7ff32a8022e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 09f5d 1 1 0 0 0    EITHER    => [ 7ff32a802220 7ff32a8022c0 ] (array memory at 1015d9f00)
  7ff32a802300 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0403d47 1 1 0 0 0      TREF   'aliasDeclaration' at 7ff32a027940 (string memory at 101473d40)
  7ff32a802320 |  2 0 0 0 0 0 0 014 0 0 0 0 0 0 0583d47 1 1 0 0 0      TREF   'aliasThisDeclaration' at 7ff32a027d20 (string memory at 101473d58)
  7ff32a802340 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 050aa5d 1 1 0 0 0    EITHER    => [ 7ff32a8037a0 ] (array memory at 1015daa50)
  7ff32a802360 |  2 0 0 0 0 0 0 018 0 0 0 0 0 0 0743d47 1 1 0 0 0      TREF   'anonymousEnumDeclaration' at 7ff32a802340 (string memory at 101473d74)
  7ff32a802380 |  2 0 0 0 0 0 0 014 0 0 0 0 0 0 0943d47 1 1 0 0 0      TREF   'attributeDeclaration' at 7ff32a02b280 (string memory at 101473d94)
  7ff32a8023a0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0b03d47 1 1 0 0 0      TREF   'classDeclaration' at 7ff32a800e20 (string memory at 101473db0)
  7ff32a8023c0 |  2 0 0 0 0 0 0 016 0 0 0 0 0 0 0c83d47 1 1 0 0 0      TREF   'conditionalDeclaration' at 7ff32a801c00 (string memory at 101473dc8)
  7ff32a8023e0 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0e63d47 1 1 0 0 0      TREF   'constructor' at 7ff32a801f00 (string memory at 101473de6)
  7ff32a802400 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 0f93d47 1 1 0 0 0      TREF   'debugSpecification' at 7ff32a8021a0 (string memory at 101473df9)
  7ff32a802420 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 070a95d 1 1 0 0 0    EITHER    => [ 7ff32a8032a0 ] (array memory at 1015da970)
  7ff32a802440 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0133e47 1 1 0 0 0      TREF   'destructor' at 7ff32a802420 (string memory at 101473e13)
  7ff32a802460 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b0aa5d 1 1 0 0 0    EITHER    => [ 7ff32a803980 ] (array memory at 1015daab0)
  7ff32a802480 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0253e47 1 1 0 0 0      TREF   'enumDeclaration' at 7ff32a802460 (string memory at 101473e25)
  7ff32a8024a0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 040ab5d 1 1 0 0 0    EITHER    => [ 7ff32a803ba0 ] (array memory at 1015dab40)
  7ff32a8024c0 |  2 0 0 0 0 0 0 01c 0 0 0 0 0 0 03c3e47 1 1 0 0 0      TREF   'eponymousTemplateDeclaration' at 7ff32a8024a0 (string memory at 101473e3c)
  7ff32a8024e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0d05d 1 1 0 0 0    EITHER    => [ 7ff32b000900 ] (array memory at 1015dd000)
  7ff32a802500 |  2 0 0 0 0 0 0 013 0 0 0 0 0 0 0603e47 1 1 0 0 0      TREF   'functionDeclaration' at 7ff32a8024e0 (string memory at 101473e60)
  7ff32a802520 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e0d45d 1 1 0 0 0    EITHER    => [ 7ff32b0023a0 ] (array memory at 1015dd4e0)
  7ff32a802540 |  2 0 0 0 0 0 0 011 0 0 0 0 0 0 07b3e47 1 1 0 0 0      TREF   'importDeclaration' at 7ff32a802520 (string memory at 101473e7b)
  7ff32a802560 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 050d75d 1 1 0 0 0    EITHER    => [ 7ff32b002e80 ] (array memory at 1015dd750)
  7ff32a802580 |  2 0 0 0 0 0 0 014 0 0 0 0 0 0 0943e47 1 1 0 0 0      TREF   'interfaceDeclaration' at 7ff32a802560 (string memory at 101473e94)
  7ff32a8025a0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a0d75d 1 1 0 0 0    EITHER    => [ 7ff32b003020 ] (array memory at 1015dd7a0)
  7ff32a8025c0 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0b03e47 1 1 0 0 0      TREF   'invariant' at 7ff32a8025a0 (string memory at 101473eb0)
  7ff32a8025e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 070da5d 1 1 0 0 0    EITHER    => [ 7ff32b003fc0 ] (array memory at 1015dda70)
  7ff32a802600 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0c13e47 1 1 0 0 0      TREF   'mixinDeclaration' at 7ff32a8025e0 (string memory at 101473ec1)
  7ff32a802620 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b0da5d 1 1 0 0 0    EITHER    => [ 7ff32b0040c0 ] (array memory at 1015ddab0)
  7ff32a802640 |  2 0 0 0 0 0 0 018 0 0 0 0 0 0 0d93e47 1 1 0 0 0      TREF   'mixinTemplateDeclaration' at 7ff32a802620 (string memory at 101473ed9)
  7ff32a802660 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 090df5d 1 1 0 0 0    EITHER    => [ 7ff32b800e20 ] (array memory at 1015ddf90)
  7ff32a802680 |  2 0 0 0 0 0 0 011 0 0 0 0 0 0 0f93e47 1 1 0 0 0      TREF   'pragmaDeclaration' at 7ff32a802660 (string memory at 101473ef9)
  7ff32a8026a0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 080 45e 1 1 0 0 0    EITHER    => [ 7ff32b8023e0 ] (array memory at 1015e0480)
  7ff32a8026c0 |  2 0 0 0 0 0 0 017 0 0 0 0 0 0 0123f47 1 1 0 0 0      TREF   'sharedStaticConstructor' at 7ff32a8026a0 (string memory at 101473f12)
  7ff32a8026e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0c0 45e 1 1 0 0 0    EITHER    => [ 7ff32b802540 ] (array memory at 1015e04c0)
  7ff32a802700 |  2 0 0 0 0 0 0 016 0 0 0 0 0 0 0313f47 1 1 0 0 0      TREF   'sharedStaticDestructor' at 7ff32a8026e0 (string memory at 101473f31)
  7ff32a802720 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0c0 75e 1 1 0 0 0    EITHER    => [ 7ff32b8030e0 ] (array memory at 1015e07c0)
  7ff32a802740 |  2 0 0 0 0 0 0 017 0 0 0 0 0 0 04f3f47 1 1 0 0 0      TREF   'staticAssertDeclaration' at 7ff32a802720 (string memory at 101473f4f)
  7ff32a802760 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 020 85e 1 1 0 0 0    EITHER    => [ 7ff32b803280 ] (array memory at 1015e0820)
  7ff32a802780 |  2 0 0 0 0 0 0 011 0 0 0 0 0 0 06e3f47 1 1 0 0 0      TREF   'staticConstructor' at 7ff32a802760 (string memory at 101473f6e)
  7ff32a8027a0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 060 85e 1 1 0 0 0    EITHER    => [ 7ff32b8033c0 ] (array memory at 1015e0860)
  7ff32a8027c0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0873f47 1 1 0 0 0      TREF   'staticDestructor' at 7ff32a8027a0 (string memory at 101473f87)
  7ff32a8027e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 040 a5e 1 1 0 0 0    EITHER    => [ 7ff32b803b00 ] (array memory at 1015e0a40)
  7ff32a802800 |  2 0 0 0 0 0 0 011 0 0 0 0 0 0 09f3f47 1 1 0 0 0      TREF   'structDeclaration' at 7ff32a8027e0 (string memory at 101473f9f)
  7ff32a802820 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 080 c5e 1 1 0 0 0    EITHER    => [ 7ff32b804460 ] (array memory at 1015e0c80)
  7ff32a802840 |  2 0 0 0 0 0 0 013 0 0 0 0 0 0 0b83f47 1 1 0 0 0      TREF   'templateDeclaration' at 7ff32a802820 (string memory at 101473fb8)
  7ff32a802860 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 030385e 1 1 0 0 0    EITHER    => [ 7ff32b8072c0 ] (array memory at 1015e3830)
  7ff32a802880 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0d33f47 1 1 0 0 0      TREF   'unionDeclaration' at 7ff32a802860 (string memory at 101473fd3)
  7ff32a8028a0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 050385e 1 1 0 0 0    EITHER    => [ 7ff32b807320 ] (array memory at 1015e3850)
  7ff32a8028c0 |  2 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0eb3f47 1 1 0 0 0      TREF   'unittest' at 7ff32a8028a0 (string memory at 101473feb)
  7ff32a8028e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a0385e 1 1 0 0 0    EITHER    => [ 7ff32b807460 ] (array memory at 1015e38a0)
  7ff32a802900 |  2 0 0 0 0 0 0 013 0 0 0 0 0 0 0fb3f47 1 1 0 0 0      TREF   'variableDeclaration' at 7ff32a8028e0 (string memory at 101473ffb)
  7ff32a802920 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 070395e 1 1 0 0 0    EITHER    => [ 7ff32b807760 ] (array memory at 1015e3970)
  7ff32a802940 |  2 0 0 0 0 0 0 014 0 0 0 0 0 0 0164047 1 1 0 0 0      TREF   'versionSpecification' at 7ff32a802920 (string memory at 101474016)
  7ff32a802960 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0b15d 1 1 0 0 0    EITHER    => [ 7ff32a802900 7ff32a802940 ] (array memory at 1015db1e0)
  7ff32a802980 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0b25d 1 1 0 0 0    EITHER    => [ 7ff32a8028c0 7ff32a802960 ] (array memory at 1015db200)
  7ff32a8029a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020b25d 1 1 0 0 0    EITHER    => [ 7ff32a802880 7ff32a802980 ] (array memory at 1015db220)
  7ff32a8029c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040b25d 1 1 0 0 0    EITHER    => [ 7ff32a802840 7ff32a8029a0 ] (array memory at 1015db240)
  7ff32a8029e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060b25d 1 1 0 0 0    EITHER    => [ 7ff32a802800 7ff32a8029c0 ] (array memory at 1015db260)
  7ff32a802a00 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080b25d 1 1 0 0 0    EITHER    => [ 7ff32a8027c0 7ff32a8029e0 ] (array memory at 1015db280)
  7ff32a802a20 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0b25d 1 1 0 0 0    EITHER    => [ 7ff32a802780 7ff32a802a00 ] (array memory at 1015db2a0)
  7ff32a802a40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0b25d 1 1 0 0 0    EITHER    => [ 7ff32a802740 7ff32a802a20 ] (array memory at 1015db2c0)
  7ff32a802a60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0b25d 1 1 0 0 0    EITHER    => [ 7ff32a802700 7ff32a802a40 ] (array memory at 1015db2e0)
  7ff32a802a80 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0b35d 1 1 0 0 0    EITHER    => [ 7ff32a8026c0 7ff32a802a60 ] (array memory at 1015db300)
  7ff32a802aa0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020b35d 1 1 0 0 0    EITHER    => [ 7ff32a802680 7ff32a802a80 ] (array memory at 1015db320)
  7ff32a802ac0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040b35d 1 1 0 0 0    EITHER    => [ 7ff32a802640 7ff32a802aa0 ] (array memory at 1015db340)
  7ff32a802ae0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060b35d 1 1 0 0 0    EITHER    => [ 7ff32a802600 7ff32a802ac0 ] (array memory at 1015db360)
  7ff32a802b00 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080b35d 1 1 0 0 0    EITHER    => [ 7ff32a8025c0 7ff32a802ae0 ] (array memory at 1015db380)
  7ff32a802b20 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0b35d 1 1 0 0 0    EITHER    => [ 7ff32a802580 7ff32a802b00 ] (array memory at 1015db3a0)
  7ff32a802b40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0b35d 1 1 0 0 0    EITHER    => [ 7ff32a802540 7ff32a802b20 ] (array memory at 1015db3c0)
  7ff32a802b60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0b35d 1 1 0 0 0    EITHER    => [ 7ff32a802500 7ff32a802b40 ] (array memory at 1015db3e0)
  7ff32a802b80 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0b45d 1 1 0 0 0    EITHER    => [ 7ff32a8024c0 7ff32a802b60 ] (array memory at 1015db400)
  7ff32a802ba0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020b45d 1 1 0 0 0    EITHER    => [ 7ff32a802480 7ff32a802b80 ] (array memory at 1015db420)
  7ff32a802bc0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040b45d 1 1 0 0 0    EITHER    => [ 7ff32a802440 7ff32a802ba0 ] (array memory at 1015db440)
  7ff32a802be0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060b45d 1 1 0 0 0    EITHER    => [ 7ff32a802400 7ff32a802bc0 ] (array memory at 1015db460)
  7ff32a802c00 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080b45d 1 1 0 0 0    EITHER    => [ 7ff32a8023e0 7ff32a802be0 ] (array memory at 1015db480)
  7ff32a802c20 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0b45d 1 1 0 0 0    EITHER    => [ 7ff32a8023c0 7ff32a802c00 ] (array memory at 1015db4a0)
  7ff32a802c40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0b45d 1 1 0 0 0    EITHER    => [ 7ff32a8023a0 7ff32a802c20 ] (array memory at 1015db4c0)
  7ff32a802c60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0b45d 1 1 0 0 0    EITHER    => [ 7ff32a802380 7ff32a802c40 ] (array memory at 1015db4e0)
  7ff32a802c80 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0b55d 1 1 0 0 0    EITHER    => [ 7ff32a802360 7ff32a802c60 ] (array memory at 1015db500)
  7ff32a802ca0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020b55d 1 1 0 0 0    EITHER    => [ 7ff32a802320 7ff32a802c80 ] (array memory at 1015db520)
  7ff32a802cc0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040b55d 1 1 0 0 0    EITHER    => [ 7ff32a802300 7ff32a802ca0 ] (array memory at 1015db540)
  7ff32a802ce0 | 22 0 0 0 0 0 0 016 0 0 0 0 0 0 0534047 1 1 0 0 0      TREF + 'declarationOrStatement' at 7ff32a800760 (string memory at 101474053)
  7ff32a802d00 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0924047 1 1 0 0 0      TREF   'declaration' at 7ff32a801140 (string memory at 101474092)
  7ff32a802d20 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 65e 1 1 0 0 0    EITHER    => [ 7ff32b8029e0 ] (array memory at 1015e0600)
  7ff32a802d40 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0a54047 1 1 0 0 0      TREF   'statement' at 7ff32a802d20 (string memory at 1014740a5)
  7ff32a802d60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080b55d 1 1 0 0 0    EITHER    => [ 7ff32a802d00 7ff32a802d40 ] (array memory at 1015db580)
  7ff32a802d80 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0ca4047 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 1014740ca)
  7ff32a802da0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0dc4047 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 1014740dc)
  7ff32a802dc0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e84047 1 1 0 0 0   LITERAL   '=' (string memory at 1014740e8)
  7ff32a802de0 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0eb4047 1 1 0 0 0      TREF   'initializer' at 7ff32a02b420 (string memory at 1014740eb)
  7ff32a802e00 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0a0b55d 1 1 0 0 0  SEQUENCE    => [ 7ff32a802da0 7ff32a802dc0 7ff32a802de0 ] (array memory at 1015db5a0)
  7ff32a802e20 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0fe4047 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 1014740fe)
  7ff32a802e40 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 0 94147 1 1 0 0 0      TREF   'templateParameters' at 7ff32a0279a0 (string memory at 101474109)
  7ff32a802e60 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 01d4147 1 1 0 0 0   LITERAL   '=' (string memory at 10147411d)
  7ff32a802e80 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0204147 1 1 0 0 0      TREF   'initializer' at 7ff32a02b420 (string memory at 101474120)
  7ff32a802ea0 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0b0a75c 1 1 0 0 0  SEQUENCE    => [ 7ff32a802e20 7ff32a802e40 7ff32a802e60 7ff32a802e80 ] (array memory at 1015ca7b0)
  7ff32a802ec0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0b55d 1 1 0 0 0    EITHER    => [ 7ff32a802e00 7ff32a802ea0 ] (array memory at 1015db5e0)
  7ff32a802ee0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0b65d 1 1 0 0 0    EITHER    => [ 7ff32a802d80 7ff32a802ec0 ] (array memory at 1015db600)
  7ff32a802f00 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 090a85d 1 1 0 0 0    EITHER    => [ 7ff32a802ee0 ] (array memory at 1015da890)
  7ff32a802f20 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0534147 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101474153)
  7ff32a802f40 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0604147 1 1 0 0 0   LITERAL   ',' (string memory at 101474160)
  7ff32a802f60 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0634147 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101474163)
  7ff32a802f80 | 34 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040b65d 1 1 0 0 0  SEQUENCE *  => [ 7ff32a802f40 7ff32a802f60 ] (array memory at 1015db640)
  7ff32a802fa0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060b65d 1 1 0 0 0  SEQUENCE    => [ 7ff32a802f20 7ff32a802f80 ] (array memory at 1015db660)
  7ff32a802fc0 |  1 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0904147 1 1 0 0 0   LITERAL   'default' (string memory at 101474190)
  7ff32a802fe0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 09a4147 1 1 0 0 0   LITERAL   ':' (string memory at 10147419a)
  7ff32a803000 |  2 0 0 0 0 0 0 019 0 0 0 0 0 0 09d4147 1 1 0 0 0      TREF   'declarationsAndStatements' at 7ff32a02b4a0 (string memory at 10147419d)
  7ff32a803020 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 080b65d 1 1 0 0 0  SEQUENCE    => [ 7ff32a802fc0 7ff32a802fe0 7ff32a803000 ] (array memory at 1015db680)
  7ff32a803040 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e0a85d 1 1 0 0 0    EITHER    => [ 7ff32a803020 ] (array memory at 1015da8e0)
  7ff32a803060 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0d74147 1 1 0 0 0   LITERAL   'delete' (string memory at 1014741d7)
  7ff32a803080 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0df4147 1 1 0 0 0      TREF   'unaryExpression' at 7ff32a800360 (string memory at 1014741df)
  7ff32a8030a0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0b65d 1 1 0 0 0  SEQUENCE    => [ 7ff32a803060 7ff32a803080 ] (array memory at 1015db6c0)
  7ff32a8030c0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0a95d 1 1 0 0 0    EITHER    => [ 7ff32a8030a0 ] (array memory at 1015da900)
  7ff32a8030e0 |  1 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0 94247 1 1 0 0 0   LITERAL   'deprecated' (string memory at 101474209)
  7ff32a803100 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0174247 1 1 0 0 0   LITERAL   '(' (string memory at 101474217)
  7ff32a803120 | 22 0 0 0 0 0 0 0 d 0 0 0 0 0 0 01a4247 1 1 0 0 0      TREF + 'StringLiteral' at 7ff32a0292c0 (string memory at 10147421a)
  7ff32a803140 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 02a4247 1 1 0 0 0   LITERAL   ')' (string memory at 10147422a)
  7ff32a803160 | 14 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0b75d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32a803100 7ff32a803120 7ff32a803140 ] (array memory at 1015db700)
  7ff32a803180 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020b75d 1 1 0 0 0  SEQUENCE    => [ 7ff32a8030e0 7ff32a803160 ] (array memory at 1015db720)
  7ff32a8031a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0494247 1 1 0 0 0   LITERAL   '~' (string memory at 101474249)
  7ff32a8031c0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 04d4247 1 1 0 0 0   LITERAL   'this' (string memory at 10147424d)
  7ff32a8031e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0544247 1 1 0 0 0   LITERAL   '(' (string memory at 101474254)
  7ff32a803200 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0584247 1 1 0 0 0   LITERAL   ')' (string memory at 101474258)
  7ff32a803220 | 32 0 0 0 0 0 0 017 0 0 0 0 0 0 05b4247 1 1 0 0 0      TREF * 'memberFunctionAttribute' at 7ff32a027b20 (string memory at 10147425b)
  7ff32a803240 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0754247 1 1 0 0 0      TREF   'functionBody' at 7ff32a801e60 (string memory at 101474275)
  7ff32a803260 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0854247 1 1 0 0 0   LITERAL   ';' (string memory at 101474285)
  7ff32a803280 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060b75d 1 1 0 0 0    EITHER    => [ 7ff32a803240 7ff32a803260 ] (array memory at 1015db760)
  7ff32a8032a0 |  4 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0c0c35c 1 1 0 0 0  SEQUENCE    => [ 7ff32a8031a0 7ff32a8031c0 7ff32a8031e0 7ff32a803200 7ff32a803220 7ff32a803280 ] (array memory at 1015cc3c0)
  7ff32a8032c0 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a44247 1 1 0 0 0   LITERAL   'do' (string memory at 1014742a4)
  7ff32a8032e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a0 75e 1 1 0 0 0    EITHER    => [ 7ff32b8030c0 ] (array memory at 1015e07a0)
  7ff32a803300 |  2 0 0 0 0 0 0 018 0 0 0 0 0 0 0a84247 1 1 0 0 0      TREF   'statementNoCaseNoDefault' at 7ff32a8032e0 (string memory at 1014742a8)
  7ff32a803320 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0c24247 1 1 0 0 0   LITERAL   'while' (string memory at 1014742c2)
  7ff32a803340 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0ca4247 1 1 0 0 0   LITERAL   '(' (string memory at 1014742ca)
  7ff32a803360 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0cd4247 1 1 0 0 0      TREF   'expression' at 7ff32a801d40 (string memory at 1014742cd)
  7ff32a803380 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d94247 1 1 0 0 0   LITERAL   ')' (string memory at 1014742d9)
  7ff32a8033a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0dd4247 1 1 0 0 0   LITERAL   ';' (string memory at 1014742dd)
  7ff32a8033c0 |  4 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0 0c45c 1 1 0 0 0  SEQUENCE    => [ 7ff32a8032c0 7ff32a803300 7ff32a803320 7ff32a803340 7ff32a803360 7ff32a803380 7ff32a8033a0 ] (array memory at 1015cc400)
  7ff32a8033e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 090a95d 1 1 0 0 0    EITHER    => [ 7ff32a8033c0 ] (array memory at 1015da990)
  7ff32a803400 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f84247 1 1 0 0 0   LITERAL   '{' (string memory at 1014742f8)
  7ff32a803420 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 020ab5d 1 1 0 0 0    EITHER    => [ 7ff32a803ac0 ] (array memory at 1015dab20)
  7ff32a803440 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0fb4247 1 1 0 0 0      TREF   'enumMember' at 7ff32a803420 (string memory at 1014742fb)
  7ff32a803460 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 84347 1 1 0 0 0   LITERAL   ',' (string memory at 101474308)
  7ff32a803480 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0 b4347 1 1 0 0 0      TREF ? 'enumMember' at 7ff32a803420 (string memory at 10147430b)
  7ff32a8034a0 | 34 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020b85d 1 1 0 0 0  SEQUENCE *  => [ 7ff32a803460 7ff32a803480 ] (array memory at 1015db820)
  7ff32a8034c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 01a4347 1 1 0 0 0   LITERAL   '}' (string memory at 10147431a)
  7ff32a8034e0 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 040a85c 1 1 0 0 0  SEQUENCE    => [ 7ff32a803400 7ff32a803440 7ff32a8034a0 7ff32a8034c0 ] (array memory at 1015ca840)
  7ff32a803500 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0c0a95d 1 1 0 0 0    EITHER    => [ 7ff32a8034e0 ] (array memory at 1015da9c0)
  7ff32a803520 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0414347 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 101474341)
  7ff32a803540 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0464347 1 1 0 0 0      TREF   'identifier' at 7ff32a027800 (string memory at 101474346)
  7ff32a803560 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0524347 1 1 0 0 0   LITERAL   '=' (string memory at 101474352)
  7ff32a803580 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0554347 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 101474355)
  7ff32a8035a0 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 070a85c 1 1 0 0 0  SEQUENCE    => [ 7ff32a803520 7ff32a803540 7ff32a803560 7ff32a803580 ] (array memory at 1015ca870)
  7ff32a8035c0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 06d4347 1 1 0 0 0      TREF   'identifier' at 7ff32a027800 (string memory at 10147436d)
  7ff32a8035e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0794347 1 1 0 0 0   LITERAL   '=' (string memory at 101474379)
  7ff32a803600 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 07c4347 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 10147437c)
  7ff32a803620 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 080b85d 1 1 0 0 0  SEQUENCE    => [ 7ff32a8035c0 7ff32a8035e0 7ff32a803600 ] (array memory at 1015db880)
  7ff32a803640 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0944347 1 1 0 0 0      TREF   'identifier' at 7ff32a027800 (string memory at 101474394)
  7ff32a803660 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0b85d 1 1 0 0 0    EITHER    => [ 7ff32a803620 7ff32a803640 ] (array memory at 1015db8a0)
  7ff32a803680 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0b85d 1 1 0 0 0    EITHER    => [ 7ff32a8035a0 7ff32a803660 ] (array memory at 1015db8c0)
  7ff32a8036a0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 020aa5d 1 1 0 0 0    EITHER    => [ 7ff32a803680 ] (array memory at 1015daa20)
  7ff32a8036c0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0c74347 1 1 0 0 0   LITERAL   'enum' (string memory at 1014743c7)
  7ff32a8036e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0cf4347 1 1 0 0 0   LITERAL   ':' (string memory at 1014743cf)
  7ff32a803700 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0d24347 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 1014743d2)
  7ff32a803720 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0b95d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32a8036e0 7ff32a803700 ] (array memory at 1015db900)
  7ff32a803740 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0da4347 1 1 0 0 0   LITERAL   '{' (string memory at 1014743da)
  7ff32a803760 | 22 0 0 0 0 0 0 013 0 0 0 0 0 0 0dd4347 1 1 0 0 0      TREF + 'anonymousEnumMember' at 7ff32a8036a0 (string memory at 1014743dd)
  7ff32a803780 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f34347 1 1 0 0 0   LITERAL   '}' (string memory at 1014743f3)
  7ff32a8037a0 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0a0a85c 1 1 0 0 0  SEQUENCE    => [ 7ff32a8036c0 7ff32a803720 7ff32a803740 7ff32a803760 7ff32a803780 ] (array memory at 1015ca8a0)
  7ff32a8037c0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0174447 1 1 0 0 0   LITERAL   'enum' (string memory at 101474417)
  7ff32a8037e0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 01d4447 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 10147441d)
  7ff32a803800 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 02a4447 1 1 0 0 0   LITERAL   ':' (string memory at 10147442a)
  7ff32a803820 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 02d4447 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 10147442d)
  7ff32a803840 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060b95d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32a803800 7ff32a803820 ] (array memory at 1015db960)
  7ff32a803860 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0354447 1 1 0 0 0   LITERAL   ';' (string memory at 101474435)
  7ff32a803880 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0d0a85c 1 1 0 0 0  SEQUENCE    => [ 7ff32a8037c0 7ff32a8037e0 7ff32a803840 7ff32a803860 ] (array memory at 1015ca8d0)
  7ff32a8038a0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0404447 1 1 0 0 0   LITERAL   'enum' (string memory at 101474440)
  7ff32a8038c0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0464447 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101474446)
  7ff32a8038e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0534447 1 1 0 0 0   LITERAL   ':' (string memory at 101474453)
  7ff32a803900 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0564447 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 101474456)
  7ff32a803920 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0b95d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32a8038e0 7ff32a803900 ] (array memory at 1015db9a0)
  7ff32a803940 |  2 0 0 0 0 0 0 0 8 0 0 0 0 0 0 05d4447 1 1 0 0 0      TREF   'enumBody' at 7ff32a803500 (string memory at 10147445d)
  7ff32a803960 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0a95c 1 1 0 0 0  SEQUENCE    => [ 7ff32a8038a0 7ff32a8038c0 7ff32a803920 7ff32a803940 ] (array memory at 1015ca900)
  7ff32a803980 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0b95d 1 1 0 0 0    EITHER    => [ 7ff32a803880 7ff32a803960 ] (array memory at 1015db9c0)
  7ff32a8039a0 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 08a4447 1 1 0 0 0      TREF   'atAttribute' at 7ff32a02aa80 (string memory at 10147448a)
  7ff32a8039c0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 09d4447 1 1 0 0 0      TREF   'deprecated' at 7ff32a02ab00 (string memory at 10147449d)
  7ff32a8039e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0b95d 1 1 0 0 0    EITHER    => [ 7ff32a8039a0 7ff32a8039c0 ] (array memory at 1015db9e0)
  7ff32a803a00 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e0aa5d 1 1 0 0 0    EITHER    => [ 7ff32a8039e0 ] (array memory at 1015daae0)
  7ff32a803a20 | 32 0 0 0 0 0 0 013 0 0 0 0 0 0 0c24447 1 1 0 0 0      TREF * 'enumMemberAttribute' at 7ff32a803a00 (string memory at 1014744c2)
  7ff32a803a40 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0d84447 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 1014744d8)
  7ff32a803a60 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e54447 1 1 0 0 0   LITERAL   '=' (string memory at 1014744e5)
  7ff32a803a80 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0e84447 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 1014744e8)
  7ff32a803aa0 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040ba5d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32a803a60 7ff32a803a80 ] (array memory at 1015dba40)
  7ff32a803ac0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 020ba5d 1 1 0 0 0  SEQUENCE    => [ 7ff32a803a20 7ff32a803a40 7ff32a803aa0 ] (array memory at 1015dba20)
  7ff32a803ae0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0274547 1 1 0 0 0   LITERAL   'enum' (string memory at 101474527)
  7ff32a803b00 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 02d4547 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 10147452d)
  7ff32a803b20 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 0384547 1 1 0 0 0      TREF   'templateParameters' at 7ff32a0279a0 (string memory at 101474538)
  7ff32a803b40 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 04c4547 1 1 0 0 0   LITERAL   '=' (string memory at 10147454c)
  7ff32a803b60 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 04f4547 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 10147454f)
  7ff32a803b80 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0614547 1 1 0 0 0   LITERAL   ';' (string memory at 101474561)
  7ff32a803ba0 |  4 0 0 0 0 0 0 0 6 0 0 0 0 0 0 040c45c 1 1 0 0 0  SEQUENCE    => [ 7ff32a803ae0 7ff32a803b00 7ff32a803b20 7ff32a803b40 7ff32a803b60 7ff32a803b80 ] (array memory at 1015cc440)
  7ff32a803bc0 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0824547 1 1 0 0 0      TREF   'shiftExpression' at 7ff32a800e40 (string memory at 101474582)
  7ff32a803be0 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0944547 1 1 0 0 0   LITERAL   '==' (string memory at 101474594)
  7ff32a803c00 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 09b4547 1 1 0 0 0   LITERAL   '!=' (string memory at 10147459b)
  7ff32a803c20 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080ba5d 1 1 0 0 0    EITHER    => [ 7ff32a803be0 7ff32a803c00 ] (array memory at 1015dba80)
  7ff32a803c40 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0a04547 1 1 0 0 0      TREF   'shiftExpression' at 7ff32a800e40 (string memory at 1014745a0)
  7ff32a803c60 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0a0ba5d 1 1 0 0 0  SEQUENCE    => [ 7ff32a803bc0 7ff32a803c20 7ff32a803c40 ] (array memory at 1015dbaa0)
  7ff32a803c80 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0c94547 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 1014745c9)
  7ff32a803ca0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0dc4547 1 1 0 0 0   LITERAL   ',' (string memory at 1014745dc)
  7ff32a803cc0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0df4547 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 1014745df)
  7ff32a803ce0 | 34 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0ba5d 1 1 0 0 0  SEQUENCE *  => [ 7ff32a803ca0 7ff32a803cc0 ] (array memory at 1015dbac0)
  7ff32a803d00 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0ba5d 1 1 0 0 0  SEQUENCE    => [ 7ff32a803c80 7ff32a803ce0 ] (array memory at 1015dbae0)
  7ff32a803d20 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0144647 1 1 0 0 0      TREF   'expression' at 7ff32a801d40 (string memory at 101474614)
  7ff32a803d40 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0204647 1 1 0 0 0   LITERAL   ';' (string memory at 101474620)
  7ff32a803d60 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0bb5d 1 1 0 0 0  SEQUENCE    => [ 7ff32a803d20 7ff32a803d40 ] (array memory at 1015dbb00)
  7ff32a803d80 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d0ab5d 1 1 0 0 0    EITHER    => [ 7ff32a803d60 ] (array memory at 1015dabd0)
  7ff32a803da0 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0474647 1 1 0 0 0   LITERAL   'final' (string memory at 101474647)
  7ff32a803dc0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e0 a5e 1 1 0 0 0    EITHER    => [ 7ff32b803dc0 ] (array memory at 1015e0ae0)
  7ff32a803de0 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 04e4647 1 1 0 0 0      TREF   'switchStatement' at 7ff32a803dc0 (string memory at 10147464e)
  7ff32a803e00 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060bb5d 1 1 0 0 0  SEQUENCE    => [ 7ff32a803da0 7ff32a803de0 ] (array memory at 1015dbb60)
  7ff32a803e20 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f0ab5d 1 1 0 0 0    EITHER    => [ 7ff32a803e00 ] (array memory at 1015dabf0)
  7ff32a803e40 |  1 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0754647 1 1 0 0 0   LITERAL   'finally' (string memory at 101474675)
  7ff32a803e60 |  2 0 0 0 0 0 0 016 0 0 0 0 0 0 07e4647 1 1 0 0 0      TREF   'declarationOrStatement' at 7ff32a800760 (string memory at 10147467e)
  7ff32a803e80 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0bb5d 1 1 0 0 0  SEQUENCE    => [ 7ff32a803e40 7ff32a803e60 ] (array memory at 1015dbba0)
  7ff32a803ea0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 010ac5d 1 1 0 0 0    EITHER    => [ 7ff32a803e80 ] (array memory at 1015dac10)
  7ff32a803ec0 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0b14647 1 1 0 0 0   LITERAL   'for' (string memory at 1014746b1)
  7ff32a803ee0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b74647 1 1 0 0 0   LITERAL   '(' (string memory at 1014746b7)
  7ff32a803f00 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0bb4647 1 1 0 0 0      TREF   'declaration' at 7ff32a801140 (string memory at 1014746bb)
  7ff32a803f20 |  2 0 0 0 0 0 0 018 0 0 0 0 0 0 0c94647 1 1 0 0 0      TREF   'statementNoCaseNoDefault' at 7ff32a8032e0 (string memory at 1014746c9)
  7ff32a803f40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0bc5d 1 1 0 0 0    EITHER    => [ 7ff32a803f00 7ff32a803f20 ] (array memory at 1015dbc00)
  7ff32a803f60 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0e34647 1 1 0 0 0      TREF ? 'expression' at 7ff32a801d40 (string memory at 1014746e3)
  7ff32a803f80 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f04647 1 1 0 0 0   LITERAL   ';' (string memory at 1014746f0)
  7ff32a803fa0 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0f34647 1 1 0 0 0      TREF ? 'expression' at 7ff32a801d40 (string memory at 1014746f3)
  7ff32a803fc0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 04747 1 1 0 0 0   LITERAL   ')' (string memory at 101474700)
  7ff32a803fe0 |  2 0 0 0 0 0 0 016 0 0 0 0 0 0 0 34747 1 1 0 0 0      TREF   'declarationOrStatement' at 7ff32a800760 (string memory at 101474703)
  7ff32a804000 |  4 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0e0 15d 1 1 0 0 0  SEQUENCE    => [ 7ff32a803ec0 7ff32a803ee0 7ff32a803f40 7ff32a803f60 7ff32a803f80 7ff32a803fa0 7ff32a803fc0 7ff32a803fe0 ] (array memory at 1015d01e0)
  7ff32a804020 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 050ac5d 1 1 0 0 0    EITHER    => [ 7ff32a804000 ] (array memory at 1015dac50)
  7ff32a804040 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0444747 1 1 0 0 0   LITERAL   'static' (string memory at 101474744)
  7ff32a804060 |  1 0 0 0 0 0 0 0 7 0 0 0 0 0 0 04e4747 1 1 0 0 0   LITERAL   'foreach' (string memory at 10147474e)
  7ff32a804080 |  1 0 0 0 0 0 0 0 f 0 0 0 0 0 0 05a4747 1 1 0 0 0   LITERAL   'foreach_reverse' (string memory at 10147475a)
  7ff32a8040a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040bc5d 1 1 0 0 0    EITHER    => [ 7ff32a804060 7ff32a804080 ] (array memory at 1015dbc40)
  7ff32a8040c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 06d4747 1 1 0 0 0   LITERAL   '(' (string memory at 10147476d)
  7ff32a8040e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 040ae5d 1 1 0 0 0    EITHER    => [ 7ff32b000260 ] (array memory at 1015dae40)
  7ff32a804100 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0704747 1 1 0 0 0      TREF   'foreachTypeList' at 7ff32a8040e0 (string memory at 101474770)
  7ff32a804120 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0814747 1 1 0 0 0   LITERAL   ';' (string memory at 101474781)
  7ff32a804140 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0844747 1 1 0 0 0      TREF   'expression' at 7ff32a801d40 (string memory at 101474784)
  7ff32a804160 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0904747 1 1 0 0 0   LITERAL   ')' (string memory at 101474790)
  7ff32a804180 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0944747 1 1 0 0 0      TREF   'declaration' at 7ff32a801140 (string memory at 101474794)
  7ff32a8041a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a34747 1 1 0 0 0   LITERAL   '{' (string memory at 1014747a3)
  7ff32a8041c0 | 32 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0a64747 1 1 0 0 0      TREF * 'declaration' at 7ff32a801140 (string memory at 1014747a6)
  7ff32a8041e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b44747 1 1 0 0 0   LITERAL   '}' (string memory at 1014747b4)
  7ff32a804200 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0a0bc5d 1 1 0 0 0  SEQUENCE    => [ 7ff32a8041a0 7ff32a8041c0 7ff32a8041e0 ] (array memory at 1015dbca0)
  7ff32a804220 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0bc5d 1 1 0 0 0    EITHER    => [ 7ff32a804180 7ff32a804200 ] (array memory at 1015dbcc0)
  7ff32a804240 |  4 0 0 0 0 0 0 0 8 0 0 0 0 0 0 040 25d 1 1 0 0 0  SEQUENCE    => [ 7ff32a804040 7ff32a8040a0 7ff32a8040c0 7ff32a804100 7ff32a804120 7ff32a804140 7ff32a804160 7ff32a804220 ] (array memory at 1015d0240)
  7ff32a804260 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0c04747 1 1 0 0 0   LITERAL   'static' (string memory at 1014747c0)
  7ff32a804280 |  1 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0ca4747 1 1 0 0 0   LITERAL   'foreach' (string memory at 1014747ca)
  7ff32a8042a0 |  1 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0d64747 1 1 0 0 0   LITERAL   'foreach_reverse' (string memory at 1014747d6)
  7ff32a8042c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0bc5d 1 1 0 0 0    EITHER    => [ 7ff32a804280 7ff32a8042a0 ] (array memory at 1015dbce0)
  7ff32a8042e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e94747 1 1 0 0 0   LITERAL   '(' (string memory at 1014747e9)
  7ff32a804300 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 010ae5d 1 1 0 0 0    EITHER    => [ 7ff32b0001c0 ] (array memory at 1015dae10)
  7ff32a804320 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0ec4747 1 1 0 0 0      TREF   'foreachType' at 7ff32a804300 (string memory at 1014747ec)
  7ff32a804340 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f94747 1 1 0 0 0   LITERAL   ';' (string memory at 1014747f9)
  7ff32a804360 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0fc4747 1 1 0 0 0      TREF   'expression' at 7ff32a801d40 (string memory at 1014747fc)
  7ff32a804380 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 84847 1 1 0 0 0   LITERAL   '..' (string memory at 101474808)
  7ff32a8043a0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0 c4847 1 1 0 0 0      TREF   'expression' at 7ff32a801d40 (string memory at 10147480c)
  7ff32a8043c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0184847 1 1 0 0 0   LITERAL   ')' (string memory at 101474818)
  7ff32a8043e0 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 01c4847 1 1 0 0 0      TREF   'declaration' at 7ff32a801140 (string memory at 10147481c)
  7ff32a804400 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 02b4847 1 1 0 0 0   LITERAL   '{' (string memory at 10147482b)
  7ff32a804420 | 32 0 0 0 0 0 0 0 b 0 0 0 0 0 0 02e4847 1 1 0 0 0      TREF * 'declaration' at 7ff32a801140 (string memory at 10147482e)
  7ff32a804440 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 03c4847 1 1 0 0 0   LITERAL   '}' (string memory at 10147483c)
  7ff32a804460 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 040bd5d 1 1 0 0 0  SEQUENCE    => [ 7ff32a804400 7ff32a804420 7ff32a804440 ] (array memory at 1015dbd40)
  7ff32a804480 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060bd5d 1 1 0 0 0    EITHER    => [ 7ff32a8043e0 7ff32a804460 ] (array memory at 1015dbd60)
  7ff32a8044a0 |  4 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0a0 25d 1 1 0 0 0  SEQUENCE    => [ 7ff32a804260 7ff32a8042c0 7ff32a8042e0 7ff32a804320 7ff32a804340 7ff32a804360 7ff32a804380 7ff32a8043a0 7ff32a8043c0 7ff32a804480 ] (array memory at 1015d02a0)
  7ff32a8044c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080bd5d 1 1 0 0 0    EITHER    => [ 7ff32a804240 7ff32a8044a0 ] (array memory at 1015dbd80)
  7ff32a8044e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 010ad5d 1 1 0 0 0    EITHER    => [ 7ff32a8044c0 ] (array memory at 1015dad10)
  7ff32a804500 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0664847 1 1 0 0 0   LITERAL   'static' (string memory at 101474866)
  7ff32a804520 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b0ad5d 1 1 0 0 0    EITHER    => [ 7ff32b000060 ] (array memory at 1015dadb0)
  7ff32a804540 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 06e4847 1 1 0 0 0      TREF   'foreachStatement' at 7ff32a804520 (string memory at 10147486e)
  7ff32a804560 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0bd5d 1 1 0 0 0  SEQUENCE    => [ 7ff32a804500 7ff32a804540 ] (array memory at 1015dbde0)
  7ff32a804580 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 030ad5d 1 1 0 0 0    EITHER    => [ 7ff32a804560 ] (array memory at 1015dad30)
  7ff32a8045a0 |  1 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0a24847 1 1 0 0 0   LITERAL   'foreach' (string memory at 1014748a2)
  7ff32a8045c0 |  1 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0ae4847 1 1 0 0 0   LITERAL   'foreach_reverse' (string memory at 1014748ae)
  7ff32a8045e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020be5d 1 1 0 0 0    EITHER    => [ 7ff32a8045a0 7ff32a8045c0 ] (array memory at 1015dbe20)
  7ff32a804600 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0c14847 1 1 0 0 0   LITERAL   '(' (string memory at 1014748c1)
  7ff32a804620 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0c44847 1 1 0 0 0      TREF   'foreachTypeList' at 7ff32a8040e0 (string memory at 1014748c4)
  7ff32a804640 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d54847 1 1 0 0 0   LITERAL   ';' (string memory at 1014748d5)
  7ff32a804660 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0d84847 1 1 0 0 0      TREF   'expression' at 7ff32a801d40 (string memory at 1014748d8)
  7ff32a804680 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e44847 1 1 0 0 0   LITERAL   ')' (string memory at 1014748e4)
  7ff32a8046a0 |  2 0 0 0 0 0 0 016 0 0 0 0 0 0 0e74847 1 1 0 0 0      TREF   'declarationOrStatement' at 7ff32a800760 (string memory at 1014748e7)
  7ff32a8046c0 |  4 0 0 0 0 0 0 0 7 0 0 0 0 0 0 040c55c 1 1 0 0 0  SEQUENCE    => [ 7ff32a8045e0 7ff32a804600 7ff32a804620 7ff32a804640 7ff32a804660 7ff32a804680 7ff32a8046a0 ] (array memory at 1015cc540)
  7ff32a8046e0 |  1 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0 74947 1 1 0 0 0   LITERAL   'foreach' (string memory at 101474907)
  7ff32a804700 |  1 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0134947 1 1 0 0 0   LITERAL   'foreach_reverse' (string memory at 101474913)
  7ff32a804720 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060be5d 1 1 0 0 0    EITHER    => [ 7ff32a8046e0 7ff32a804700 ] (array memory at 1015dbe60)
  7ff32a804740 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0264947 1 1 0 0 0   LITERAL   '(' (string memory at 101474926)
  7ff32a804760 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0294947 1 1 0 0 0      TREF   'foreachType' at 7ff32a804300 (string memory at 101474929)
  7ff32a804780 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0364947 1 1 0 0 0   LITERAL   ';' (string memory at 101474936)
  7ff32a8047a0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0394947 1 1 0 0 0      TREF   'expression' at 7ff32a801d40 (string memory at 101474939)
  7ff32a8047c0 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0454947 1 1 0 0 0   LITERAL   '..' (string memory at 101474945)
  7ff32a8047e0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0494947 1 1 0 0 0      TREF   'expression' at 7ff32a801d40 (string memory at 101474949)
  7ff32b000000 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0554947 1 1 0 0 0   LITERAL   ')' (string memory at 101474955)
  7ff32b000020 |  2 0 0 0 0 0 0 016 0 0 0 0 0 0 0584947 1 1 0 0 0      TREF   'declarationOrStatement' at 7ff32a800760 (string memory at 101474958)
  7ff32b000040 |  4 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0c0 05d 1 1 0 0 0  SEQUENCE    => [ 7ff32a804720 7ff32a804740 7ff32a804760 7ff32a804780 7ff32a8047a0 7ff32a8047c0 7ff32a8047e0 7ff32b000000 7ff32b000020 ] (array memory at 1015d00c0)
  7ff32b000060 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0be5d 1 1 0 0 0    EITHER    => [ 7ff32a8046c0 7ff32b000040 ] (array memory at 1015dbea0)
  7ff32b000080 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 08d4947 1 1 0 0 0   LITERAL   'ref' (string memory at 10147498d)
  7ff32b0000a0 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0954947 1 1 0 0 0   LITERAL   'alias' (string memory at 101474995)
  7ff32b0000c0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 09f4947 1 1 0 0 0   LITERAL   'enum' (string memory at 10147499f)
  7ff32b0000e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 030335e 1 1 0 0 0    EITHER    => [ 7ff32b805f00 ] (array memory at 1015e3330)
  7ff32b000100 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0a74947 1 1 0 0 0      TREF   'typeConstructor' at 7ff32b0000e0 (string memory at 1014749a7)
  7ff32b000120 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0be5d 1 1 0 0 0    EITHER    => [ 7ff32b0000c0 7ff32b000100 ] (array memory at 1015dbee0)
  7ff32b000140 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0bf5d 1 1 0 0 0    EITHER    => [ 7ff32b0000a0 7ff32b000120 ] (array memory at 1015dbf00)
  7ff32b000160 | 38 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020bf5d 1 1 0 0 0    EITHER *  => [ 7ff32b000080 7ff32b000140 ] (array memory at 1015dbf20)
  7ff32b000180 | 12 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0b94947 1 1 0 0 0      TREF ? 'type' at 7ff32a0276e0 (string memory at 1014749b9)
  7ff32b0001a0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0bf4947 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 1014749bf)
  7ff32b0001c0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 040bf5d 1 1 0 0 0  SEQUENCE    => [ 7ff32b000160 7ff32b000180 7ff32b0001a0 ] (array memory at 1015dbf40)
  7ff32b0001e0 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0e84947 1 1 0 0 0      TREF   'foreachType' at 7ff32a804300 (string memory at 1014749e8)
  7ff32b000200 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f64947 1 1 0 0 0   LITERAL   ',' (string memory at 1014749f6)
  7ff32b000220 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0f94947 1 1 0 0 0      TREF   'foreachType' at 7ff32a804300 (string memory at 1014749f9)
  7ff32b000240 | 34 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060bf5d 1 1 0 0 0  SEQUENCE *  => [ 7ff32b000200 7ff32b000220 ] (array memory at 1015dbf60)
  7ff32b000260 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080bf5d 1 1 0 0 0  SEQUENCE    => [ 7ff32b0001e0 7ff32b000240 ] (array memory at 1015dbf80)
  7ff32b000280 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0294a47 1 1 0 0 0      TREF   'atAttribute' at 7ff32a02aa80 (string memory at 101474a29)
  7ff32b0002a0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 03d4a47 1 1 0 0 0   LITERAL   'pure' (string memory at 101474a3d)
  7ff32b0002c0 |  1 0 0 0 0 0 0 0 7 0 0 0 0 0 0 04b4a47 1 1 0 0 0   LITERAL   'nothrow' (string memory at 101474a4b)
  7ff32b0002e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0bf5d 1 1 0 0 0    EITHER    => [ 7ff32b0002a0 7ff32b0002c0 ] (array memory at 1015dbfa0)
  7ff32b000300 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0bf5d 1 1 0 0 0    EITHER    => [ 7ff32b000280 7ff32b0002e0 ] (array memory at 1015dbfc0)
  7ff32b000320 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 080ae5d 1 1 0 0 0    EITHER    => [ 7ff32b000300 ] (array memory at 1015dae80)
  7ff32b000340 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b0 55e 1 1 0 0 0    EITHER    => [ 7ff32b802900 ] (array memory at 1015e05b0)
  7ff32b000360 |  2 0 0 0 0 0 0 015 0 0 0 0 0 0 0714a47 1 1 0 0 0      TREF   'specifiedFunctionBody' at 7ff32b000340 (string memory at 101474a71)
  7ff32b000380 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 030da5d 1 1 0 0 0    EITHER    => [ 7ff32b003ea0 ] (array memory at 1015dda30)
  7ff32b0003a0 |  2 0 0 0 0 0 0 013 0 0 0 0 0 0 08e4a47 1 1 0 0 0      TREF   'missingFunctionBody' at 7ff32b000380 (string memory at 101474a8e)
  7ff32b0003c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040c05d 1 1 0 0 0    EITHER    => [ 7ff32b000360 7ff32b0003a0 ] (array memory at 1015dc040)
  7ff32b0003e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 b5e 1 1 0 0 0    EITHER    => [ 7ff32b803e20 ] (array memory at 1015e0b00)
  7ff32b000400 |  2 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0c94a47 1 1 0 0 0      TREF   'symbol' at 7ff32b0003e0 (string memory at 101474ac9)
  7ff32b000420 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0d04a47 1 1 0 0 0      TREF   'arguments' at 7ff32a028180 (string memory at 101474ad0)
  7ff32b000440 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080c05d 1 1 0 0 0  SEQUENCE    => [ 7ff32b000400 7ff32b000420 ] (array memory at 1015dc080)
  7ff32b000460 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0e14a47 1 1 0 0 0      TREF   'unaryExpression' at 7ff32a800360 (string memory at 101474ae1)
  7ff32b000480 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0f14a47 1 1 0 0 0      TREF   'arguments' at 7ff32a028180 (string memory at 101474af1)
  7ff32b0004a0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0c05d 1 1 0 0 0  SEQUENCE    => [ 7ff32b000460 7ff32b000480 ] (array memory at 1015dc0a0)
  7ff32b0004c0 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 24b47 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 101474b02)
  7ff32b0004e0 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0 74b47 1 1 0 0 0      TREF   'arguments' at 7ff32a028180 (string memory at 101474b07)
  7ff32b000500 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0c05d 1 1 0 0 0  SEQUENCE    => [ 7ff32b0004c0 7ff32b0004e0 ] (array memory at 1015dc0c0)
  7ff32b000520 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0c05d 1 1 0 0 0    EITHER    => [ 7ff32b0004a0 7ff32b000500 ] (array memory at 1015dc0e0)
  7ff32b000540 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0c15d 1 1 0 0 0    EITHER    => [ 7ff32b000440 7ff32b000520 ] (array memory at 1015dc100)
  7ff32b000560 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 010af5d 1 1 0 0 0    EITHER    => [ 7ff32b000540 ] (array memory at 1015daf10)
  7ff32b000580 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 020d65d 1 1 0 0 0    EITHER    => [ 7ff32b002920 ] (array memory at 1015dd620)
  7ff32b0005a0 |  2 0 0 0 0 0 0 017 0 0 0 0 0 0 0324b47 1 1 0 0 0      TREF   'inOutContractExpression' at 7ff32b000580 (string memory at 101474b32)
  7ff32b0005c0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 050d65d 1 1 0 0 0    EITHER    => [ 7ff32b0029c0 ] (array memory at 1015dd650)
  7ff32b0005e0 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0514b47 1 1 0 0 0      TREF   'inOutStatement' at 7ff32b0005c0 (string memory at 101474b51)
  7ff32b000600 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080c15d 1 1 0 0 0    EITHER    => [ 7ff32b0005a0 7ff32b0005e0 ] (array memory at 1015dc180)
  7ff32b000620 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 040af5d 1 1 0 0 0    EITHER    => [ 7ff32b000600 ] (array memory at 1015daf40)
  7ff32b000640 | 22 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0854b47 1 1 0 0 0      TREF + 'storageClass' at 7ff32a0276a0 (string memory at 101474b85)
  7ff32b000660 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0954b47 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 101474b95)
  7ff32b000680 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0c15d 1 1 0 0 0    EITHER    => [ 7ff32b000640 7ff32b000660 ] (array memory at 1015dc1c0)
  7ff32b0006a0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 09b4b47 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101474b9b)
  7ff32b0006c0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0a64b47 1 1 0 0 0      TREF   'parameters' at 7ff32a027860 (string memory at 101474ba6)
  7ff32b0006e0 | 32 0 0 0 0 0 0 017 0 0 0 0 0 0 0b14b47 1 1 0 0 0      TREF * 'memberFunctionAttribute' at 7ff32a027b20 (string memory at 101474bb1)
  7ff32b000700 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0cb4b47 1 1 0 0 0      TREF   'functionBody' at 7ff32a801e60 (string memory at 101474bcb)
  7ff32b000720 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0db4b47 1 1 0 0 0   LITERAL   ';' (string memory at 101474bdb)
  7ff32b000740 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0c25d 1 1 0 0 0    EITHER    => [ 7ff32b000700 7ff32b000720 ] (array memory at 1015dc200)
  7ff32b000760 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 050aa5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b000680 7ff32b0006a0 7ff32b0006c0 7ff32b0006e0 7ff32b000740 ] (array memory at 1015caa50)
  7ff32b000780 | 22 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0e74b47 1 1 0 0 0      TREF + 'storageClass' at 7ff32a0276a0 (string memory at 101474be7)
  7ff32b0007a0 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0f74b47 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 101474bf7)
  7ff32b0007c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020c25d 1 1 0 0 0    EITHER    => [ 7ff32b000780 7ff32b0007a0 ] (array memory at 1015dc220)
  7ff32b0007e0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0fd4b47 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101474bfd)
  7ff32b000800 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 0 84c47 1 1 0 0 0      TREF   'templateParameters' at 7ff32a0279a0 (string memory at 101474c08)
  7ff32b000820 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 01b4c47 1 1 0 0 0      TREF   'parameters' at 7ff32a027860 (string memory at 101474c1b)
  7ff32b000840 | 32 0 0 0 0 0 0 017 0 0 0 0 0 0 0264c47 1 1 0 0 0      TREF * 'memberFunctionAttribute' at 7ff32a027b20 (string memory at 101474c26)
  7ff32b000860 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 03f4c47 1 1 0 0 0      TREF ? 'constraint' at 7ff32a800aa0 (string memory at 101474c3f)
  7ff32b000880 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 04c4c47 1 1 0 0 0      TREF   'functionBody' at 7ff32a801e60 (string memory at 101474c4c)
  7ff32b0008a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 05c4c47 1 1 0 0 0   LITERAL   ';' (string memory at 101474c5c)
  7ff32b0008c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060c25d 1 1 0 0 0    EITHER    => [ 7ff32b000880 7ff32b0008a0 ] (array memory at 1015dc260)
  7ff32b0008e0 |  4 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0c0c55c 1 1 0 0 0  SEQUENCE    => [ 7ff32b0007c0 7ff32b0007e0 7ff32b000800 7ff32b000820 7ff32b000840 7ff32b000860 7ff32b0008c0 ] (array memory at 1015cc5c0)
  7ff32b000900 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080c25d 1 1 0 0 0    EITHER    => [ 7ff32b000760 7ff32b0008e0 ] (array memory at 1015dc280)
  7ff32b000920 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 08b4c47 1 1 0 0 0   LITERAL   'delegate' (string memory at 101474c8b)
  7ff32b000940 | 11 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0964c47 1 1 0 0 0   LITERAL ? 'ref' (string memory at 101474c96)
  7ff32b000960 | 12 0 0 0 0 0 0 0 4 0 0 0 0 0 0 09c4c47 1 1 0 0 0      TREF ? 'type' at 7ff32a0276e0 (string memory at 101474c9c)
  7ff32b000980 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0a34c47 1 1 0 0 0      TREF   'parameters' at 7ff32a027860 (string memory at 101474ca3)
  7ff32b0009a0 | 32 0 0 0 0 0 0 011 0 0 0 0 0 0 0ae4c47 1 1 0 0 0      TREF * 'functionAttribute' at 7ff32b000320 (string memory at 101474cae)
  7ff32b0009c0 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0c25d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b000980 7ff32b0009a0 ] (array memory at 1015dc2c0)
  7ff32b0009e0 |  2 0 0 0 0 0 0 015 0 0 0 0 0 0 0c34c47 1 1 0 0 0      TREF   'specifiedFunctionBody' at 7ff32b000340 (string memory at 101474cc3)
  7ff32b000a00 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0b0aa5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b000920 7ff32b000940 7ff32b000960 7ff32b0009c0 7ff32b0009e0 ] (array memory at 1015caab0)
  7ff32b000a20 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0e14c47 1 1 0 0 0   LITERAL   'function' (string memory at 101474ce1)
  7ff32b000a40 | 11 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0ec4c47 1 1 0 0 0   LITERAL ? 'ref' (string memory at 101474cec)
  7ff32b000a60 | 12 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0f24c47 1 1 0 0 0      TREF ? 'type' at 7ff32a0276e0 (string memory at 101474cf2)
  7ff32b000a80 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0f94c47 1 1 0 0 0      TREF   'parameters' at 7ff32a027860 (string memory at 101474cf9)
  7ff32b000aa0 | 32 0 0 0 0 0 0 011 0 0 0 0 0 0 0 44d47 1 1 0 0 0      TREF * 'functionAttribute' at 7ff32b000320 (string memory at 101474d04)
  7ff32b000ac0 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0c35d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b000a80 7ff32b000aa0 ] (array memory at 1015dc300)
  7ff32b000ae0 |  2 0 0 0 0 0 0 015 0 0 0 0 0 0 0194d47 1 1 0 0 0      TREF   'specifiedFunctionBody' at 7ff32b000340 (string memory at 101474d19)
  7ff32b000b00 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0e0aa5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b000a20 7ff32b000a40 7ff32b000a60 7ff32b000ac0 7ff32b000ae0 ] (array memory at 1015caae0)
  7ff32b000b20 | 11 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0374d47 1 1 0 0 0   LITERAL ? 'ref' (string memory at 101474d37)
  7ff32b000b40 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 03d4d47 1 1 0 0 0      TREF   'parameters' at 7ff32a027860 (string memory at 101474d3d)
  7ff32b000b60 | 32 0 0 0 0 0 0 011 0 0 0 0 0 0 0484d47 1 1 0 0 0      TREF * 'functionAttribute' at 7ff32b000320 (string memory at 101474d48)
  7ff32b000b80 |  2 0 0 0 0 0 0 015 0 0 0 0 0 0 05b4d47 1 1 0 0 0      TREF   'specifiedFunctionBody' at 7ff32b000340 (string memory at 101474d5b)
  7ff32b000ba0 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 010ab5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b000b20 7ff32b000b40 7ff32b000b60 7ff32b000b80 ] (array memory at 1015cab10)
  7ff32b000bc0 |  2 0 0 0 0 0 0 015 0 0 0 0 0 0 0784d47 1 1 0 0 0      TREF   'specifiedFunctionBody' at 7ff32b000340 (string memory at 101474d78)
  7ff32b000be0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0954d47 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101474d95)
  7ff32b000c00 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a14d47 1 1 0 0 0   LITERAL   '=>' (string memory at 101474da1)
  7ff32b000c20 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0a54d47 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 101474da5)
  7ff32b000c40 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 040c35d 1 1 0 0 0  SEQUENCE    => [ 7ff32b000be0 7ff32b000c00 7ff32b000c20 ] (array memory at 1015dc340)
  7ff32b000c60 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0be4d47 1 1 0 0 0   LITERAL   'function' (string memory at 101474dbe)
  7ff32b000c80 | 11 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0c94d47 1 1 0 0 0   LITERAL ? 'ref' (string memory at 101474dc9)
  7ff32b000ca0 | 12 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0cf4d47 1 1 0 0 0      TREF ? 'type' at 7ff32a0276e0 (string memory at 101474dcf)
  7ff32b000cc0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0d54d47 1 1 0 0 0      TREF   'parameters' at 7ff32a027860 (string memory at 101474dd5)
  7ff32b000ce0 | 32 0 0 0 0 0 0 011 0 0 0 0 0 0 0e04d47 1 1 0 0 0      TREF * 'functionAttribute' at 7ff32b000320 (string memory at 101474de0)
  7ff32b000d00 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0f44d47 1 1 0 0 0   LITERAL   '=>' (string memory at 101474df4)
  7ff32b000d20 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0f84d47 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 101474df8)
  7ff32b000d40 |  4 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0 0c65c 1 1 0 0 0  SEQUENCE    => [ 7ff32b000c60 7ff32b000c80 7ff32b000ca0 7ff32b000cc0 7ff32b000ce0 7ff32b000d00 7ff32b000d20 ] (array memory at 1015cc600)
  7ff32b000d60 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0114e47 1 1 0 0 0   LITERAL   'delegate' (string memory at 101474e11)
  7ff32b000d80 | 11 0 0 0 0 0 0 0 3 0 0 0 0 0 0 01c4e47 1 1 0 0 0   LITERAL ? 'ref' (string memory at 101474e1c)
  7ff32b000da0 | 12 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0224e47 1 1 0 0 0      TREF ? 'type' at 7ff32a0276e0 (string memory at 101474e22)
  7ff32b000dc0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0284e47 1 1 0 0 0      TREF   'parameters' at 7ff32a027860 (string memory at 101474e28)
  7ff32b000de0 | 32 0 0 0 0 0 0 011 0 0 0 0 0 0 0334e47 1 1 0 0 0      TREF * 'functionAttribute' at 7ff32b000320 (string memory at 101474e33)
  7ff32b000e00 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0474e47 1 1 0 0 0   LITERAL   '=>' (string memory at 101474e47)
  7ff32b000e20 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 04b4e47 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 101474e4b)
  7ff32b000e40 |  4 0 0 0 0 0 0 0 7 0 0 0 0 0 0 040c65c 1 1 0 0 0  SEQUENCE    => [ 7ff32b000d60 7ff32b000d80 7ff32b000da0 7ff32b000dc0 7ff32b000de0 7ff32b000e00 7ff32b000e20 ] (array memory at 1015cc640)
  7ff32b000e60 | 11 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0644e47 1 1 0 0 0   LITERAL ? 'ref' (string memory at 101474e64)
  7ff32b000e80 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 06a4e47 1 1 0 0 0      TREF   'parameters' at 7ff32a027860 (string memory at 101474e6a)
  7ff32b000ea0 | 32 0 0 0 0 0 0 011 0 0 0 0 0 0 0754e47 1 1 0 0 0      TREF * 'functionAttribute' at 7ff32b000320 (string memory at 101474e75)
  7ff32b000ec0 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0894e47 1 1 0 0 0   LITERAL   '=>' (string memory at 101474e89)
  7ff32b000ee0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 08d4e47 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 101474e8d)
  7ff32b000f00 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0a0ab5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b000e60 7ff32b000e80 7ff32b000ea0 7ff32b000ec0 7ff32b000ee0 ] (array memory at 1015caba0)
  7ff32b000f20 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0c35d 1 1 0 0 0    EITHER    => [ 7ff32b000e40 7ff32b000f00 ] (array memory at 1015dc3c0)
  7ff32b000f40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0c35d 1 1 0 0 0    EITHER    => [ 7ff32b000d40 7ff32b000f20 ] (array memory at 1015dc3e0)
  7ff32b000f60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0c45d 1 1 0 0 0    EITHER    => [ 7ff32b000c40 7ff32b000f40 ] (array memory at 1015dc400)
  7ff32b000f80 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020c45d 1 1 0 0 0    EITHER    => [ 7ff32b000bc0 7ff32b000f60 ] (array memory at 1015dc420)
  7ff32b000fa0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040c45d 1 1 0 0 0    EITHER    => [ 7ff32b000ba0 7ff32b000f80 ] (array memory at 1015dc440)
  7ff32b000fc0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060c45d 1 1 0 0 0    EITHER    => [ 7ff32b000b00 7ff32b000fa0 ] (array memory at 1015dc460)
  7ff32b000fe0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080c45d 1 1 0 0 0    EITHER    => [ 7ff32b000a00 7ff32b000fc0 ] (array memory at 1015dc480)
  7ff32b001000 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0c04e47 1 1 0 0 0      TREF   'expression' at 7ff32a801d40 (string memory at 101474ec0)
  7ff32b001020 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0cc4e47 1 1 0 0 0   LITERAL   ':' (string memory at 101474ecc)
  7ff32b001040 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a0d15d 1 1 0 0 0    EITHER    => [ 7ff32b0013c0 ] (array memory at 1015dd1a0)
  7ff32b001060 | 12 0 0 0 0 0 0 011 0 0 0 0 0 0 0cf4e47 1 1 0 0 0      TREF ? 'gccAsmOperandList' at 7ff32b001040 (string memory at 101474ecf)
  7ff32b001080 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e44e47 1 1 0 0 0   LITERAL   ':' (string memory at 101474ee4)
  7ff32b0010a0 | 12 0 0 0 0 0 0 011 0 0 0 0 0 0 0e74e47 1 1 0 0 0      TREF ? 'gccAsmOperandList' at 7ff32b001040 (string memory at 101474ee7)
  7ff32b0010c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0fc4e47 1 1 0 0 0   LITERAL   ':' (string memory at 101474efc)
  7ff32b0010e0 |  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0      NONE   
  7ff32b001100 |  2 0 0 0 0 0 0 011 0 0 0 0 0 0 0ff4e47 1 1 0 0 0      TREF   'stringLiteralList' at 7ff32b0010e0 (string memory at 101474eff)
  7ff32b001120 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020c55d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b0010c0 7ff32b001100 ] (array memory at 1015dc520)
  7ff32b001140 | 14 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0e0c45d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b001080 7ff32b0010a0 7ff32b001120 ] (array memory at 1015dc4e0)
  7ff32b001160 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0174f47 1 1 0 0 0   LITERAL   ';' (string memory at 101474f17)
  7ff32b001180 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0d0ab5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b001000 7ff32b001020 7ff32b001060 7ff32b001140 7ff32b001160 ] (array memory at 1015cabd0)
  7ff32b0011a0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0214f47 1 1 0 0 0      TREF   'expression' at 7ff32a801d40 (string memory at 101474f21)
  7ff32b0011c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 02d4f47 1 1 0 0 0   LITERAL   ':' (string memory at 101474f2d)
  7ff32b0011e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0314f47 1 1 0 0 0   LITERAL   ':' (string memory at 101474f31)
  7ff32b001200 | 12 0 0 0 0 0 0 011 0 0 0 0 0 0 0344f47 1 1 0 0 0      TREF ? 'gccAsmOperandList' at 7ff32b001040 (string memory at 101474f34)
  7ff32b001220 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0484f47 1 1 0 0 0   LITERAL   ':' (string memory at 101474f48)
  7ff32b001240 |  2 0 0 0 0 0 0 011 0 0 0 0 0 0 04b4f47 1 1 0 0 0      TREF   'stringLiteralList' at 7ff32b0010e0 (string memory at 101474f4b)
  7ff32b001260 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 05e4f47 1 1 0 0 0   LITERAL   ';' (string memory at 101474f5e)
  7ff32b001280 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0624f47 1 1 0 0 0   LITERAL   ':' (string memory at 101474f62)
  7ff32b0012a0 |  2 0 0 0 0 0 0 018 0 0 0 0 0 0 0654f47 1 1 0 0 0      TREF   'declaratorIdentifierList' at 7ff32a027720 (string memory at 101474f65)
  7ff32b0012c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 07f4f47 1 1 0 0 0   LITERAL   ';' (string memory at 101474f7f)
  7ff32b0012e0 |  4 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0 0 35d 1 1 0 0 0  SEQUENCE    => [ 7ff32b0011a0 7ff32b0011c0 7ff32b0011e0 7ff32b001200 7ff32b001220 7ff32b001240 7ff32b001260 7ff32b001280 7ff32b0012a0 7ff32b0012c0 ] (array memory at 1015d0300)
  7ff32b001300 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060c55d 1 1 0 0 0    EITHER    => [ 7ff32b001180 7ff32b0012e0 ] (array memory at 1015dc560)
  7ff32b001320 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d0d15d 1 1 0 0 0    EITHER    => [ 7ff32b001500 ] (array memory at 1015dd1d0)
  7ff32b001340 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0a24f47 1 1 0 0 0      TREF   'gccAsmOperand' at 7ff32b001320 (string memory at 101474fa2)
  7ff32b001360 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b24f47 1 1 0 0 0   LITERAL   ',' (string memory at 101474fb2)
  7ff32b001380 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0b54f47 1 1 0 0 0      TREF   'gccAsmOperand' at 7ff32b001320 (string memory at 101474fb5)
  7ff32b0013a0 | 34 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0c55d 1 1 0 0 0  SEQUENCE *  => [ 7ff32b001360 7ff32b001380 ] (array memory at 1015dc5a0)
  7ff32b0013c0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0c55d 1 1 0 0 0  SEQUENCE    => [ 7ff32b001340 7ff32b0013a0 ] (array memory at 1015dc5c0)
  7ff32b0013e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e34f47 1 1 0 0 0   LITERAL   '[' (string memory at 101474fe3)
  7ff32b001400 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0e64f47 1 1 0 0 0      TREF   'identifier' at 7ff32a027800 (string memory at 101474fe6)
  7ff32b001420 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f24f47 1 1 0 0 0   LITERAL   ']' (string memory at 101474ff2)
  7ff32b001440 | 14 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0e0c55d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b0013e0 7ff32b001400 7ff32b001420 ] (array memory at 1015dc5e0)
  7ff32b001460 |  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0      NONE   
  7ff32b001480 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0f74f47 1 1 0 0 0      TREF   'stringLiteral' at 7ff32b001460 (string memory at 101474ff7)
  7ff32b0014a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 65047 1 1 0 0 0   LITERAL   '(' (string memory at 101475006)
  7ff32b0014c0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0 95047 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 101475009)
  7ff32b0014e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 01b5047 1 1 0 0 0   LITERAL   ')' (string memory at 10147501b)
  7ff32b001500 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 030ac5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b001440 7ff32b001480 7ff32b0014a0 7ff32b0014c0 7ff32b0014e0 ] (array memory at 1015cac30)
  7ff32b001520 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 03b5047 1 1 0 0 0   LITERAL   'goto' (string memory at 10147503b)
  7ff32b001540 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0425047 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101475042)
  7ff32b001560 |  1 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0505047 1 1 0 0 0   LITERAL   'default' (string memory at 101475050)
  7ff32b001580 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 05c5047 1 1 0 0 0   LITERAL   'case' (string memory at 10147505c)
  7ff32b0015a0 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0625047 1 1 0 0 0      TREF ? 'expression' at 7ff32a801d40 (string memory at 101475062)
  7ff32b0015c0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040c65d 1 1 0 0 0  SEQUENCE    => [ 7ff32b001580 7ff32b0015a0 ] (array memory at 1015dc640)
  7ff32b0015e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060c65d 1 1 0 0 0    EITHER    => [ 7ff32b001560 7ff32b0015c0 ] (array memory at 1015dc660)
  7ff32b001600 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080c65d 1 1 0 0 0    EITHER    => [ 7ff32b001540 7ff32b0015e0 ] (array memory at 1015dc680)
  7ff32b001620 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0705047 1 1 0 0 0   LITERAL   ';' (string memory at 101475070)
  7ff32b001640 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0a0c65d 1 1 0 0 0  SEQUENCE    => [ 7ff32b001520 7ff32b001600 7ff32b001620 ] (array memory at 1015dc6a0)
  7ff32b001660 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 020d25d 1 1 0 0 0    EITHER    => [ 7ff32b001640 ] (array memory at 1015dd220)
  7ff32b001680 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0915047 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101475091)
  7ff32b0016a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 09e5047 1 1 0 0 0   LITERAL   '.' (string memory at 10147509e)
  7ff32b0016c0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0a15047 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 1014750a1)
  7ff32b0016e0 | 34 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0c65d 1 1 0 0 0  SEQUENCE *  => [ 7ff32b0016a0 7ff32b0016c0 ] (array memory at 1015dc6e0)
  7ff32b001700 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0c75d 1 1 0 0 0  SEQUENCE    => [ 7ff32b001680 7ff32b0016e0 ] (array memory at 1015dc700)
  7ff32b001720 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 020d35d 1 1 0 0 0    EITHER    => [ 7ff32b001ae0 ] (array memory at 1015dd320)
  7ff32b001740 |  2 0 0 0 0 0 0 01c 0 0 0 0 0 0 0d15047 1 1 0 0 0      TREF   'identifierOrTemplateInstance' at 7ff32b001720 (string memory at 1014750d1)
  7ff32b001760 |  2 0 0 0 0 0 0 01c 0 0 0 0 0 0 0f55047 1 1 0 0 0      TREF   'identifierOrTemplateInstance' at 7ff32b001720 (string memory at 1014750f5)
  7ff32b001780 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0135147 1 1 0 0 0   LITERAL   '.' (string memory at 101475113)
  7ff32b0017a0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0c0d25d 1 1 0 0 0    EITHER    => [ 7ff32b0019c0 ] (array memory at 1015dd2c0)
  7ff32b0017c0 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 0165147 1 1 0 0 0      TREF   'typeIdentifierPart' at 7ff32b0017a0 (string memory at 101475116)
  7ff32b0017e0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 040c75d 1 1 0 0 0  SEQUENCE    => [ 7ff32b001760 7ff32b001780 7ff32b0017c0 ] (array memory at 1015dc740)
  7ff32b001800 |  2 0 0 0 0 0 0 01c 0 0 0 0 0 0 0305147 1 1 0 0 0      TREF   'identifierOrTemplateInstance' at 7ff32b001720 (string memory at 101475130)
  7ff32b001820 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 04e5147 1 1 0 0 0   LITERAL   '[' (string memory at 10147514e)
  7ff32b001840 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0515147 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 101475151)
  7ff32b001860 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0635147 1 1 0 0 0   LITERAL   ']' (string memory at 101475163)
  7ff32b001880 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 060ac5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b001800 7ff32b001820 7ff32b001840 7ff32b001860 ] (array memory at 1015cac60)
  7ff32b0018a0 |  2 0 0 0 0 0 0 01c 0 0 0 0 0 0 06d5147 1 1 0 0 0      TREF   'identifierOrTemplateInstance' at 7ff32b001720 (string memory at 10147516d)
  7ff32b0018c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 08b5147 1 1 0 0 0   LITERAL   '[' (string memory at 10147518b)
  7ff32b0018e0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 08e5147 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 10147518e)
  7ff32b001900 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a05147 1 1 0 0 0   LITERAL   ']' (string memory at 1014751a0)
  7ff32b001920 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a45147 1 1 0 0 0   LITERAL   '.' (string memory at 1014751a4)
  7ff32b001940 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 0a75147 1 1 0 0 0      TREF   'typeIdentifierPart' at 7ff32b0017a0 (string memory at 1014751a7)
  7ff32b001960 |  4 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0c0c65c 1 1 0 0 0  SEQUENCE    => [ 7ff32b0018a0 7ff32b0018c0 7ff32b0018e0 7ff32b001900 7ff32b001920 7ff32b001940 ] (array memory at 1015cc6c0)
  7ff32b001980 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0c75d 1 1 0 0 0    EITHER    => [ 7ff32b001880 7ff32b001960 ] (array memory at 1015dc7c0)
  7ff32b0019a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0c75d 1 1 0 0 0    EITHER    => [ 7ff32b0017e0 7ff32b001980 ] (array memory at 1015dc7e0)
  7ff32b0019c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0c85d 1 1 0 0 0    EITHER    => [ 7ff32b001740 7ff32b0019a0 ] (array memory at 1015dc800)
  7ff32b0019e0 |  2 0 0 0 0 0 0 01c 0 0 0 0 0 0 0e25147 1 1 0 0 0      TREF   'identifierOrTemplateInstance' at 7ff32b001720 (string memory at 1014751e2)
  7ff32b001a00 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 15247 1 1 0 0 0   LITERAL   '.' (string memory at 101475201)
  7ff32b001a20 |  2 0 0 0 0 0 0 01c 0 0 0 0 0 0 0 45247 1 1 0 0 0      TREF   'identifierOrTemplateInstance' at 7ff32b001720 (string memory at 101475204)
  7ff32b001a40 | 34 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020c85d 1 1 0 0 0  SEQUENCE *  => [ 7ff32b001a00 7ff32b001a20 ] (array memory at 1015dc820)
  7ff32b001a60 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040c85d 1 1 0 0 0  SEQUENCE    => [ 7ff32b0019e0 7ff32b001a40 ] (array memory at 1015dc840)
  7ff32b001a80 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f0d25d 1 1 0 0 0    EITHER    => [ 7ff32b001a60 ] (array memory at 1015dd2f0)
  7ff32b001aa0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0505247 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101475250)
  7ff32b001ac0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0625247 1 1 0 0 0      TREF   'templateInstance' at 7ff32a02a9c0 (string memory at 101475262)
  7ff32b001ae0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080c85d 1 1 0 0 0    EITHER    => [ 7ff32b001aa0 7ff32b001ac0 ] (array memory at 1015dc880)
  7ff32b001b00 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0945247 1 1 0 0 0      TREF   'shiftExpression' at 7ff32a800e40 (string memory at 101475294)
  7ff32b001b20 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a65247 1 1 0 0 0   LITERAL   'is' (string memory at 1014752a6)
  7ff32b001b40 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0ae5247 1 1 0 0 0   LITERAL   '!' (string memory at 1014752ae)
  7ff32b001b60 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0b25247 1 1 0 0 0   LITERAL   'is' (string memory at 1014752b2)
  7ff32b001b80 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0c85d 1 1 0 0 0  SEQUENCE    => [ 7ff32b001b40 7ff32b001b60 ] (array memory at 1015dc8a0)
  7ff32b001ba0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0c85d 1 1 0 0 0    EITHER    => [ 7ff32b001b20 7ff32b001b80 ] (array memory at 1015dc8c0)
  7ff32b001bc0 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0b85247 1 1 0 0 0      TREF   'shiftExpression' at 7ff32a800e40 (string memory at 1014752b8)
  7ff32b001be0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0e0c85d 1 1 0 0 0  SEQUENCE    => [ 7ff32b001b00 7ff32b001ba0 7ff32b001bc0 ] (array memory at 1015dc8e0)
  7ff32b001c00 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e35247 1 1 0 0 0   LITERAL   'if' (string memory at 1014752e3)
  7ff32b001c20 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e85247 1 1 0 0 0   LITERAL   '(' (string memory at 1014752e8)
  7ff32b001c40 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 020d45d 1 1 0 0 0    EITHER    => [ 7ff32b001fe0 ] (array memory at 1015dd420)
  7ff32b001c60 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0eb5247 1 1 0 0 0      TREF   'ifCondition' at 7ff32b001c40 (string memory at 1014752eb)
  7ff32b001c80 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f85247 1 1 0 0 0   LITERAL   ')' (string memory at 1014752f8)
  7ff32b001ca0 |  2 0 0 0 0 0 0 016 0 0 0 0 0 0 0fb5247 1 1 0 0 0      TREF   'declarationOrStatement' at 7ff32a800760 (string memory at 1014752fb)
  7ff32b001cc0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0145347 1 1 0 0 0   LITERAL   'else' (string memory at 101475314)
  7ff32b001ce0 |  2 0 0 0 0 0 0 016 0 0 0 0 0 0 01a5347 1 1 0 0 0      TREF   'declarationOrStatement' at 7ff32a800760 (string memory at 10147531a)
  7ff32b001d00 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040c95d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b001cc0 7ff32b001ce0 ] (array memory at 1015dc940)
  7ff32b001d20 |  4 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0c75c 1 1 0 0 0  SEQUENCE    => [ 7ff32b001c00 7ff32b001c20 7ff32b001c60 7ff32b001c80 7ff32b001ca0 7ff32b001d00 ] (array memory at 1015cc700)
  7ff32b001d40 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a0d35d 1 1 0 0 0    EITHER    => [ 7ff32b001d20 ] (array memory at 1015dd3a0)
  7ff32b001d60 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0505347 1 1 0 0 0   LITERAL   'auto' (string memory at 101475350)
  7ff32b001d80 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0565347 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101475356)
  7ff32b001da0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0625347 1 1 0 0 0   LITERAL   '=' (string memory at 101475362)
  7ff32b001dc0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0655347 1 1 0 0 0      TREF   'expression' at 7ff32a801d40 (string memory at 101475365)
  7ff32b001de0 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0f0ac5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b001d60 7ff32b001d80 7ff32b001da0 7ff32b001dc0 ] (array memory at 1015cacf0)
  7ff32b001e00 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 050335e 1 1 0 0 0    EITHER    => [ 7ff32b805f20 ] (array memory at 1015e3350)
  7ff32b001e20 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0775347 1 1 0 0 0      TREF   'typeConstructors' at 7ff32b001e00 (string memory at 101475377)
  7ff32b001e40 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0885347 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101475388)
  7ff32b001e60 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0945347 1 1 0 0 0   LITERAL   '=' (string memory at 101475394)
  7ff32b001e80 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0975347 1 1 0 0 0      TREF   'expression' at 7ff32a801d40 (string memory at 101475397)
  7ff32b001ea0 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 020ad5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b001e20 7ff32b001e40 7ff32b001e60 7ff32b001e80 ] (array memory at 1015cad20)
  7ff32b001ec0 | 12 0 0 0 0 0 0 010 0 0 0 0 0 0 0a95347 1 1 0 0 0      TREF ? 'typeConstructors' at 7ff32b001e00 (string memory at 1014753a9)
  7ff32b001ee0 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0bb5347 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 1014753bb)
  7ff32b001f00 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0c05347 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 1014753c0)
  7ff32b001f20 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0cc5347 1 1 0 0 0   LITERAL   '=' (string memory at 1014753cc)
  7ff32b001f40 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0cf5347 1 1 0 0 0      TREF   'expression' at 7ff32a801d40 (string memory at 1014753cf)
  7ff32b001f60 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 050ad5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b001ec0 7ff32b001ee0 7ff32b001f00 7ff32b001f20 7ff32b001f40 ] (array memory at 1015cad50)
  7ff32b001f80 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0e15347 1 1 0 0 0      TREF   'expression' at 7ff32a801d40 (string memory at 1014753e1)
  7ff32b001fa0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0ca5d 1 1 0 0 0    EITHER    => [ 7ff32b001f60 7ff32b001f80 ] (array memory at 1015dca00)
  7ff32b001fc0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020ca5d 1 1 0 0 0    EITHER    => [ 7ff32b001ea0 7ff32b001fa0 ] (array memory at 1015dca20)
  7ff32b001fe0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040ca5d 1 1 0 0 0    EITHER    => [ 7ff32b001de0 7ff32b001fc0 ] (array memory at 1015dca40)
  7ff32b002000 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0 55447 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101475405)
  7ff32b002020 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0125447 1 1 0 0 0   LITERAL   '=' (string memory at 101475412)
  7ff32b002040 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0155447 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101475415)
  7ff32b002060 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060ca5d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b002020 7ff32b002040 ] (array memory at 1015dca60)
  7ff32b002080 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080ca5d 1 1 0 0 0  SEQUENCE    => [ 7ff32b002000 7ff32b002060 ] (array memory at 1015dca80)
  7ff32b0020a0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 050d45d 1 1 0 0 0    EITHER    => [ 7ff32b002080 ] (array memory at 1015dd450)
  7ff32b0020c0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 050 55e 1 1 0 0 0    EITHER    => [ 7ff32b802720 ] (array memory at 1015e0550)
  7ff32b0020e0 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 03f5447 1 1 0 0 0      TREF   'singleImport' at 7ff32b0020c0 (string memory at 10147543f)
  7ff32b002100 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 04d5447 1 1 0 0 0   LITERAL   ':' (string memory at 10147544d)
  7ff32b002120 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0505447 1 1 0 0 0      TREF   'importBind' at 7ff32b0020a0 (string memory at 101475450)
  7ff32b002140 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 05d5447 1 1 0 0 0   LITERAL   ',' (string memory at 10147545d)
  7ff32b002160 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0605447 1 1 0 0 0      TREF   'importBind' at 7ff32b0020a0 (string memory at 101475460)
  7ff32b002180 | 34 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0cb5d 1 1 0 0 0  SEQUENCE *  => [ 7ff32b002140 7ff32b002160 ] (array memory at 1015dcb00)
  7ff32b0021a0 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 080ad5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b0020e0 7ff32b002100 7ff32b002120 7ff32b002180 ] (array memory at 1015cad80)
  7ff32b0021c0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 080d45d 1 1 0 0 0    EITHER    => [ 7ff32b0021a0 ] (array memory at 1015dd480)
  7ff32b0021e0 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0905447 1 1 0 0 0   LITERAL   'import' (string memory at 101475490)
  7ff32b002200 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0985447 1 1 0 0 0      TREF   'singleImport' at 7ff32b0020c0 (string memory at 101475498)
  7ff32b002220 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a75447 1 1 0 0 0   LITERAL   ',' (string memory at 1014754a7)
  7ff32b002240 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0aa5447 1 1 0 0 0      TREF   'singleImport' at 7ff32b0020c0 (string memory at 1014754aa)
  7ff32b002260 | 34 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060cb5d 1 1 0 0 0  SEQUENCE *  => [ 7ff32b002220 7ff32b002240 ] (array memory at 1015dcb60)
  7ff32b002280 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0bb5447 1 1 0 0 0   LITERAL   ',' (string memory at 1014754bb)
  7ff32b0022a0 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0be5447 1 1 0 0 0      TREF   'importBindings' at 7ff32b0021c0 (string memory at 1014754be)
  7ff32b0022c0 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080cb5d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b002280 7ff32b0022a0 ] (array memory at 1015dcb80)
  7ff32b0022e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d05447 1 1 0 0 0   LITERAL   ';' (string memory at 1014754d0)
  7ff32b002300 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0b0ad5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b0021e0 7ff32b002200 7ff32b002260 7ff32b0022c0 7ff32b0022e0 ] (array memory at 1015cadb0)
  7ff32b002320 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0db5447 1 1 0 0 0   LITERAL   'import' (string memory at 1014754db)
  7ff32b002340 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0e35447 1 1 0 0 0      TREF   'importBindings' at 7ff32b0021c0 (string memory at 1014754e3)
  7ff32b002360 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f35447 1 1 0 0 0   LITERAL   ';' (string memory at 1014754f3)
  7ff32b002380 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0a0cb5d 1 1 0 0 0  SEQUENCE    => [ 7ff32b002320 7ff32b002340 7ff32b002360 ] (array memory at 1015dcba0)
  7ff32b0023a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0cb5d 1 1 0 0 0    EITHER    => [ 7ff32b002300 7ff32b002380 ] (array memory at 1015dcbc0)
  7ff32b0023c0 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0165547 1 1 0 0 0   LITERAL   'import' (string memory at 101475516)
  7ff32b0023e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 01f5547 1 1 0 0 0   LITERAL   '(' (string memory at 10147551f)
  7ff32b002400 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0225547 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 101475522)
  7ff32b002420 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0345547 1 1 0 0 0   LITERAL   ')' (string memory at 101475534)
  7ff32b002440 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0e0ad5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b0023c0 7ff32b0023e0 7ff32b002400 7ff32b002420 ] (array memory at 1015cade0)
  7ff32b002460 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0d55d 1 1 0 0 0    EITHER    => [ 7ff32b002440 ] (array memory at 1015dd500)
  7ff32b002480 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 04b5547 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 10147554b)
  7ff32b0024a0 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 05e5547 1 1 0 0 0   LITERAL   '..' (string memory at 10147555e)
  7ff32b0024c0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0625547 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 101475562)
  7ff32b0024e0 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020cc5d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b0024a0 7ff32b0024c0 ] (array memory at 1015dcc20)
  7ff32b002500 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040cc5d 1 1 0 0 0  SEQUENCE    => [ 7ff32b002480 7ff32b0024e0 ] (array memory at 1015dcc40)
  7ff32b002520 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 030d55d 1 1 0 0 0    EITHER    => [ 7ff32b002500 ] (array memory at 1015dd530)
  7ff32b002540 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0975547 1 1 0 0 0      TREF   'unaryExpression' at 7ff32a800360 (string memory at 101475597)
  7ff32b002560 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a85547 1 1 0 0 0   LITERAL   '[' (string memory at 1014755a8)
  7ff32b002580 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0ac5547 1 1 0 0 0   LITERAL   ']' (string memory at 1014755ac)
  7ff32b0025a0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 080cc5d 1 1 0 0 0  SEQUENCE    => [ 7ff32b002540 7ff32b002560 7ff32b002580 ] (array memory at 1015dcc80)
  7ff32b0025c0 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0b65547 1 1 0 0 0      TREF   'unaryExpression' at 7ff32a800360 (string memory at 1014755b6)
  7ff32b0025e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0c75547 1 1 0 0 0   LITERAL   '[' (string memory at 1014755c7)
  7ff32b002600 |  2 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0ca5547 1 1 0 0 0      TREF   'index' at 7ff32b002520 (string memory at 1014755ca)
  7ff32b002620 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d25547 1 1 0 0 0   LITERAL   ',' (string memory at 1014755d2)
  7ff32b002640 |  2 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0d55547 1 1 0 0 0      TREF   'index' at 7ff32b002520 (string memory at 1014755d5)
  7ff32b002660 | 34 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0cc5d 1 1 0 0 0  SEQUENCE *  => [ 7ff32b002620 7ff32b002640 ] (array memory at 1015dccc0)
  7ff32b002680 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0de5547 1 1 0 0 0   LITERAL   ']' (string memory at 1014755de)
  7ff32b0026a0 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 010ae5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b0025c0 7ff32b0025e0 7ff32b002600 7ff32b002660 7ff32b002680 ] (array memory at 1015cae10)
  7ff32b0026c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0cc5d 1 1 0 0 0    EITHER    => [ 7ff32b0025a0 7ff32b0026a0 ] (array memory at 1015dcce0)
  7ff32b0026e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 080d55d 1 1 0 0 0    EITHER    => [ 7ff32b0026c0 ] (array memory at 1015dd580)
  7ff32b002700 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 75647 1 1 0 0 0   LITERAL   'in' (string memory at 101475607)
  7ff32b002720 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 c5647 1 1 0 0 0   LITERAL   '(' (string memory at 10147560c)
  7ff32b002740 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0 f5647 1 1 0 0 0      TREF   'assertArguments' at 7ff32a02a200 (string memory at 10147560f)
  7ff32b002760 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0205647 1 1 0 0 0   LITERAL   ')' (string memory at 101475620)
  7ff32b002780 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 040ae5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b002700 7ff32b002720 7ff32b002740 7ff32b002760 ] (array memory at 1015cae40)
  7ff32b0027a0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a0d55d 1 1 0 0 0    EITHER    => [ 7ff32b002780 ] (array memory at 1015dd5a0)
  7ff32b0027c0 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 03e5647 1 1 0 0 0      TREF   'shiftExpression' at 7ff32a800e40 (string memory at 10147563e)
  7ff32b0027e0 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0505647 1 1 0 0 0   LITERAL   'in' (string memory at 101475650)
  7ff32b002800 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0585647 1 1 0 0 0   LITERAL   '!' (string memory at 101475658)
  7ff32b002820 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 05c5647 1 1 0 0 0   LITERAL   'in' (string memory at 10147565c)
  7ff32b002840 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060cd5d 1 1 0 0 0  SEQUENCE    => [ 7ff32b002800 7ff32b002820 ] (array memory at 1015dcd60)
  7ff32b002860 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080cd5d 1 1 0 0 0    EITHER    => [ 7ff32b0027e0 7ff32b002840 ] (array memory at 1015dcd80)
  7ff32b002880 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0625647 1 1 0 0 0      TREF   'shiftExpression' at 7ff32a800e40 (string memory at 101475662)
  7ff32b0028a0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0a0cd5d 1 1 0 0 0  SEQUENCE    => [ 7ff32b0027c0 7ff32b002860 7ff32b002880 ] (array memory at 1015dcda0)
  7ff32b0028c0 |  2 0 0 0 0 0 0 014 0 0 0 0 0 0 09a5647 1 1 0 0 0      TREF   'inContractExpression' at 7ff32b0027a0 (string memory at 10147569a)
  7ff32b0028e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 030dd5d 1 1 0 0 0    EITHER    => [ 7ff32b8003c0 ] (array memory at 1015ddd30)
  7ff32b002900 |  2 0 0 0 0 0 0 015 0 0 0 0 0 0 0b65647 1 1 0 0 0      TREF   'outContractExpression' at 7ff32b0028e0 (string memory at 1014756b6)
  7ff32b002920 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0cd5d 1 1 0 0 0    EITHER    => [ 7ff32b0028c0 7ff32b002900 ] (array memory at 1015dcde0)
  7ff32b002940 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 070d65d 1 1 0 0 0    EITHER    => [ 7ff32b002a20 ] (array memory at 1015dd670)
  7ff32b002960 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0eb5647 1 1 0 0 0      TREF   'inStatement' at 7ff32b002940 (string memory at 1014756eb)
  7ff32b002980 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 060dd5d 1 1 0 0 0    EITHER    => [ 7ff32b8004a0 ] (array memory at 1015ddd60)
  7ff32b0029a0 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0fe5647 1 1 0 0 0      TREF   'outStatement' at 7ff32b002980 (string memory at 1014756fe)
  7ff32b0029c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040ce5d 1 1 0 0 0    EITHER    => [ 7ff32b002960 7ff32b0029a0 ] (array memory at 1015dce40)
  7ff32b0029e0 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0265747 1 1 0 0 0   LITERAL   'in' (string memory at 101475726)
  7ff32b002a00 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 02a5747 1 1 0 0 0      TREF   'blockStatement' at 7ff32a02b520 (string memory at 10147572a)
  7ff32b002a20 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060ce5d 1 1 0 0 0  SEQUENCE    => [ 7ff32b0029e0 7ff32b002a00 ] (array memory at 1015dce60)
  7ff32b002a40 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0565747 1 1 0 0 0   LITERAL   'void' (string memory at 101475756)
  7ff32b002a60 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 0635747 1 1 0 0 0      TREF   'nonVoidInitializer' at 7ff32a028440 (string memory at 101475763)
  7ff32b002a80 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080ce5d 1 1 0 0 0    EITHER    => [ 7ff32b002a40 7ff32b002a60 ] (array memory at 1015dce80)
  7ff32b002aa0 |  1 0 0 0 0 0 0 0 9 0 0 0 0 0 0 09c5747 1 1 0 0 0   LITERAL   'interface' (string memory at 10147579c)
  7ff32b002ac0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0a75747 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 1014757a7)
  7ff32b002ae0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b35747 1 1 0 0 0   LITERAL   ';' (string memory at 1014757b3)
  7ff32b002b00 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0a0ce5d 1 1 0 0 0  SEQUENCE    => [ 7ff32b002aa0 7ff32b002ac0 7ff32b002ae0 ] (array memory at 1015dcea0)
  7ff32b002b20 |  1 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0be5747 1 1 0 0 0   LITERAL   'interface' (string memory at 1014757be)
  7ff32b002b40 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0c95747 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 1014757c9)
  7ff32b002b60 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d65747 1 1 0 0 0   LITERAL   ':' (string memory at 1014757d6)
  7ff32b002b80 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0d95747 1 1 0 0 0      TREF   'baseClassList' at 7ff32a02b6e0 (string memory at 1014757d9)
  7ff32b002ba0 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0ce5d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b002b60 7ff32b002b80 ] (array memory at 1015dcee0)
  7ff32b002bc0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0e95747 1 1 0 0 0      TREF   'structBody' at 7ff32a8009e0 (string memory at 1014757e9)
  7ff32b002be0 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 070ae5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b002b20 7ff32b002b40 7ff32b002ba0 7ff32b002bc0 ] (array memory at 1015cae70)
  7ff32b002c00 |  1 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0fc5747 1 1 0 0 0   LITERAL   'interface' (string memory at 1014757fc)
  7ff32b002c20 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0 75847 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101475807)
  7ff32b002c40 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 0125847 1 1 0 0 0      TREF   'templateParameters' at 7ff32a0279a0 (string memory at 101475812)
  7ff32b002c60 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0255847 1 1 0 0 0      TREF ? 'constraint' at 7ff32a800aa0 (string memory at 101475825)
  7ff32b002c80 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0335847 1 1 0 0 0   LITERAL   ':' (string memory at 101475833)
  7ff32b002ca0 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0365847 1 1 0 0 0      TREF   'baseClassList' at 7ff32a02b6e0 (string memory at 101475836)
  7ff32b002cc0 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020cf5d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b002c80 7ff32b002ca0 ] (array memory at 1015dcf20)
  7ff32b002ce0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0465847 1 1 0 0 0      TREF   'structBody' at 7ff32a8009e0 (string memory at 101475846)
  7ff32b002d00 |  4 0 0 0 0 0 0 0 6 0 0 0 0 0 0 040c75c 1 1 0 0 0  SEQUENCE    => [ 7ff32b002c00 7ff32b002c20 7ff32b002c40 7ff32b002c60 7ff32b002cc0 7ff32b002ce0 ] (array memory at 1015cc740)
  7ff32b002d20 |  1 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0595847 1 1 0 0 0   LITERAL   'interface' (string memory at 101475859)
  7ff32b002d40 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0645847 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101475864)
  7ff32b002d60 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 06f5847 1 1 0 0 0      TREF   'templateParameters' at 7ff32a0279a0 (string memory at 10147586f)
  7ff32b002d80 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0845847 1 1 0 0 0   LITERAL   ':' (string memory at 101475884)
  7ff32b002da0 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0875847 1 1 0 0 0      TREF   'baseClassList' at 7ff32a02b6e0 (string memory at 101475887)
  7ff32b002dc0 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060cf5d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b002d80 7ff32b002da0 ] (array memory at 1015dcf60)
  7ff32b002de0 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0975847 1 1 0 0 0      TREF ? 'constraint' at 7ff32a800aa0 (string memory at 101475897)
  7ff32b002e00 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0a35847 1 1 0 0 0      TREF   'structBody' at 7ff32a8009e0 (string memory at 1014758a3)
  7ff32b002e20 |  4 0 0 0 0 0 0 0 6 0 0 0 0 0 0 080c75c 1 1 0 0 0  SEQUENCE    => [ 7ff32b002d20 7ff32b002d40 7ff32b002d60 7ff32b002dc0 7ff32b002de0 7ff32b002e00 ] (array memory at 1015cc780)
  7ff32b002e40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080cf5d 1 1 0 0 0    EITHER    => [ 7ff32b002d00 7ff32b002e20 ] (array memory at 1015dcf80)
  7ff32b002e60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0cf5d 1 1 0 0 0    EITHER    => [ 7ff32b002be0 7ff32b002e40 ] (array memory at 1015dcfa0)
  7ff32b002e80 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0cf5d 1 1 0 0 0    EITHER    => [ 7ff32b002b00 7ff32b002e60 ] (array memory at 1015dcfc0)
  7ff32b002ea0 |  1 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0c95847 1 1 0 0 0   LITERAL   'invariant' (string memory at 1014758c9)
  7ff32b002ec0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d65847 1 1 0 0 0   LITERAL   '(' (string memory at 1014758d6)
  7ff32b002ee0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0da5847 1 1 0 0 0   LITERAL   '(' (string memory at 1014758da)
  7ff32b002f00 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0cf5d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b002ec0 7ff32b002ee0 ] (array memory at 1015dcfe0)
  7ff32b002f20 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0df5847 1 1 0 0 0      TREF   'blockStatement' at 7ff32a02b520 (string memory at 1014758df)
  7ff32b002f40 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0e05d 1 1 0 0 0  SEQUENCE    => [ 7ff32b002ea0 7ff32b002f00 7ff32b002f20 ] (array memory at 1015de000)
  7ff32b002f60 |  1 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0f65847 1 1 0 0 0   LITERAL   'invariant' (string memory at 1014758f6)
  7ff32b002f80 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 25947 1 1 0 0 0   LITERAL   '(' (string memory at 101475902)
  7ff32b002fa0 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0 55947 1 1 0 0 0      TREF   'assertArguments' at 7ff32a02a200 (string memory at 101475905)
  7ff32b002fc0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0165947 1 1 0 0 0   LITERAL   ')' (string memory at 101475916)
  7ff32b002fe0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 01a5947 1 1 0 0 0   LITERAL   ';' (string memory at 10147591a)
  7ff32b003000 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0af5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b002f60 7ff32b002f80 7ff32b002fa0 7ff32b002fc0 7ff32b002fe0 ] (array memory at 1015caf00)
  7ff32b003020 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040e05d 1 1 0 0 0    EITHER    => [ 7ff32b002f40 7ff32b003000 ] (array memory at 1015de040)
  7ff32b003040 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 03b5947 1 1 0 0 0   LITERAL   'is' (string memory at 10147593b)
  7ff32b003060 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0405947 1 1 0 0 0   LITERAL   '(' (string memory at 101475940)
  7ff32b003080 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0435947 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 101475943)
  7ff32b0030a0 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0485947 1 1 0 0 0      TREF ? 'identifier' at 7ff32a027800 (string memory at 101475948)
  7ff32b0030c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0555947 1 1 0 0 0   LITERAL   ')' (string memory at 101475955)
  7ff32b0030e0 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 030af5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b003040 7ff32b003060 7ff32b003080 7ff32b0030a0 7ff32b0030c0 ] (array memory at 1015caf30)
  7ff32b003100 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0605947 1 1 0 0 0   LITERAL   'is' (string memory at 101475960)
  7ff32b003120 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0655947 1 1 0 0 0   LITERAL   '(' (string memory at 101475965)
  7ff32b003140 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0685947 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 101475968)
  7ff32b003160 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 06d5947 1 1 0 0 0      TREF ? 'identifier' at 7ff32a027800 (string memory at 10147596d)
  7ff32b003180 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 07a5947 1 1 0 0 0   LITERAL   ':' (string memory at 10147597a)
  7ff32b0031a0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 080345e 1 1 0 0 0    EITHER    => [ 7ff32b806380 ] (array memory at 1015e3480)
  7ff32b0031c0 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 07d5947 1 1 0 0 0      TREF   'typeSpecialization' at 7ff32b0031a0 (string memory at 10147597d)
  7ff32b0031e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0915947 1 1 0 0 0   LITERAL   ')' (string memory at 101475991)
  7ff32b003200 |  4 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0c0c75c 1 1 0 0 0  SEQUENCE    => [ 7ff32b003100 7ff32b003120 7ff32b003140 7ff32b003160 7ff32b003180 7ff32b0031c0 7ff32b0031e0 ] (array memory at 1015cc7c0)
  7ff32b003220 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 09c5947 1 1 0 0 0   LITERAL   'is' (string memory at 10147599c)
  7ff32b003240 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a15947 1 1 0 0 0   LITERAL   '(' (string memory at 1014759a1)
  7ff32b003260 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0a45947 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 1014759a4)
  7ff32b003280 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0a95947 1 1 0 0 0      TREF ? 'identifier' at 7ff32a027800 (string memory at 1014759a9)
  7ff32b0032a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b65947 1 1 0 0 0   LITERAL   '=' (string memory at 1014759b6)
  7ff32b0032c0 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 0b95947 1 1 0 0 0      TREF   'typeSpecialization' at 7ff32b0031a0 (string memory at 1014759b9)
  7ff32b0032e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0cd5947 1 1 0 0 0   LITERAL   ')' (string memory at 1014759cd)
  7ff32b003300 |  4 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0 0c85c 1 1 0 0 0  SEQUENCE    => [ 7ff32b003220 7ff32b003240 7ff32b003260 7ff32b003280 7ff32b0032a0 7ff32b0032c0 7ff32b0032e0 ] (array memory at 1015cc800)
  7ff32b003320 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0d85947 1 1 0 0 0   LITERAL   'is' (string memory at 1014759d8)
  7ff32b003340 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0dd5947 1 1 0 0 0   LITERAL   '(' (string memory at 1014759dd)
  7ff32b003360 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0e05947 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 1014759e0)
  7ff32b003380 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0e55947 1 1 0 0 0      TREF ? 'identifier' at 7ff32a027800 (string memory at 1014759e5)
  7ff32b0033a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f25947 1 1 0 0 0   LITERAL   ':' (string memory at 1014759f2)
  7ff32b0033c0 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 0f55947 1 1 0 0 0      TREF   'typeSpecialization' at 7ff32b0031a0 (string memory at 1014759f5)
  7ff32b0033e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 95a47 1 1 0 0 0   LITERAL   ',' (string memory at 101475a09)
  7ff32b003400 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 050 d5e 1 1 0 0 0    EITHER    => [ 7ff32b8047e0 ] (array memory at 1015e0d50)
  7ff32b003420 |  2 0 0 0 0 0 0 015 0 0 0 0 0 0 0 c5a47 1 1 0 0 0      TREF   'templateParameterList' at 7ff32b003400 (string memory at 101475a0c)
  7ff32b003440 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0235a47 1 1 0 0 0   LITERAL   ')' (string memory at 101475a23)
  7ff32b003460 |  4 0 0 0 0 0 0 0 9 0 0 0 0 0 0 060 35d 1 1 0 0 0  SEQUENCE    => [ 7ff32b003320 7ff32b003340 7ff32b003360 7ff32b003380 7ff32b0033a0 7ff32b0033c0 7ff32b0033e0 7ff32b003420 7ff32b003440 ] (array memory at 1015d0360)
  7ff32b003480 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 02e5a47 1 1 0 0 0   LITERAL   'is' (string memory at 101475a2e)
  7ff32b0034a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0335a47 1 1 0 0 0   LITERAL   '(' (string memory at 101475a33)
  7ff32b0034c0 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0365a47 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 101475a36)
  7ff32b0034e0 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 03b5a47 1 1 0 0 0      TREF ? 'identifier' at 7ff32a027800 (string memory at 101475a3b)
  7ff32b003500 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0485a47 1 1 0 0 0   LITERAL   '=' (string memory at 101475a48)
  7ff32b003520 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 04b5a47 1 1 0 0 0      TREF   'typeSpecialization' at 7ff32b0031a0 (string memory at 101475a4b)
  7ff32b003540 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 05f5a47 1 1 0 0 0   LITERAL   ',' (string memory at 101475a5f)
  7ff32b003560 |  2 0 0 0 0 0 0 015 0 0 0 0 0 0 0625a47 1 1 0 0 0      TREF   'templateParameterList' at 7ff32b003400 (string memory at 101475a62)
  7ff32b003580 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0795a47 1 1 0 0 0   LITERAL   ')' (string memory at 101475a79)
  7ff32b0035a0 |  4 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0c0 35d 1 1 0 0 0  SEQUENCE    => [ 7ff32b003480 7ff32b0034a0 7ff32b0034c0 7ff32b0034e0 7ff32b003500 7ff32b003520 7ff32b003540 7ff32b003560 7ff32b003580 ] (array memory at 1015d03c0)
  7ff32b0035c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040e15d 1 1 0 0 0    EITHER    => [ 7ff32b003460 7ff32b0035a0 ] (array memory at 1015de140)
  7ff32b0035e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060e15d 1 1 0 0 0    EITHER    => [ 7ff32b003300 7ff32b0035c0 ] (array memory at 1015de160)
  7ff32b003600 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080e15d 1 1 0 0 0    EITHER    => [ 7ff32b003200 7ff32b0035e0 ] (array memory at 1015de180)
  7ff32b003620 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0e15d 1 1 0 0 0    EITHER    => [ 7ff32b0030e0 7ff32b003600 ] (array memory at 1015de1a0)
  7ff32b003640 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 040d85d 1 1 0 0 0    EITHER    => [ 7ff32b003620 ] (array memory at 1015dd840)
  7ff32b003660 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0975a47 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 101475a97)
  7ff32b003680 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a95a47 1 1 0 0 0   LITERAL   ':' (string memory at 101475aa9)
  7ff32b0036a0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0ac5a47 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 101475aac)
  7ff32b0036c0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0e0e15d 1 1 0 0 0  SEQUENCE    => [ 7ff32b003660 7ff32b003680 7ff32b0036a0 ] (array memory at 1015de1e0)
  7ff32b0036e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 060d85d 1 1 0 0 0    EITHER    => [ 7ff32b0036c0 ] (array memory at 1015dd860)
  7ff32b003700 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0d95a47 1 1 0 0 0      TREF   'keyValuePair' at 7ff32b0036e0 (string memory at 101475ad9)
  7ff32b003720 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e85a47 1 1 0 0 0   LITERAL   ',' (string memory at 101475ae8)
  7ff32b003740 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0eb5a47 1 1 0 0 0      TREF   'keyValuePair' at 7ff32b0036e0 (string memory at 101475aeb)
  7ff32b003760 | 34 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020e25d 1 1 0 0 0  SEQUENCE *  => [ 7ff32b003720 7ff32b003740 ] (array memory at 1015de220)
  7ff32b003780 | 11 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0fb5a47 1 1 0 0 0   LITERAL ? ',' (string memory at 101475afb)
  7ff32b0037a0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 040e25d 1 1 0 0 0  SEQUENCE    => [ 7ff32b003700 7ff32b003760 7ff32b003780 ] (array memory at 1015de240)
  7ff32b0037c0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 01e5b47 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101475b1e)
  7ff32b0037e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 02a5b47 1 1 0 0 0   LITERAL   ':' (string memory at 101475b2a)
  7ff32b003800 | 12 0 0 0 0 0 0 016 0 0 0 0 0 0 02d5b47 1 1 0 0 0      TREF ? 'declarationOrStatement' at 7ff32a800760 (string memory at 101475b2d)
  7ff32b003820 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 060e25d 1 1 0 0 0  SEQUENCE    => [ 7ff32b0037c0 7ff32b0037e0 7ff32b003800 ] (array memory at 1015de260)
  7ff32b003840 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b0d85d 1 1 0 0 0    EITHER    => [ 7ff32b003820 ] (array memory at 1015dd8b0)
  7ff32b003860 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 05e5b47 1 1 0 0 0   LITERAL   'catch' (string memory at 101475b5e)
  7ff32b003880 |  2 0 0 0 0 0 0 018 0 0 0 0 0 0 0655b47 1 1 0 0 0      TREF   'statementNoCaseNoDefault' at 7ff32a8032e0 (string memory at 101475b65)
  7ff32b0038a0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0e25d 1 1 0 0 0  SEQUENCE    => [ 7ff32b003860 7ff32b003880 ] (array memory at 1015de2a0)
  7ff32b0038c0 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0a05b47 1 1 0 0 0   LITERAL   'extern' (string memory at 101475ba0)
  7ff32b0038e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a95b47 1 1 0 0 0   LITERAL   '(' (string memory at 101475ba9)
  7ff32b003900 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0ac5b47 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101475bac)
  7ff32b003920 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b85b47 1 1 0 0 0   LITERAL   ')' (string memory at 101475bb8)
  7ff32b003940 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 030f05d 1 1 0 0 0  SEQUENCE    => [ 7ff32b0038c0 7ff32b0038e0 7ff32b003900 7ff32b003920 ] (array memory at 1015df030)
  7ff32b003960 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0c35b47 1 1 0 0 0   LITERAL   'extern' (string memory at 101475bc3)
  7ff32b003980 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0cc5b47 1 1 0 0 0   LITERAL   '(' (string memory at 101475bcc)
  7ff32b0039a0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0cf5b47 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101475bcf)
  7ff32b0039c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0db5b47 1 1 0 0 0   LITERAL   '-' (string memory at 101475bdb)
  7ff32b0039e0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0de5b47 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101475bde)
  7ff32b003a00 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0ea5b47 1 1 0 0 0   LITERAL   ')' (string memory at 101475bea)
  7ff32b003a20 |  4 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0c0c85c 1 1 0 0 0  SEQUENCE    => [ 7ff32b003960 7ff32b003980 7ff32b0039a0 7ff32b0039c0 7ff32b0039e0 7ff32b003a00 ] (array memory at 1015cc8c0)
  7ff32b003a40 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0f55b47 1 1 0 0 0   LITERAL   'extern' (string memory at 101475bf5)
  7ff32b003a60 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0fe5b47 1 1 0 0 0   LITERAL   '(' (string memory at 101475bfe)
  7ff32b003a80 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0 15c47 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101475c01)
  7ff32b003aa0 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 d5c47 1 1 0 0 0   LITERAL   '++' (string memory at 101475c0d)
  7ff32b003ac0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0135c47 1 1 0 0 0   LITERAL   ',' (string memory at 101475c13)
  7ff32b003ae0 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 0165c47 1 1 0 0 0      TREF   'typeIdentifierPart' at 7ff32b0017a0 (string memory at 101475c16)
  7ff32b003b00 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020e35d 1 1 0 0 0  SEQUENCE    => [ 7ff32b003ac0 7ff32b003ae0 ] (array memory at 1015de320)
  7ff32b003b20 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b0db5d 1 1 0 0 0    EITHER    => [ 7ff32b004520 ] (array memory at 1015ddbb0)
  7ff32b003b40 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 02b5c47 1 1 0 0 0      TREF   'namespaceList' at 7ff32b003b20 (string memory at 101475c2b)
  7ff32b003b60 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 03c5c47 1 1 0 0 0   LITERAL   'struct' (string memory at 101475c3c)
  7ff32b003b80 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0475c47 1 1 0 0 0   LITERAL   'class' (string memory at 101475c47)
  7ff32b003ba0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060e35d 1 1 0 0 0    EITHER    => [ 7ff32b003b60 7ff32b003b80 ] (array memory at 1015de360)
  7ff32b003bc0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080e35d 1 1 0 0 0    EITHER    => [ 7ff32b003b40 7ff32b003ba0 ] (array memory at 1015de380)
  7ff32b003be0 | 18 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0e35d 1 1 0 0 0    EITHER ?  => [ 7ff32b003b00 7ff32b003bc0 ] (array memory at 1015de3a0)
  7ff32b003c00 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0515c47 1 1 0 0 0   LITERAL   ')' (string memory at 101475c51)
  7ff32b003c20 |  4 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0c95c 1 1 0 0 0  SEQUENCE    => [ 7ff32b003a40 7ff32b003a60 7ff32b003a80 7ff32b003aa0 7ff32b003be0 7ff32b003c00 ] (array memory at 1015cc900)
  7ff32b003c40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0e35d 1 1 0 0 0    EITHER    => [ 7ff32b003a20 7ff32b003c20 ] (array memory at 1015de3c0)
  7ff32b003c60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0e35d 1 1 0 0 0    EITHER    => [ 7ff32b003940 7ff32b003c40 ] (array memory at 1015de3e0)
  7ff32b003c80 |  2 0 0 0 0 0 0 011 0 0 0 0 0 0 07c5c47 1 1 0 0 0      TREF   'functionAttribute' at 7ff32b000320 (string memory at 101475c7c)
  7ff32b003ca0 |  1 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0965c47 1 1 0 0 0   LITERAL   'immutable' (string memory at 101475c96)
  7ff32b003cc0 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0a95c47 1 1 0 0 0   LITERAL   'inout' (string memory at 101475ca9)
  7ff32b003ce0 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0b85c47 1 1 0 0 0   LITERAL   'shared' (string memory at 101475cb8)
  7ff32b003d00 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0c85c47 1 1 0 0 0   LITERAL   'const' (string memory at 101475cc8)
  7ff32b003d20 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0d75c47 1 1 0 0 0   LITERAL   'return' (string memory at 101475cd7)
  7ff32b003d40 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0e75c47 1 1 0 0 0   LITERAL   'scope' (string memory at 101475ce7)
  7ff32b003d60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0e45d 1 1 0 0 0    EITHER    => [ 7ff32b003d20 7ff32b003d40 ] (array memory at 1015de400)
  7ff32b003d80 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020e45d 1 1 0 0 0    EITHER    => [ 7ff32b003d00 7ff32b003d60 ] (array memory at 1015de420)
  7ff32b003da0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040e45d 1 1 0 0 0    EITHER    => [ 7ff32b003ce0 7ff32b003d80 ] (array memory at 1015de440)
  7ff32b003dc0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060e45d 1 1 0 0 0    EITHER    => [ 7ff32b003cc0 7ff32b003da0 ] (array memory at 1015de460)
  7ff32b003de0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080e45d 1 1 0 0 0    EITHER    => [ 7ff32b003ca0 7ff32b003dc0 ] (array memory at 1015de480)
  7ff32b003e00 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0e45d 1 1 0 0 0    EITHER    => [ 7ff32b003c80 7ff32b003de0 ] (array memory at 1015de4a0)
  7ff32b003e20 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0135d47 1 1 0 0 0   LITERAL   ';' (string memory at 101475d13)
  7ff32b003e40 | 32 0 0 0 0 0 0 010 0 0 0 0 0 0 01d5d47 1 1 0 0 0      TREF * 'functionContract' at 7ff32b000620 (string memory at 101475d1d)
  7ff32b003e60 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0305d47 1 1 0 0 0   LITERAL   ';' (string memory at 101475d30)
  7ff32b003e80 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0e45d 1 1 0 0 0  SEQUENCE    => [ 7ff32b003e40 7ff32b003e60 ] (array memory at 1015de4c0)
  7ff32b003ea0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0e45d 1 1 0 0 0    EITHER    => [ 7ff32b003e20 7ff32b003e80 ] (array memory at 1015de4e0)
  7ff32b003ec0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 090da5d 1 1 0 0 0    EITHER    => [ 7ff32b004060 ] (array memory at 1015dda90)
  7ff32b003ee0 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0545d47 1 1 0 0 0      TREF   'mixinExpression' at 7ff32b003ec0 (string memory at 101475d54)
  7ff32b003f00 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0655d47 1 1 0 0 0   LITERAL   ';' (string memory at 101475d65)
  7ff32b003f20 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020e55d 1 1 0 0 0  SEQUENCE    => [ 7ff32b003ee0 7ff32b003f00 ] (array memory at 1015de520)
  7ff32b003f40 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0c0 c5e 1 1 0 0 0    EITHER    => [ 7ff32b804560 ] (array memory at 1015e0cc0)
  7ff32b003f60 |  2 0 0 0 0 0 0 017 0 0 0 0 0 0 06f5d47 1 1 0 0 0      TREF   'templateMixinExpression' at 7ff32b003f40 (string memory at 101475d6f)
  7ff32b003f80 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0885d47 1 1 0 0 0   LITERAL   ';' (string memory at 101475d88)
  7ff32b003fa0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060e55d 1 1 0 0 0  SEQUENCE    => [ 7ff32b003f60 7ff32b003f80 ] (array memory at 1015de560)
  7ff32b003fc0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080e55d 1 1 0 0 0    EITHER    => [ 7ff32b003f20 7ff32b003fa0 ] (array memory at 1015de580)
  7ff32b003fe0 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0aa5d47 1 1 0 0 0   LITERAL   'mixin' (string memory at 101475daa)
  7ff32b004000 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b25d47 1 1 0 0 0   LITERAL   '(' (string memory at 101475db2)
  7ff32b004020 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0b55d47 1 1 0 0 0      TREF   'argumentList' at 7ff32a0280e0 (string memory at 101475db5)
  7ff32b004040 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0c35d47 1 1 0 0 0   LITERAL   ')' (string memory at 101475dc3)
  7ff32b004060 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0c0f05d 1 1 0 0 0  SEQUENCE    => [ 7ff32b003fe0 7ff32b004000 7ff32b004020 7ff32b004040 ] (array memory at 1015df0c0)
  7ff32b004080 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0ee5d47 1 1 0 0 0   LITERAL   'mixin' (string memory at 101475dee)
  7ff32b0040a0 |  2 0 0 0 0 0 0 013 0 0 0 0 0 0 0f55d47 1 1 0 0 0      TREF   'templateDeclaration' at 7ff32a802820 (string memory at 101475df5)
  7ff32b0040c0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0e55d 1 1 0 0 0  SEQUENCE    => [ 7ff32b004080 7ff32b0040a0 ] (array memory at 1015de5c0)
  7ff32b0040e0 |  2 0 0 0 0 0 0 0 6 0 0 0 0 0 0 02b5e47 1 1 0 0 0      TREF   'symbol' at 7ff32b0003e0 (string memory at 101475e2b)
  7ff32b004100 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b0355e 1 1 0 0 0    EITHER    => [ 7ff32b806860 ] (array memory at 1015e35b0)
  7ff32b004120 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0395e47 1 1 0 0 0      TREF   'typeofExpression' at 7ff32b004100 (string memory at 101475e39)
  7ff32b004140 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 04b5e47 1 1 0 0 0   LITERAL   '.' (string memory at 101475e4b)
  7ff32b004160 |  2 0 0 0 0 0 0 019 0 0 0 0 0 0 04e5e47 1 1 0 0 0      TREF   'identifierOrTemplateChain' at 7ff32b001a80 (string memory at 101475e4e)
  7ff32b004180 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0e65d 1 1 0 0 0  SEQUENCE    => [ 7ff32b004120 7ff32b004140 7ff32b004160 ] (array memory at 1015de600)
  7ff32b0041a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020e65d 1 1 0 0 0    EITHER    => [ 7ff32b0040e0 7ff32b004180 ] (array memory at 1015de620)
  7ff32b0041c0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e0da5d 1 1 0 0 0    EITHER    => [ 7ff32b0041a0 ] (array memory at 1015ddae0)
  7ff32b0041e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 020db5d 1 1 0 0 0    EITHER    => [ 7ff32b004300 ] (array memory at 1015ddb20)
  7ff32b004200 | 12 0 0 0 0 0 0 011 0 0 0 0 0 0 07d5e47 1 1 0 0 0      TREF ? 'moduleDeclaration' at 7ff32b0041e0 (string memory at 101475e7d)
  7ff32b004220 | 32 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0905e47 1 1 0 0 0      TREF * 'declaration' at 7ff32a801140 (string memory at 101475e90)
  7ff32b004240 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080e65d 1 1 0 0 0  SEQUENCE    => [ 7ff32b004200 7ff32b004220 ] (array memory at 1015de680)
  7ff32b004260 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0db5d 1 1 0 0 0    EITHER    => [ 7ff32b004240 ] (array memory at 1015ddb00)
  7ff32b004280 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0bd5e47 1 1 0 0 0      TREF ? 'deprecated' at 7ff32a02ab00 (string memory at 101475ebd)
  7ff32b0042a0 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0ca5e47 1 1 0 0 0   LITERAL   'module' (string memory at 101475eca)
  7ff32b0042c0 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0d25e47 1 1 0 0 0      TREF   'identifierChain' at 7ff32a0293e0 (string memory at 101475ed2)
  7ff32b0042e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e35e47 1 1 0 0 0   LITERAL   ';' (string memory at 101475ee3)
  7ff32b004300 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0f0f05d 1 1 0 0 0  SEQUENCE    => [ 7ff32b004280 7ff32b0042a0 7ff32b0042c0 7ff32b0042e0 ] (array memory at 1015df0f0)
  7ff32b004320 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 070df5d 1 1 0 0 0    EITHER    => [ 7ff32b800dc0 ] (array memory at 1015ddf70)
  7ff32b004340 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0 45f47 1 1 0 0 0      TREF   'powExpression' at 7ff32b004320 (string memory at 101475f04)
  7ff32b004360 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0195f47 1 1 0 0 0      TREF   'mulExpression' at 7ff32a027400 (string memory at 101475f19)
  7ff32b004380 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0295f47 1 1 0 0 0   LITERAL   '*' (string memory at 101475f29)
  7ff32b0043a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 02f5f47 1 1 0 0 0   LITERAL   '/' (string memory at 101475f2f)
  7ff32b0043c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0355f47 1 1 0 0 0   LITERAL   '%' (string memory at 101475f35)
  7ff32b0043e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0e75d 1 1 0 0 0    EITHER    => [ 7ff32b0043a0 7ff32b0043c0 ] (array memory at 1015de700)
  7ff32b004400 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020e75d 1 1 0 0 0    EITHER    => [ 7ff32b004380 7ff32b0043e0 ] (array memory at 1015de720)
  7ff32b004420 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0395f47 1 1 0 0 0      TREF   'powExpression' at 7ff32b004320 (string memory at 101475f39)
  7ff32b004440 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 040e75d 1 1 0 0 0  SEQUENCE    => [ 7ff32b004360 7ff32b004400 7ff32b004420 ] (array memory at 1015de740)
  7ff32b004460 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060e75d 1 1 0 0 0    EITHER    => [ 7ff32b004340 7ff32b004440 ] (array memory at 1015de760)
  7ff32b004480 |  2 0 0 0 0 0 0 011 0 0 0 0 0 0 0635f47 1 1 0 0 0      TREF   'ternaryExpression' at 7ff32a02a2e0 (string memory at 101475f63)
  7ff32b0044a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0775f47 1 1 0 0 0   LITERAL   ',' (string memory at 101475f77)
  7ff32b0044c0 | 12 0 0 0 0 0 0 011 0 0 0 0 0 0 07a5f47 1 1 0 0 0      TREF ? 'ternaryExpression' at 7ff32a02a2e0 (string memory at 101475f7a)
  7ff32b0044e0 | 34 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080e75d 1 1 0 0 0  SEQUENCE *  => [ 7ff32b0044a0 7ff32b0044c0 ] (array memory at 1015de780)
  7ff32b004500 | 11 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0905f47 1 1 0 0 0   LITERAL ? ',' (string memory at 101475f90)
  7ff32b004520 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0a0e75d 1 1 0 0 0  SEQUENCE    => [ 7ff32b004480 7ff32b0044e0 7ff32b004500 ] (array memory at 1015de7a0)
  7ff32b004540 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0ba5f47 1 1 0 0 0   LITERAL   'new' (string memory at 101475fba)
  7ff32b004560 | 12 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0bf5f47 1 1 0 0 0      TREF ? 'arguments' at 7ff32a028180 (string memory at 101475fbf)
  7ff32b004580 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0cb5f47 1 1 0 0 0   LITERAL   'class' (string memory at 101475fcb)
  7ff32b0045a0 | 12 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0d25f47 1 1 0 0 0      TREF ? 'arguments' at 7ff32a028180 (string memory at 101475fd2)
  7ff32b0045c0 | 12 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0dd5f47 1 1 0 0 0      TREF ? 'baseClassList' at 7ff32a02b6e0 (string memory at 101475fdd)
  7ff32b0045e0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0ec5f47 1 1 0 0 0      TREF   'structBody' at 7ff32a8009e0 (string memory at 101475fec)
  7ff32b004600 |  4 0 0 0 0 0 0 0 6 0 0 0 0 0 0 040c95c 1 1 0 0 0  SEQUENCE    => [ 7ff32b004540 7ff32b004560 7ff32b004580 7ff32b0045a0 7ff32b0045c0 7ff32b0045e0 ] (array memory at 1015cc940)
  7ff32b004620 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d0db5d 1 1 0 0 0    EITHER    => [ 7ff32b004600 ] (array memory at 1015ddbd0)
  7ff32b004640 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0166047 1 1 0 0 0   LITERAL   'new' (string memory at 101476016)
  7ff32b004660 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 01b6047 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 10147601b)
  7ff32b004680 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0236047 1 1 0 0 0   LITERAL   '[' (string memory at 101476023)
  7ff32b0046a0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0266047 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 101476026)
  7ff32b0046c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0386047 1 1 0 0 0   LITERAL   ']' (string memory at 101476038)
  7ff32b0046e0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 020e85d 1 1 0 0 0  SEQUENCE    => [ 7ff32b004680 7ff32b0046a0 7ff32b0046c0 ] (array memory at 1015de820)
  7ff32b004700 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 03e6047 1 1 0 0 0      TREF   'arguments' at 7ff32a028180 (string memory at 10147603e)
  7ff32b004720 | 18 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040e85d 1 1 0 0 0    EITHER ?  => [ 7ff32b0046e0 7ff32b004700 ] (array memory at 1015de840)
  7ff32b004740 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0e85d 1 1 0 0 0  SEQUENCE    => [ 7ff32b004640 7ff32b004660 7ff32b004720 ] (array memory at 1015de800)
  7ff32b004760 |  2 0 0 0 0 0 0 016 0 0 0 0 0 0 0516047 1 1 0 0 0      TREF   'newAnonClassExpression' at 7ff32b004620 (string memory at 101476051)
  7ff32b004780 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060e85d 1 1 0 0 0    EITHER    => [ 7ff32b004740 7ff32b004760 ] (array memory at 1015de860)
  7ff32b0047a0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 040dc5d 1 1 0 0 0    EITHER    => [ 7ff32b004780 ] (array memory at 1015ddc40)
  7ff32b0047c0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 08b6047 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 10147608b)
  7ff32b0047e0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0a36047 1 1 0 0 0      TREF   'arrayInitializer' at 7ff32a028320 (string memory at 1014760a3)
  7ff32b800000 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 060 a5e 1 1 0 0 0    EITHER    => [ 7ff32b803ba0 ] (array memory at 1015e0a60)
  7ff32b800020 |  2 0 0 0 0 0 0 011 0 0 0 0 0 0 0bb6047 1 1 0 0 0      TREF   'structInitializer' at 7ff32b800000 (string memory at 1014760bb)
  7ff32b800040 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0e85d 1 1 0 0 0    EITHER    => [ 7ff32b0047e0 7ff32b800020 ] (array memory at 1015de8c0)
  7ff32b800060 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0e85d 1 1 0 0 0    EITHER    => [ 7ff32b0047c0 7ff32b800040 ] (array memory at 1015de8e0)
  7ff32b800080 |  2 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0e66047 1 1 0 0 0      TREF   'asmExp' at 7ff32a028780 (string memory at 1014760e6)
  7ff32b8000a0 |  2 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0f46047 1 1 0 0 0      TREF   'asmExp' at 7ff32a028780 (string memory at 1014760f4)
  7ff32b8000c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0fc6047 1 1 0 0 0   LITERAL   ',' (string memory at 1014760fc)
  7ff32b8000e0 |  2 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0ff6047 1 1 0 0 0      TREF   'operands' at 7ff32a028c00 (string memory at 1014760ff)
  7ff32b800100 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0e95d 1 1 0 0 0  SEQUENCE    => [ 7ff32b8000a0 7ff32b8000c0 7ff32b8000e0 ] (array memory at 1015de900)
  7ff32b800120 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020e95d 1 1 0 0 0    EITHER    => [ 7ff32b800080 7ff32b800100 ] (array memory at 1015de920)
  7ff32b800140 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e0395e 1 1 0 0 0    EITHER    => [ 7ff32b8079a0 ] (array memory at 1015e39e0)
  7ff32b800160 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0256147 1 1 0 0 0      TREF   'xorExpression' at 7ff32b800140 (string memory at 101476125)
  7ff32b800180 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 03a6147 1 1 0 0 0      TREF   'orExpression' at 7ff32a027e40 (string memory at 10147613a)
  7ff32b8001a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0486147 1 1 0 0 0   LITERAL   '|' (string memory at 101476148)
  7ff32b8001c0 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 04b6147 1 1 0 0 0      TREF   'xorExpression' at 7ff32b800140 (string memory at 10147614b)
  7ff32b8001e0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 060e95d 1 1 0 0 0  SEQUENCE    => [ 7ff32b800180 7ff32b8001a0 7ff32b8001c0 ] (array memory at 1015de960)
  7ff32b800200 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080e95d 1 1 0 0 0    EITHER    => [ 7ff32b800160 7ff32b8001e0 ] (array memory at 1015de980)
  7ff32b800220 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0786147 1 1 0 0 0      TREF   'andAndExpression' at 7ff32a027e80 (string memory at 101476178)
  7ff32b800240 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 010dd5d 1 1 0 0 0    EITHER    => [ 7ff32b8002e0 ] (array memory at 1015ddd10)
  7ff32b800260 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0906147 1 1 0 0 0      TREF   'orOrExpression' at 7ff32b800240 (string memory at 101476190)
  7ff32b800280 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a06147 1 1 0 0 0   LITERAL   '||' (string memory at 1014761a0)
  7ff32b8002a0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0a46147 1 1 0 0 0      TREF   'andAndExpression' at 7ff32a027e80 (string memory at 1014761a4)
  7ff32b8002c0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0c0e95d 1 1 0 0 0  SEQUENCE    => [ 7ff32b800260 7ff32b800280 7ff32b8002a0 ] (array memory at 1015de9c0)
  7ff32b8002e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0e95d 1 1 0 0 0    EITHER    => [ 7ff32b800220 7ff32b8002c0 ] (array memory at 1015de9e0)
  7ff32b800300 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0da6147 1 1 0 0 0   LITERAL   'out' (string memory at 1014761da)
  7ff32b800320 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e06147 1 1 0 0 0   LITERAL   '(' (string memory at 1014761e0)
  7ff32b800340 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0e36147 1 1 0 0 0      TREF ? 'Identifier' at 7ff32a027960 (string memory at 1014761e3)
  7ff32b800360 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f06147 1 1 0 0 0   LITERAL   ';' (string memory at 1014761f0)
  7ff32b800380 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0f36147 1 1 0 0 0      TREF   'assertArguments' at 7ff32a02a200 (string memory at 1014761f3)
  7ff32b8003a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 46247 1 1 0 0 0   LITERAL   ')' (string memory at 101476204)
  7ff32b8003c0 |  4 0 0 0 0 0 0 0 6 0 0 0 0 0 0 080c95c 1 1 0 0 0  SEQUENCE    => [ 7ff32b800300 7ff32b800320 7ff32b800340 7ff32b800360 7ff32b800380 7ff32b8003a0 ] (array memory at 1015cc980)
  7ff32b8003e0 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0236247 1 1 0 0 0   LITERAL   'out' (string memory at 101476223)
  7ff32b800400 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 02a6247 1 1 0 0 0   LITERAL   '(' (string memory at 10147622a)
  7ff32b800420 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 02d6247 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 10147622d)
  7ff32b800440 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0396247 1 1 0 0 0   LITERAL   ')' (string memory at 101476239)
  7ff32b800460 | 14 0 0 0 0 0 0 0 3 0 0 0 0 0 0 020ea5d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b800400 7ff32b800420 7ff32b800440 ] (array memory at 1015dea20)
  7ff32b800480 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 03e6247 1 1 0 0 0      TREF   'blockStatement' at 7ff32a02b520 (string memory at 10147623e)
  7ff32b8004a0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 040ea5d 1 1 0 0 0  SEQUENCE    => [ 7ff32b8003e0 7ff32b800460 7ff32b800480 ] (array memory at 1015dea40)
  7ff32b8004c0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 080de5d 1 1 0 0 0    EITHER    => [ 7ff32b800960 ] (array memory at 1015dde80)
  7ff32b8004e0 | 32 0 0 0 0 0 0 012 0 0 0 0 0 0 0676247 1 1 0 0 0      TREF * 'parameterAttribute' at 7ff32b8004c0 (string memory at 101476267)
  7ff32b800500 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 07b6247 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 10147627b)
  7ff32b800520 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080ea5d 1 1 0 0 0  SEQUENCE    => [ 7ff32b8004e0 7ff32b800500 ] (array memory at 1015dea80)
  7ff32b800540 | 32 0 0 0 0 0 0 012 0 0 0 0 0 0 0876247 1 1 0 0 0      TREF * 'parameterAttribute' at 7ff32b8004c0 (string memory at 101476287)
  7ff32b800560 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 09b6247 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 10147629b)
  7ff32b800580 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0a06247 1 1 0 0 0      TREF ? 'Identifier' at 7ff32a027960 (string memory at 1014762a0)
  7ff32b8005a0 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0ad6247 1 1 0 0 0   LITERAL   '...' (string memory at 1014762ad)
  7ff32b8005c0 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 080f15d 1 1 0 0 0  SEQUENCE    => [ 7ff32b800540 7ff32b800560 7ff32b800580 7ff32b8005a0 ] (array memory at 1015df180)
  7ff32b8005e0 | 32 0 0 0 0 0 0 012 0 0 0 0 0 0 0b96247 1 1 0 0 0      TREF * 'parameterAttribute' at 7ff32b8004c0 (string memory at 1014762b9)
  7ff32b800600 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0cd6247 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 1014762cd)
  7ff32b800620 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0d26247 1 1 0 0 0      TREF ? 'Identifier' at 7ff32a027960 (string memory at 1014762d2)
  7ff32b800640 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e06247 1 1 0 0 0   LITERAL   '=' (string memory at 1014762e0)
  7ff32b800660 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0e36247 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 1014762e3)
  7ff32b800680 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0ea5d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b800640 7ff32b800660 ] (array memory at 1015deae0)
  7ff32b8006a0 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0b0f15d 1 1 0 0 0  SEQUENCE    => [ 7ff32b8005e0 7ff32b800600 7ff32b800620 7ff32b800680 ] (array memory at 1015df1b0)
  7ff32b8006c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0eb5d 1 1 0 0 0    EITHER    => [ 7ff32b8005c0 7ff32b8006a0 ] (array memory at 1015deb00)
  7ff32b8006e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020eb5d 1 1 0 0 0    EITHER    => [ 7ff32b800520 7ff32b8006c0 ] (array memory at 1015deb20)
  7ff32b800700 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d0dd5d 1 1 0 0 0    EITHER    => [ 7ff32b8006e0 ] (array memory at 1015dddd0)
  7ff32b800720 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0196347 1 1 0 0 0      TREF   'atAttribute' at 7ff32a02aa80 (string memory at 101476319)
  7ff32b800740 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 02c6347 1 1 0 0 0      TREF   'typeConstructor' at 7ff32b0000e0 (string memory at 10147632c)
  7ff32b800760 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0446347 1 1 0 0 0   LITERAL   'final' (string memory at 101476344)
  7ff32b800780 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0536347 1 1 0 0 0   LITERAL   'in' (string memory at 101476353)
  7ff32b8007a0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 05f6347 1 1 0 0 0   LITERAL   'lazy' (string memory at 10147635f)
  7ff32b8007c0 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 06d6347 1 1 0 0 0   LITERAL   'out' (string memory at 10147636d)
  7ff32b8007e0 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 07a6347 1 1 0 0 0   LITERAL   'ref' (string memory at 10147637a)
  7ff32b800800 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0876347 1 1 0 0 0   LITERAL   'scope' (string memory at 101476387)
  7ff32b800820 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0966347 1 1 0 0 0   LITERAL   'auto' (string memory at 101476396)
  7ff32b800840 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0a46347 1 1 0 0 0   LITERAL   'return' (string memory at 1014763a4)
  7ff32b800860 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060eb5d 1 1 0 0 0    EITHER    => [ 7ff32b800820 7ff32b800840 ] (array memory at 1015deb60)
  7ff32b800880 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080eb5d 1 1 0 0 0    EITHER    => [ 7ff32b800800 7ff32b800860 ] (array memory at 1015deb80)
  7ff32b8008a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0eb5d 1 1 0 0 0    EITHER    => [ 7ff32b8007e0 7ff32b800880 ] (array memory at 1015deba0)
  7ff32b8008c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0eb5d 1 1 0 0 0    EITHER    => [ 7ff32b8007c0 7ff32b8008a0 ] (array memory at 1015debc0)
  7ff32b8008e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0eb5d 1 1 0 0 0    EITHER    => [ 7ff32b8007a0 7ff32b8008c0 ] (array memory at 1015debe0)
  7ff32b800900 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0ec5d 1 1 0 0 0    EITHER    => [ 7ff32b800780 7ff32b8008e0 ] (array memory at 1015dec00)
  7ff32b800920 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020ec5d 1 1 0 0 0    EITHER    => [ 7ff32b800760 7ff32b800900 ] (array memory at 1015dec20)
  7ff32b800940 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040ec5d 1 1 0 0 0    EITHER    => [ 7ff32b800740 7ff32b800920 ] (array memory at 1015dec40)
  7ff32b800960 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060ec5d 1 1 0 0 0    EITHER    => [ 7ff32b800720 7ff32b800940 ] (array memory at 1015dec60)
  7ff32b800980 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0c86347 1 1 0 0 0   LITERAL   '(' (string memory at 1014763c8)
  7ff32b8009a0 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0cb6347 1 1 0 0 0      TREF   'parameter' at 7ff32b800700 (string memory at 1014763cb)
  7ff32b8009c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d76347 1 1 0 0 0   LITERAL   ',' (string memory at 1014763d7)
  7ff32b8009e0 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0da6347 1 1 0 0 0      TREF   'parameter' at 7ff32b800700 (string memory at 1014763da)
  7ff32b800a00 | 34 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0ec5d 1 1 0 0 0  SEQUENCE *  => [ 7ff32b8009c0 7ff32b8009e0 ] (array memory at 1015deca0)
  7ff32b800a20 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e86347 1 1 0 0 0   LITERAL   ',' (string memory at 1014763e8)
  7ff32b800a40 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0ec6347 1 1 0 0 0   LITERAL   '...' (string memory at 1014763ec)
  7ff32b800a60 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0ec5d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b800a20 7ff32b800a40 ] (array memory at 1015decc0)
  7ff32b800a80 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f46347 1 1 0 0 0   LITERAL   ')' (string memory at 1014763f4)
  7ff32b800aa0 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0e0f15d 1 1 0 0 0  SEQUENCE    => [ 7ff32b800980 7ff32b8009a0 7ff32b800a00 7ff32b800a60 7ff32b800a80 ] (array memory at 1015df1e0)
  7ff32b800ac0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0ff6347 1 1 0 0 0   LITERAL   '(' (string memory at 1014763ff)
  7ff32b800ae0 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 36447 1 1 0 0 0   LITERAL   '...' (string memory at 101476403)
  7ff32b800b00 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 96447 1 1 0 0 0   LITERAL   ')' (string memory at 101476409)
  7ff32b800b20 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0e0ec5d 1 1 0 0 0  SEQUENCE    => [ 7ff32b800ac0 7ff32b800ae0 7ff32b800b00 ] (array memory at 1015dece0)
  7ff32b800b40 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0146447 1 1 0 0 0   LITERAL   '(' (string memory at 101476414)
  7ff32b800b60 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0186447 1 1 0 0 0   LITERAL   ')' (string memory at 101476418)
  7ff32b800b80 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0ed5d 1 1 0 0 0  SEQUENCE    => [ 7ff32b800b40 7ff32b800b60 ] (array memory at 1015ded00)
  7ff32b800ba0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020ed5d 1 1 0 0 0    EITHER    => [ 7ff32b800b20 7ff32b800b80 ] (array memory at 1015ded20)
  7ff32b800bc0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040ed5d 1 1 0 0 0    EITHER    => [ 7ff32b800aa0 7ff32b800ba0 ] (array memory at 1015ded40)
  7ff32b800be0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0336447 1 1 0 0 0   LITERAL   'this' (string memory at 101476433)
  7ff32b800c00 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 03a6447 1 1 0 0 0   LITERAL   '(' (string memory at 10147643a)
  7ff32b800c20 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 03e6447 1 1 0 0 0   LITERAL   'this' (string memory at 10147643e)
  7ff32b800c40 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0456447 1 1 0 0 0   LITERAL   ')' (string memory at 101476445)
  7ff32b800c60 | 32 0 0 0 0 0 0 017 0 0 0 0 0 0 0486447 1 1 0 0 0      TREF * 'memberFunctionAttribute' at 7ff32a027b20 (string memory at 101476448)
  7ff32b800c80 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0626447 1 1 0 0 0      TREF   'functionBody' at 7ff32a801e60 (string memory at 101476462)
  7ff32b800ca0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0726447 1 1 0 0 0   LITERAL   ';' (string memory at 101476472)
  7ff32b800cc0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080ed5d 1 1 0 0 0    EITHER    => [ 7ff32b800c80 7ff32b800ca0 ] (array memory at 1015ded80)
  7ff32b800ce0 |  4 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0c0c95c 1 1 0 0 0  SEQUENCE    => [ 7ff32b800be0 7ff32b800c00 7ff32b800c20 7ff32b800c40 7ff32b800c60 7ff32b800cc0 ] (array memory at 1015cc9c0)
  7ff32b800d00 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 040df5d 1 1 0 0 0    EITHER    => [ 7ff32b800ce0 ] (array memory at 1015ddf40)
  7ff32b800d20 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0946447 1 1 0 0 0      TREF   'unaryExpression' at 7ff32a800360 (string memory at 101476494)
  7ff32b800d40 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0ab6447 1 1 0 0 0      TREF   'powExpression' at 7ff32b004320 (string memory at 1014764ab)
  7ff32b800d60 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0ba6447 1 1 0 0 0   LITERAL   '^^' (string memory at 1014764ba)
  7ff32b800d80 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0be6447 1 1 0 0 0      TREF   'unaryExpression' at 7ff32a800360 (string memory at 1014764be)
  7ff32b800da0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0c0ed5d 1 1 0 0 0  SEQUENCE    => [ 7ff32b800d40 7ff32b800d60 7ff32b800d80 ] (array memory at 1015dedc0)
  7ff32b800dc0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0ed5d 1 1 0 0 0    EITHER    => [ 7ff32b800d20 7ff32b800da0 ] (array memory at 1015dede0)
  7ff32b800de0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0ee6447 1 1 0 0 0      TREF   'pragmaExpression' at 7ff32a02aaa0 (string memory at 1014764ee)
  7ff32b800e00 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 06547 1 1 0 0 0   LITERAL   ';' (string memory at 101476500)
  7ff32b800e20 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0ee5d 1 1 0 0 0  SEQUENCE    => [ 7ff32b800de0 7ff32b800e00 ] (array memory at 1015dee00)
  7ff32b800e40 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0236547 1 1 0 0 0   LITERAL   'pragma' (string memory at 101476523)
  7ff32b800e60 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 02c6547 1 1 0 0 0   LITERAL   '(' (string memory at 10147652c)
  7ff32b800e80 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 02f6547 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 10147652f)
  7ff32b800ea0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 03c6547 1 1 0 0 0   LITERAL   ',' (string memory at 10147653c)
  7ff32b800ec0 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 03f6547 1 1 0 0 0      TREF   'argumentList' at 7ff32a0280e0 (string memory at 10147653f)
  7ff32b800ee0 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040ee5d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b800ea0 7ff32b800ec0 ] (array memory at 1015dee40)
  7ff32b800f00 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 04f6547 1 1 0 0 0   LITERAL   ')' (string memory at 10147654f)
  7ff32b800f20 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 040f25d 1 1 0 0 0  SEQUENCE    => [ 7ff32b800e40 7ff32b800e60 7ff32b800e80 7ff32b800ee0 7ff32b800f00 ] (array memory at 1015df240)
  7ff32b800f40 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0726547 1 1 0 0 0      TREF   'pragmaExpression' at 7ff32a02aaa0 (string memory at 101476572)
  7ff32b800f60 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0836547 1 1 0 0 0      TREF   'statement' at 7ff32a802d20 (string memory at 101476583)
  7ff32b800f80 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060ee5d 1 1 0 0 0  SEQUENCE    => [ 7ff32b800f40 7ff32b800f60 ] (array memory at 1015dee60)
  7ff32b800fa0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0946547 1 1 0 0 0      TREF   'pragmaExpression' at 7ff32a02aaa0 (string memory at 101476594)
  7ff32b800fc0 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0a56547 1 1 0 0 0      TREF   'blockStatement' at 7ff32a02b520 (string memory at 1014765a5)
  7ff32b800fe0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080ee5d 1 1 0 0 0  SEQUENCE    => [ 7ff32b800fa0 7ff32b800fc0 ] (array memory at 1015dee80)
  7ff32b801000 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0bb6547 1 1 0 0 0      TREF   'pragmaExpression' at 7ff32a02aaa0 (string memory at 1014765bb)
  7ff32b801020 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0cd6547 1 1 0 0 0   LITERAL   ';' (string memory at 1014765cd)
  7ff32b801040 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0ee5d 1 1 0 0 0  SEQUENCE    => [ 7ff32b801000 7ff32b801020 ] (array memory at 1015deea0)
  7ff32b801060 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0ee5d 1 1 0 0 0    EITHER    => [ 7ff32b800fe0 7ff32b801040 ] (array memory at 1015deec0)
  7ff32b801080 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0ee5d 1 1 0 0 0    EITHER    => [ 7ff32b800f80 7ff32b801060 ] (array memory at 1015deee0)
  7ff32b8010a0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 020 05e 1 1 0 0 0    EITHER    => [ 7ff32b801080 ] (array memory at 1015e0020)
  7ff32b8010c0 |  2 0 0 0 0 0 0 01c 0 0 0 0 0 0 0f26547 1 1 0 0 0      TREF   'identifierOrTemplateInstance' at 7ff32b001720 (string memory at 1014765f2)
  7ff32b8010e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0176647 1 1 0 0 0   LITERAL   '.' (string memory at 101476617)
  7ff32b801100 |  2 0 0 0 0 0 0 01c 0 0 0 0 0 0 01a6647 1 1 0 0 0      TREF   'identifierOrTemplateInstance' at 7ff32b001720 (string memory at 10147661a)
  7ff32b801120 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020ef5d 1 1 0 0 0  SEQUENCE    => [ 7ff32b8010e0 7ff32b801100 ] (array memory at 1015def20)
  7ff32b801140 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 03e6647 1 1 0 0 0      TREF   'typeConstructor' at 7ff32b0000e0 (string memory at 10147663e)
  7ff32b801160 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 04f6647 1 1 0 0 0   LITERAL   '(' (string memory at 10147664f)
  7ff32b801180 |  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0      NONE   
  7ff32b8011a0 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0526647 1 1 0 0 0      TREF   'basicType' at 7ff32b801180 (string memory at 101476652)
  7ff32b8011c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 05d6647 1 1 0 0 0   LITERAL   ')' (string memory at 10147665d)
  7ff32b8011e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0616647 1 1 0 0 0   LITERAL   '.' (string memory at 101476661)
  7ff32b801200 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0646647 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101476664)
  7ff32b801220 |  4 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0ca5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b801140 7ff32b801160 7ff32b8011a0 7ff32b8011c0 7ff32b8011e0 7ff32b801200 ] (array memory at 1015cca00)
  7ff32b801240 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0766647 1 1 0 0 0      TREF   'basicType' at 7ff32b801180 (string memory at 101476676)
  7ff32b801260 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0816647 1 1 0 0 0   LITERAL   '.' (string memory at 101476681)
  7ff32b801280 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0846647 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101476684)
  7ff32b8012a0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 080ef5d 1 1 0 0 0  SEQUENCE    => [ 7ff32b801240 7ff32b801260 7ff32b801280 ] (array memory at 1015def80)
  7ff32b8012c0 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0966647 1 1 0 0 0      TREF   'basicType' at 7ff32b801180 (string memory at 101476696)
  7ff32b8012e0 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0a06647 1 1 0 0 0      TREF   'arguments' at 7ff32a028180 (string memory at 1014766a0)
  7ff32b801300 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0ef5d 1 1 0 0 0  SEQUENCE    => [ 7ff32b8012c0 7ff32b8012e0 ] (array memory at 1015defa0)
  7ff32b801320 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0b16647 1 1 0 0 0      TREF   'typeofExpression' at 7ff32b004100 (string memory at 1014766b1)
  7ff32b801340 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 070355e 1 1 0 0 0    EITHER    => [ 7ff32b806780 ] (array memory at 1015e3570)
  7ff32b801360 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0c96647 1 1 0 0 0      TREF   'typeidExpression' at 7ff32b801340 (string memory at 1014766c9)
  7ff32b801380 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d0385e 1 1 0 0 0    EITHER    => [ 7ff32b807520 ] (array memory at 1015e38d0)
  7ff32b8013a0 |  2 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0e16647 1 1 0 0 0      TREF   'vector' at 7ff32b801380 (string memory at 1014766e1)
  7ff32b8013c0 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0ef6647 1 1 0 0 0      TREF   'arrayLiteral' at 7ff32a0283c0 (string memory at 1014766ef)
  7ff32b8013e0 |  2 0 0 0 0 0 0 011 0 0 0 0 0 0 0 36747 1 1 0 0 0      TREF   'assocArrayLiteral' at 7ff32a02a7c0 (string memory at 101476703)
  7ff32b801400 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 01d6747 1 1 0 0 0   LITERAL   '(' (string memory at 10147671d)
  7ff32b801420 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0206747 1 1 0 0 0      TREF   'expression' at 7ff32a801d40 (string memory at 101476720)
  7ff32b801440 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 02c6747 1 1 0 0 0   LITERAL   ')' (string memory at 10147672c)
  7ff32b801460 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0105e 1 1 0 0 0  SEQUENCE    => [ 7ff32b801400 7ff32b801420 7ff32b801440 ] (array memory at 1015e1000)
  7ff32b801480 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0366747 1 1 0 0 0      TREF   'isExpression' at 7ff32b003640 (string memory at 101476736)
  7ff32b8014a0 |  2 0 0 0 0 0 0 019 0 0 0 0 0 0 04a6747 1 1 0 0 0      TREF   'functionLiteralExpression' at 7ff32a027be0 (string memory at 10147674a)
  7ff32b8014c0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 070315e 1 1 0 0 0    EITHER    => [ 7ff32b805860 ] (array memory at 1015e3170)
  7ff32b8014e0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 06b6747 1 1 0 0 0      TREF   'traitsExpression' at 7ff32b8014c0 (string memory at 10147676b)
  7ff32b801500 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0836747 1 1 0 0 0      TREF   'mixinExpression' at 7ff32b003ec0 (string memory at 101476783)
  7ff32b801520 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 09a6747 1 1 0 0 0      TREF   'importExpression' at 7ff32b002460 (string memory at 10147679a)
  7ff32b801540 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b36747 1 1 0 0 0   LITERAL   '$' (string memory at 1014767b3)
  7ff32b801560 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0be6747 1 1 0 0 0   LITERAL   'this' (string memory at 1014767be)
  7ff32b801580 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0cc6747 1 1 0 0 0   LITERAL   'super' (string memory at 1014767cc)
  7ff32b8015a0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0db6747 1 1 0 0 0   LITERAL   'null' (string memory at 1014767db)
  7ff32b8015c0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0e96747 1 1 0 0 0   LITERAL   'true' (string memory at 1014767e9)
  7ff32b8015e0 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0f76747 1 1 0 0 0   LITERAL   'false' (string memory at 1014767f7)
  7ff32b801600 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 66847 1 1 0 0 0   LITERAL   '__DATE__' (string memory at 101476806)
  7ff32b801620 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0186847 1 1 0 0 0   LITERAL   '__FILE__' (string memory at 101476818)
  7ff32b801640 |  1 0 0 0 0 0 0 012 0 0 0 0 0 0 02a6847 1 1 0 0 0   LITERAL   '__FILE_FULL_PATH__' (string memory at 10147682a)
  7ff32b801660 |  1 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0466847 1 1 0 0 0   LITERAL   '__FUNCTION__' (string memory at 101476846)
  7ff32b801680 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 05c6847 1 1 0 0 0   LITERAL   '__LINE__' (string memory at 10147685c)
  7ff32b8016a0 |  1 0 0 0 0 0 0 0 a 0 0 0 0 0 0 06e6847 1 1 0 0 0   LITERAL   '__MODULE__' (string memory at 10147686e)
  7ff32b8016c0 |  1 0 0 0 0 0 0 013 0 0 0 0 0 0 0826847 1 1 0 0 0   LITERAL   '__PRETTY_FUNCTION__' (string memory at 101476882)
  7ff32b8016e0 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 09f6847 1 1 0 0 0   LITERAL   '__TIME__' (string memory at 10147689f)
  7ff32b801700 |  1 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0b16847 1 1 0 0 0   LITERAL   '__TIMESTAMP__' (string memory at 1014768b1)
  7ff32b801720 |  1 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0c86847 1 1 0 0 0   LITERAL   '__VENDOR__' (string memory at 1014768c8)
  7ff32b801740 |  1 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0dc6847 1 1 0 0 0   LITERAL   '__VERSION__' (string memory at 1014768dc)
  7ff32b801760 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0f06847 1 1 0 0 0      TREF   'IntegerLiteral' at 7ff32a028a80 (string memory at 1014768f0)
  7ff32b801780 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0 66947 1 1 0 0 0      TREF   'FloatLiteral' at 7ff32a029280 (string memory at 101476906)
  7ff32b8017a0 | 22 0 0 0 0 0 0 0 d 0 0 0 0 0 0 01a6947 1 1 0 0 0      TREF + 'StringLiteral' at 7ff32a0292c0 (string memory at 10147691a)
  7ff32b8017c0 |  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0      NONE   
  7ff32b8017e0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0306947 1 1 0 0 0      TREF   'CharacterLiteral' at 7ff32b8017c0 (string memory at 101476930)
  7ff32b801800 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060105e 1 1 0 0 0    EITHER    => [ 7ff32b8017a0 7ff32b8017e0 ] (array memory at 1015e1060)
  7ff32b801820 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080105e 1 1 0 0 0    EITHER    => [ 7ff32b801780 7ff32b801800 ] (array memory at 1015e1080)
  7ff32b801840 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0105e 1 1 0 0 0    EITHER    => [ 7ff32b801760 7ff32b801820 ] (array memory at 1015e10a0)
  7ff32b801860 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0105e 1 1 0 0 0    EITHER    => [ 7ff32b801740 7ff32b801840 ] (array memory at 1015e10c0)
  7ff32b801880 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0105e 1 1 0 0 0    EITHER    => [ 7ff32b801720 7ff32b801860 ] (array memory at 1015e10e0)
  7ff32b8018a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0115e 1 1 0 0 0    EITHER    => [ 7ff32b801700 7ff32b801880 ] (array memory at 1015e1100)
  7ff32b8018c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020115e 1 1 0 0 0    EITHER    => [ 7ff32b8016e0 7ff32b8018a0 ] (array memory at 1015e1120)
  7ff32b8018e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040115e 1 1 0 0 0    EITHER    => [ 7ff32b8016c0 7ff32b8018c0 ] (array memory at 1015e1140)
  7ff32b801900 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060115e 1 1 0 0 0    EITHER    => [ 7ff32b8016a0 7ff32b8018e0 ] (array memory at 1015e1160)
  7ff32b801920 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080115e 1 1 0 0 0    EITHER    => [ 7ff32b801680 7ff32b801900 ] (array memory at 1015e1180)
  7ff32b801940 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0115e 1 1 0 0 0    EITHER    => [ 7ff32b801660 7ff32b801920 ] (array memory at 1015e11a0)
  7ff32b801960 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0115e 1 1 0 0 0    EITHER    => [ 7ff32b801640 7ff32b801940 ] (array memory at 1015e11c0)
  7ff32b801980 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0115e 1 1 0 0 0    EITHER    => [ 7ff32b801620 7ff32b801960 ] (array memory at 1015e11e0)
  7ff32b8019a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0125e 1 1 0 0 0    EITHER    => [ 7ff32b801600 7ff32b801980 ] (array memory at 1015e1200)
  7ff32b8019c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020125e 1 1 0 0 0    EITHER    => [ 7ff32b8015e0 7ff32b8019a0 ] (array memory at 1015e1220)
  7ff32b8019e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040125e 1 1 0 0 0    EITHER    => [ 7ff32b8015c0 7ff32b8019c0 ] (array memory at 1015e1240)
  7ff32b801a00 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060125e 1 1 0 0 0    EITHER    => [ 7ff32b8015a0 7ff32b8019e0 ] (array memory at 1015e1260)
  7ff32b801a20 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080125e 1 1 0 0 0    EITHER    => [ 7ff32b801580 7ff32b801a00 ] (array memory at 1015e1280)
  7ff32b801a40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0125e 1 1 0 0 0    EITHER    => [ 7ff32b801560 7ff32b801a20 ] (array memory at 1015e12a0)
  7ff32b801a60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0125e 1 1 0 0 0    EITHER    => [ 7ff32b801540 7ff32b801a40 ] (array memory at 1015e12c0)
  7ff32b801a80 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0125e 1 1 0 0 0    EITHER    => [ 7ff32b801520 7ff32b801a60 ] (array memory at 1015e12e0)
  7ff32b801aa0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0135e 1 1 0 0 0    EITHER    => [ 7ff32b801500 7ff32b801a80 ] (array memory at 1015e1300)
  7ff32b801ac0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020135e 1 1 0 0 0    EITHER    => [ 7ff32b8014e0 7ff32b801aa0 ] (array memory at 1015e1320)
  7ff32b801ae0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040135e 1 1 0 0 0    EITHER    => [ 7ff32b8014a0 7ff32b801ac0 ] (array memory at 1015e1340)
  7ff32b801b00 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060135e 1 1 0 0 0    EITHER    => [ 7ff32b801480 7ff32b801ae0 ] (array memory at 1015e1360)
  7ff32b801b20 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080135e 1 1 0 0 0    EITHER    => [ 7ff32b801460 7ff32b801b00 ] (array memory at 1015e1380)
  7ff32b801b40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0135e 1 1 0 0 0    EITHER    => [ 7ff32b8013e0 7ff32b801b20 ] (array memory at 1015e13a0)
  7ff32b801b60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0135e 1 1 0 0 0    EITHER    => [ 7ff32b8013c0 7ff32b801b40 ] (array memory at 1015e13c0)
  7ff32b801b80 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0135e 1 1 0 0 0    EITHER    => [ 7ff32b8013a0 7ff32b801b60 ] (array memory at 1015e13e0)
  7ff32b801ba0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0145e 1 1 0 0 0    EITHER    => [ 7ff32b801360 7ff32b801b80 ] (array memory at 1015e1400)
  7ff32b801bc0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020145e 1 1 0 0 0    EITHER    => [ 7ff32b801320 7ff32b801ba0 ] (array memory at 1015e1420)
  7ff32b801be0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040145e 1 1 0 0 0    EITHER    => [ 7ff32b801300 7ff32b801bc0 ] (array memory at 1015e1440)
  7ff32b801c00 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060145e 1 1 0 0 0    EITHER    => [ 7ff32b8012a0 7ff32b801be0 ] (array memory at 1015e1460)
  7ff32b801c20 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080145e 1 1 0 0 0    EITHER    => [ 7ff32b801220 7ff32b801c00 ] (array memory at 1015e1480)
  7ff32b801c40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0145e 1 1 0 0 0    EITHER    => [ 7ff32b801120 7ff32b801c20 ] (array memory at 1015e14a0)
  7ff32b801c60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0145e 1 1 0 0 0    EITHER    => [ 7ff32b8010c0 7ff32b801c40 ] (array memory at 1015e14c0)
  7ff32b801c80 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d0 25e 1 1 0 0 0    EITHER    => [ 7ff32b801c60 ] (array memory at 1015e02d0)
  7ff32b801ca0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 05a6947 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 10147695a)
  7ff32b801cc0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 06c6947 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 10147696c)
  7ff32b801ce0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0786947 1 1 0 0 0   LITERAL   '(' (string memory at 101476978)
  7ff32b801d00 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 07b6947 1 1 0 0 0      TREF   'IntegerLiteral' at 7ff32a028a80 (string memory at 10147697b)
  7ff32b801d20 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 08b6947 1 1 0 0 0   LITERAL   ')' (string memory at 10147698b)
  7ff32b801d40 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0a0f25d 1 1 0 0 0  SEQUENCE    => [ 7ff32b801cc0 7ff32b801ce0 7ff32b801d00 7ff32b801d20 ] (array memory at 1015df2a0)
  7ff32b801d60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020155e 1 1 0 0 0    EITHER    => [ 7ff32b801ca0 7ff32b801d40 ] (array memory at 1015e1520)
  7ff32b801d80 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0ac6947 1 1 0 0 0      TREF   'shiftExpression' at 7ff32a800e40 (string memory at 1014769ac)
  7ff32b801da0 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0c36947 1 1 0 0 0      TREF   'relExpression' at 7ff32a800f00 (string memory at 1014769c3)
  7ff32b801dc0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 45e 1 1 0 0 0    EITHER    => [ 7ff32b802120 ] (array memory at 1015e0400)
  7ff32b801de0 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0d16947 1 1 0 0 0      TREF   'relOperator' at 7ff32b801dc0 (string memory at 1014769d1)
  7ff32b801e00 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0dd6947 1 1 0 0 0      TREF   'shiftExpression' at 7ff32a800e40 (string memory at 1014769dd)
  7ff32b801e20 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 060155e 1 1 0 0 0  SEQUENCE    => [ 7ff32b801da0 7ff32b801de0 7ff32b801e00 ] (array memory at 1015e1560)
  7ff32b801e40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080155e 1 1 0 0 0    EITHER    => [ 7ff32b801d80 7ff32b801e20 ] (array memory at 1015e1580)
  7ff32b801e60 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 a6a47 1 1 0 0 0   LITERAL   '<' (string memory at 101476a0a)
  7ff32b801e80 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0156a47 1 1 0 0 0   LITERAL   '<=' (string memory at 101476a15)
  7ff32b801ea0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0216a47 1 1 0 0 0   LITERAL   '>' (string memory at 101476a21)
  7ff32b801ec0 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 02c6a47 1 1 0 0 0   LITERAL   '>=' (string memory at 101476a2c)
  7ff32b801ee0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0386a47 1 1 0 0 0   LITERAL   '!<>=' (string memory at 101476a38)
  7ff32b801f00 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0466a47 1 1 0 0 0   LITERAL   '!<>' (string memory at 101476a46)
  7ff32b801f20 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0536a47 1 1 0 0 0   LITERAL   '<>' (string memory at 101476a53)
  7ff32b801f40 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 05f6a47 1 1 0 0 0   LITERAL   '<>=' (string memory at 101476a5f)
  7ff32b801f60 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 06c6a47 1 1 0 0 0   LITERAL   '!>' (string memory at 101476a6c)
  7ff32b801f80 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0786a47 1 1 0 0 0   LITERAL   '!>=' (string memory at 101476a78)
  7ff32b801fa0 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0856a47 1 1 0 0 0   LITERAL   '!<' (string memory at 101476a85)
  7ff32b801fc0 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0916a47 1 1 0 0 0   LITERAL   '!<=' (string memory at 101476a91)
  7ff32b801fe0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0155e 1 1 0 0 0    EITHER    => [ 7ff32b801fa0 7ff32b801fc0 ] (array memory at 1015e15a0)
  7ff32b802000 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0155e 1 1 0 0 0    EITHER    => [ 7ff32b801f80 7ff32b801fe0 ] (array memory at 1015e15c0)
  7ff32b802020 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0155e 1 1 0 0 0    EITHER    => [ 7ff32b801f60 7ff32b802000 ] (array memory at 1015e15e0)
  7ff32b802040 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0165e 1 1 0 0 0    EITHER    => [ 7ff32b801f40 7ff32b802020 ] (array memory at 1015e1600)
  7ff32b802060 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020165e 1 1 0 0 0    EITHER    => [ 7ff32b801f20 7ff32b802040 ] (array memory at 1015e1620)
  7ff32b802080 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040165e 1 1 0 0 0    EITHER    => [ 7ff32b801f00 7ff32b802060 ] (array memory at 1015e1640)
  7ff32b8020a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060165e 1 1 0 0 0    EITHER    => [ 7ff32b801ee0 7ff32b802080 ] (array memory at 1015e1660)
  7ff32b8020c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080165e 1 1 0 0 0    EITHER    => [ 7ff32b801ec0 7ff32b8020a0 ] (array memory at 1015e1680)
  7ff32b8020e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0165e 1 1 0 0 0    EITHER    => [ 7ff32b801ea0 7ff32b8020c0 ] (array memory at 1015e16a0)
  7ff32b802100 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0165e 1 1 0 0 0    EITHER    => [ 7ff32b801e80 7ff32b8020e0 ] (array memory at 1015e16c0)
  7ff32b802120 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0165e 1 1 0 0 0    EITHER    => [ 7ff32b801e60 7ff32b802100 ] (array memory at 1015e16e0)
  7ff32b802140 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0b56a47 1 1 0 0 0   LITERAL   'return' (string memory at 101476ab5)
  7ff32b802160 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0bd6a47 1 1 0 0 0      TREF ? 'expression' at 7ff32a801d40 (string memory at 101476abd)
  7ff32b802180 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0ca6a47 1 1 0 0 0   LITERAL   ';' (string memory at 101476aca)
  7ff32b8021a0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0175e 1 1 0 0 0  SEQUENCE    => [ 7ff32b802140 7ff32b802160 7ff32b802180 ] (array memory at 1015e1700)
  7ff32b8021c0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 020 45e 1 1 0 0 0    EITHER    => [ 7ff32b8021a0 ] (array memory at 1015e0420)
  7ff32b8021e0 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0f06a47 1 1 0 0 0   LITERAL   'scope' (string memory at 101476af0)
  7ff32b802200 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f86a47 1 1 0 0 0   LITERAL   '(' (string memory at 101476af8)
  7ff32b802220 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0fb6a47 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101476afb)
  7ff32b802240 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 76b47 1 1 0 0 0   LITERAL   ')' (string memory at 101476b07)
  7ff32b802260 |  2 0 0 0 0 0 0 018 0 0 0 0 0 0 0 a6b47 1 1 0 0 0      TREF   'statementNoCaseNoDefault' at 7ff32a8032e0 (string memory at 101476b0a)
  7ff32b802280 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0d0f25d 1 1 0 0 0  SEQUENCE    => [ 7ff32b8021e0 7ff32b802200 7ff32b802220 7ff32b802240 7ff32b802260 ] (array memory at 1015df2d0)
  7ff32b8022a0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 040 45e 1 1 0 0 0    EITHER    => [ 7ff32b802280 ] (array memory at 1015e0440)
  7ff32b8022c0 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 04a6b47 1 1 0 0 0   LITERAL   'shared' (string memory at 101476b4a)
  7ff32b8022e0 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0536b47 1 1 0 0 0   LITERAL   'static' (string memory at 101476b53)
  7ff32b802300 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 05c6b47 1 1 0 0 0   LITERAL   'this' (string memory at 101476b5c)
  7ff32b802320 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0636b47 1 1 0 0 0   LITERAL   '(' (string memory at 101476b63)
  7ff32b802340 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0676b47 1 1 0 0 0   LITERAL   ')' (string memory at 101476b67)
  7ff32b802360 | 32 0 0 0 0 0 0 017 0 0 0 0 0 0 06a6b47 1 1 0 0 0      TREF * 'memberFunctionAttribute' at 7ff32a027b20 (string memory at 101476b6a)
  7ff32b802380 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0846b47 1 1 0 0 0      TREF   'functionBody' at 7ff32a801e60 (string memory at 101476b84)
  7ff32b8023a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0946b47 1 1 0 0 0   LITERAL   ';' (string memory at 101476b94)
  7ff32b8023c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0175e 1 1 0 0 0    EITHER    => [ 7ff32b802380 7ff32b8023a0 ] (array memory at 1015e17a0)
  7ff32b8023e0 |  4 0 0 0 0 0 0 0 7 0 0 0 0 0 0 040ca5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b8022c0 7ff32b8022e0 7ff32b802300 7ff32b802320 7ff32b802340 7ff32b802360 7ff32b8023c0 ] (array memory at 1015cca40)
  7ff32b802400 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0be6b47 1 1 0 0 0   LITERAL   'shared' (string memory at 101476bbe)
  7ff32b802420 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0c76b47 1 1 0 0 0   LITERAL   'static' (string memory at 101476bc7)
  7ff32b802440 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d06b47 1 1 0 0 0   LITERAL   '~' (string memory at 101476bd0)
  7ff32b802460 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0d46b47 1 1 0 0 0   LITERAL   'this' (string memory at 101476bd4)
  7ff32b802480 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0db6b47 1 1 0 0 0   LITERAL   '(' (string memory at 101476bdb)
  7ff32b8024a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0df6b47 1 1 0 0 0   LITERAL   ')' (string memory at 101476bdf)
  7ff32b8024c0 | 32 0 0 0 0 0 0 017 0 0 0 0 0 0 0e26b47 1 1 0 0 0      TREF * 'memberFunctionAttribute' at 7ff32a027b20 (string memory at 101476be2)
  7ff32b8024e0 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0fc6b47 1 1 0 0 0      TREF   'functionBody' at 7ff32a801e60 (string memory at 101476bfc)
  7ff32b802500 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 c6c47 1 1 0 0 0   LITERAL   ';' (string memory at 101476c0c)
  7ff32b802520 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0175e 1 1 0 0 0    EITHER    => [ 7ff32b8024e0 7ff32b802500 ] (array memory at 1015e17e0)
  7ff32b802540 |  4 0 0 0 0 0 0 0 8 0 0 0 0 0 0 020 45d 1 1 0 0 0  SEQUENCE    => [ 7ff32b802400 7ff32b802420 7ff32b802440 7ff32b802460 7ff32b802480 7ff32b8024a0 7ff32b8024c0 7ff32b802520 ] (array memory at 1015d0420)
  7ff32b802560 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0306c47 1 1 0 0 0      TREF   'addExpression' at 7ff32a027440 (string memory at 101476c30)
  7ff32b802580 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0456c47 1 1 0 0 0      TREF   'shiftExpression' at 7ff32a800e40 (string memory at 101476c45)
  7ff32b8025a0 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0576c47 1 1 0 0 0   LITERAL   '<<' (string memory at 101476c57)
  7ff32b8025c0 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 05e6c47 1 1 0 0 0   LITERAL   '>>' (string memory at 101476c5e)
  7ff32b8025e0 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0656c47 1 1 0 0 0   LITERAL   '>>>' (string memory at 101476c65)
  7ff32b802600 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0185e 1 1 0 0 0    EITHER    => [ 7ff32b8025c0 7ff32b8025e0 ] (array memory at 1015e1800)
  7ff32b802620 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020185e 1 1 0 0 0    EITHER    => [ 7ff32b8025a0 7ff32b802600 ] (array memory at 1015e1820)
  7ff32b802640 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 06b6c47 1 1 0 0 0      TREF   'addExpression' at 7ff32a027440 (string memory at 101476c6b)
  7ff32b802660 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 040185e 1 1 0 0 0  SEQUENCE    => [ 7ff32b802580 7ff32b802620 7ff32b802640 ] (array memory at 1015e1840)
  7ff32b802680 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060185e 1 1 0 0 0    EITHER    => [ 7ff32b802560 7ff32b802660 ] (array memory at 1015e1860)
  7ff32b8026a0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0956c47 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101476c95)
  7ff32b8026c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a16c47 1 1 0 0 0   LITERAL   '=' (string memory at 101476ca1)
  7ff32b8026e0 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080185e 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b8026a0 7ff32b8026c0 ] (array memory at 1015e1880)
  7ff32b802700 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0a66c47 1 1 0 0 0      TREF   'identifierChain' at 7ff32a0293e0 (string memory at 101476ca6)
  7ff32b802720 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0185e 1 1 0 0 0  SEQUENCE    => [ 7ff32b8026e0 7ff32b802700 ] (array memory at 1015e18a0)
  7ff32b802740 | 11 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0dd6c47 1 1 0 0 0   LITERAL ? 'do' (string memory at 101476cdd)
  7ff32b802760 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0e26c47 1 1 0 0 0      TREF   'blockStatement' at 7ff32a02b520 (string memory at 101476ce2)
  7ff32b802780 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0185e 1 1 0 0 0  SEQUENCE    => [ 7ff32b802740 7ff32b802760 ] (array memory at 1015e18c0)
  7ff32b8027a0 | 32 0 0 0 0 0 0 010 0 0 0 0 0 0 0f86c47 1 1 0 0 0      TREF * 'functionContract' at 7ff32b000620 (string memory at 101476cf8)
  7ff32b8027c0 |  2 0 0 0 0 0 0 017 0 0 0 0 0 0 0 a6d47 1 1 0 0 0      TREF   'inOutContractExpression' at 7ff32b000580 (string memory at 101476d0a)
  7ff32b8027e0 | 11 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0236d47 1 1 0 0 0   LITERAL ? 'do' (string memory at 101476d23)
  7ff32b802800 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0286d47 1 1 0 0 0      TREF   'blockStatement' at 7ff32a02b520 (string memory at 101476d28)
  7ff32b802820 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 060f35d 1 1 0 0 0  SEQUENCE    => [ 7ff32b8027a0 7ff32b8027c0 7ff32b8027e0 7ff32b802800 ] (array memory at 1015df360)
  7ff32b802840 | 32 0 0 0 0 0 0 010 0 0 0 0 0 0 03e6d47 1 1 0 0 0      TREF * 'functionContract' at 7ff32b000620 (string memory at 101476d3e)
  7ff32b802860 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0506d47 1 1 0 0 0      TREF   'inOutStatement' at 7ff32b0005c0 (string memory at 101476d50)
  7ff32b802880 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0606d47 1 1 0 0 0   LITERAL   'do' (string memory at 101476d60)
  7ff32b8028a0 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0646d47 1 1 0 0 0      TREF   'blockStatement' at 7ff32a02b520 (string memory at 101476d64)
  7ff32b8028c0 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 090f35d 1 1 0 0 0  SEQUENCE    => [ 7ff32b802840 7ff32b802860 7ff32b802880 7ff32b8028a0 ] (array memory at 1015df390)
  7ff32b8028e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020195e 1 1 0 0 0    EITHER    => [ 7ff32b802820 7ff32b8028c0 ] (array memory at 1015e1920)
  7ff32b802900 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040195e 1 1 0 0 0    EITHER    => [ 7ff32b802780 7ff32b8028e0 ] (array memory at 1015e1940)
  7ff32b802920 |  2 0 0 0 0 0 0 018 0 0 0 0 0 0 08d6d47 1 1 0 0 0      TREF   'statementNoCaseNoDefault' at 7ff32a8032e0 (string memory at 101476d8d)
  7ff32b802940 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0ad6d47 1 1 0 0 0      TREF   'caseStatement' at 7ff32a800260 (string memory at 101476dad)
  7ff32b802960 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 0c26d47 1 1 0 0 0      TREF   'caseRangeStatement' at 7ff32a8001a0 (string memory at 101476dc2)
  7ff32b802980 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0dc6d47 1 1 0 0 0      TREF   'defaultStatement' at 7ff32a803040 (string memory at 101476ddc)
  7ff32b8029a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060195e 1 1 0 0 0    EITHER    => [ 7ff32b802960 7ff32b802980 ] (array memory at 1015e1960)
  7ff32b8029c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080195e 1 1 0 0 0    EITHER    => [ 7ff32b802940 7ff32b8029a0 ] (array memory at 1015e1980)
  7ff32b8029e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0195e 1 1 0 0 0    EITHER    => [ 7ff32b802920 7ff32b8029c0 ] (array memory at 1015e19a0)
  7ff32b802a00 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0166e47 1 1 0 0 0      TREF   'labeledStatement' at 7ff32b003840 (string memory at 101476e16)
  7ff32b802a20 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 02e6e47 1 1 0 0 0      TREF   'blockStatement' at 7ff32a02b520 (string memory at 101476e2e)
  7ff32b802a40 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0446e47 1 1 0 0 0      TREF   'ifStatement' at 7ff32b001d40 (string memory at 101476e44)
  7ff32b802a60 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 090395e 1 1 0 0 0    EITHER    => [ 7ff32b807820 ] (array memory at 1015e3990)
  7ff32b802a80 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0576e47 1 1 0 0 0      TREF   'whileStatement' at 7ff32b802a60 (string memory at 101476e57)
  7ff32b802aa0 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 06d6e47 1 1 0 0 0      TREF   'doStatement' at 7ff32a8033e0 (string memory at 101476e6d)
  7ff32b802ac0 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0806e47 1 1 0 0 0      TREF   'forStatement' at 7ff32a804020 (string memory at 101476e80)
  7ff32b802ae0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0946e47 1 1 0 0 0      TREF   'foreachStatement' at 7ff32a804520 (string memory at 101476e94)
  7ff32b802b00 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0ac6e47 1 1 0 0 0      TREF   'switchStatement' at 7ff32a803dc0 (string memory at 101476eac)
  7ff32b802b20 |  2 0 0 0 0 0 0 014 0 0 0 0 0 0 0c36e47 1 1 0 0 0      TREF   'finalSwitchStatement' at 7ff32a803e20 (string memory at 101476ec3)
  7ff32b802b40 |  2 0 0 0 0 0 0 011 0 0 0 0 0 0 0df6e47 1 1 0 0 0      TREF   'continueStatement' at 7ff32a801fa0 (string memory at 101476edf)
  7ff32b802b60 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0f86e47 1 1 0 0 0      TREF   'breakStatement' at 7ff32a02b5c0 (string memory at 101476ef8)
  7ff32b802b80 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0 e6f47 1 1 0 0 0      TREF   'returnStatement' at 7ff32b8021c0 (string memory at 101476f0e)
  7ff32b802ba0 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0256f47 1 1 0 0 0      TREF   'gotoStatement' at 7ff32b001660 (string memory at 101476f25)
  7ff32b802bc0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b0395e 1 1 0 0 0    EITHER    => [ 7ff32b8078e0 ] (array memory at 1015e39b0)
  7ff32b802be0 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 03a6f47 1 1 0 0 0      TREF   'withStatement' at 7ff32b802bc0 (string memory at 101476f3a)
  7ff32b802c00 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 030 b5e 1 1 0 0 0    EITHER    => [ 7ff32b803f00 ] (array memory at 1015e0b30)
  7ff32b802c20 |  2 0 0 0 0 0 0 015 0 0 0 0 0 0 04f6f47 1 1 0 0 0      TREF   'synchronizedStatement' at 7ff32b802c00 (string memory at 101476f4f)
  7ff32b802c40 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d0315e 1 1 0 0 0    EITHER    => [ 7ff32b8059a0 ] (array memory at 1015e31d0)
  7ff32b802c60 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 06c6f47 1 1 0 0 0      TREF   'tryStatement' at 7ff32b802c40 (string memory at 101476f6c)
  7ff32b802c80 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 050315e 1 1 0 0 0    EITHER    => [ 7ff32b805780 ] (array memory at 1015e3150)
  7ff32b802ca0 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0806f47 1 1 0 0 0      TREF   'throwStatement' at 7ff32b802c80 (string memory at 101476f80)
  7ff32b802cc0 |  2 0 0 0 0 0 0 013 0 0 0 0 0 0 0966f47 1 1 0 0 0      TREF   'scopeGuardStatement' at 7ff32b8022a0 (string memory at 101476f96)
  7ff32b802ce0 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0b16f47 1 1 0 0 0      TREF   'pragmaStatement' at 7ff32b8010a0 (string memory at 101476fb1)
  7ff32b802d00 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0c86f47 1 1 0 0 0      TREF   'asmStatement' at 7ff32a0299c0 (string memory at 101476fc8)
  7ff32b802d20 |  2 0 0 0 0 0 0 014 0 0 0 0 0 0 0dc6f47 1 1 0 0 0      TREF   'conditionalStatement' at 7ff32a801ce0 (string memory at 101476fdc)
  7ff32b802d40 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e0 75e 1 1 0 0 0    EITHER    => [ 7ff32b803160 ] (array memory at 1015e07e0)
  7ff32b802d60 |  2 0 0 0 0 0 0 015 0 0 0 0 0 0 0f86f47 1 1 0 0 0      TREF   'staticAssertStatement' at 7ff32b802d40 (string memory at 101476ff8)
  7ff32b802d80 |  2 0 0 0 0 0 0 014 0 0 0 0 0 0 0157047 1 1 0 0 0      TREF   'versionSpecification' at 7ff32a802920 (string memory at 101477015)
  7ff32b802da0 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 0317047 1 1 0 0 0      TREF   'debugSpecification' at 7ff32a8021a0 (string memory at 101477031)
  7ff32b802dc0 |  2 0 0 0 0 0 0 013 0 0 0 0 0 0 04b7047 1 1 0 0 0      TREF   'expressionStatement' at 7ff32a803d80 (string memory at 10147704b)
  7ff32b802de0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0801a5e 1 1 0 0 0    EITHER    => [ 7ff32b802da0 7ff32b802dc0 ] (array memory at 1015e1a80)
  7ff32b802e00 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a01a5e 1 1 0 0 0    EITHER    => [ 7ff32b802d80 7ff32b802de0 ] (array memory at 1015e1aa0)
  7ff32b802e20 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c01a5e 1 1 0 0 0    EITHER    => [ 7ff32b802d60 7ff32b802e00 ] (array memory at 1015e1ac0)
  7ff32b802e40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e01a5e 1 1 0 0 0    EITHER    => [ 7ff32b802d20 7ff32b802e20 ] (array memory at 1015e1ae0)
  7ff32b802e60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 01b5e 1 1 0 0 0    EITHER    => [ 7ff32b802d00 7ff32b802e40 ] (array memory at 1015e1b00)
  7ff32b802e80 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0201b5e 1 1 0 0 0    EITHER    => [ 7ff32b802ce0 7ff32b802e60 ] (array memory at 1015e1b20)
  7ff32b802ea0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0401b5e 1 1 0 0 0    EITHER    => [ 7ff32b802cc0 7ff32b802e80 ] (array memory at 1015e1b40)
  7ff32b802ec0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0601b5e 1 1 0 0 0    EITHER    => [ 7ff32b802ca0 7ff32b802ea0 ] (array memory at 1015e1b60)
  7ff32b802ee0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0801b5e 1 1 0 0 0    EITHER    => [ 7ff32b802c60 7ff32b802ec0 ] (array memory at 1015e1b80)
  7ff32b802f00 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a01b5e 1 1 0 0 0    EITHER    => [ 7ff32b802c20 7ff32b802ee0 ] (array memory at 1015e1ba0)
  7ff32b802f20 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c01b5e 1 1 0 0 0    EITHER    => [ 7ff32b802be0 7ff32b802f00 ] (array memory at 1015e1bc0)
  7ff32b802f40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e01b5e 1 1 0 0 0    EITHER    => [ 7ff32b802ba0 7ff32b802f20 ] (array memory at 1015e1be0)
  7ff32b802f60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 01c5e 1 1 0 0 0    EITHER    => [ 7ff32b802b80 7ff32b802f40 ] (array memory at 1015e1c00)
  7ff32b802f80 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0201c5e 1 1 0 0 0    EITHER    => [ 7ff32b802b60 7ff32b802f60 ] (array memory at 1015e1c20)
  7ff32b802fa0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0401c5e 1 1 0 0 0    EITHER    => [ 7ff32b802b40 7ff32b802f80 ] (array memory at 1015e1c40)
  7ff32b802fc0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0601c5e 1 1 0 0 0    EITHER    => [ 7ff32b802b20 7ff32b802fa0 ] (array memory at 1015e1c60)
  7ff32b802fe0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0801c5e 1 1 0 0 0    EITHER    => [ 7ff32b802b00 7ff32b802fc0 ] (array memory at 1015e1c80)
  7ff32b803000 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a01c5e 1 1 0 0 0    EITHER    => [ 7ff32b802ae0 7ff32b802fe0 ] (array memory at 1015e1ca0)
  7ff32b803020 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c01c5e 1 1 0 0 0    EITHER    => [ 7ff32b802ac0 7ff32b803000 ] (array memory at 1015e1cc0)
  7ff32b803040 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e01c5e 1 1 0 0 0    EITHER    => [ 7ff32b802aa0 7ff32b803020 ] (array memory at 1015e1ce0)
  7ff32b803060 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 01d5e 1 1 0 0 0    EITHER    => [ 7ff32b802a80 7ff32b803040 ] (array memory at 1015e1d00)
  7ff32b803080 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0201d5e 1 1 0 0 0    EITHER    => [ 7ff32b802a40 7ff32b803060 ] (array memory at 1015e1d20)
  7ff32b8030a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0401d5e 1 1 0 0 0    EITHER    => [ 7ff32b802a20 7ff32b803080 ] (array memory at 1015e1d40)
  7ff32b8030c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0601d5e 1 1 0 0 0    EITHER    => [ 7ff32b802a00 7ff32b8030a0 ] (array memory at 1015e1d60)
  7ff32b8030e0 |  2 0 0 0 0 0 0 015 0 0 0 0 0 0 0857047 1 1 0 0 0      TREF   'staticAssertStatement' at 7ff32b802d40 (string memory at 101477085)
  7ff32b803100 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0c07047 1 1 0 0 0   LITERAL   'static' (string memory at 1014770c0)
  7ff32b803120 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0c87047 1 1 0 0 0      TREF   'assertExpression' at 7ff32a02a2c0 (string memory at 1014770c8)
  7ff32b803140 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0da7047 1 1 0 0 0   LITERAL   ';' (string memory at 1014770da)
  7ff32b803160 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0801d5e 1 1 0 0 0  SEQUENCE    => [ 7ff32b803100 7ff32b803120 7ff32b803140 ] (array memory at 1015e1d80)
  7ff32b803180 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0fe7047 1 1 0 0 0   LITERAL   'static' (string memory at 1014770fe)
  7ff32b8031a0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 77147 1 1 0 0 0   LITERAL   'this' (string memory at 101477107)
  7ff32b8031c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 e7147 1 1 0 0 0   LITERAL   '(' (string memory at 10147710e)
  7ff32b8031e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0127147 1 1 0 0 0   LITERAL   ')' (string memory at 101477112)
  7ff32b803200 | 32 0 0 0 0 0 0 017 0 0 0 0 0 0 0157147 1 1 0 0 0      TREF * 'memberFunctionAttribute' at 7ff32a027b20 (string memory at 101477115)
  7ff32b803220 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 02f7147 1 1 0 0 0      TREF   'functionBody' at 7ff32a801e60 (string memory at 10147712f)
  7ff32b803240 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 03f7147 1 1 0 0 0   LITERAL   ';' (string memory at 10147713f)
  7ff32b803260 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c01d5e 1 1 0 0 0    EITHER    => [ 7ff32b803220 7ff32b803240 ] (array memory at 1015e1dc0)
  7ff32b803280 |  4 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0c0ca5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b803180 7ff32b8031a0 7ff32b8031c0 7ff32b8031e0 7ff32b803200 7ff32b803260 ] (array memory at 1015ccac0)
  7ff32b8032a0 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0637147 1 1 0 0 0   LITERAL   'static' (string memory at 101477163)
  7ff32b8032c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 06c7147 1 1 0 0 0   LITERAL   '~' (string memory at 10147716c)
  7ff32b8032e0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0707147 1 1 0 0 0   LITERAL   'this' (string memory at 101477170)
  7ff32b803300 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0777147 1 1 0 0 0   LITERAL   '(' (string memory at 101477177)
  7ff32b803320 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 07b7147 1 1 0 0 0   LITERAL   ')' (string memory at 10147717b)
  7ff32b803340 | 32 0 0 0 0 0 0 017 0 0 0 0 0 0 07e7147 1 1 0 0 0      TREF * 'memberFunctionAttribute' at 7ff32a027b20 (string memory at 10147717e)
  7ff32b803360 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0987147 1 1 0 0 0      TREF   'functionBody' at 7ff32a801e60 (string memory at 101477198)
  7ff32b803380 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a87147 1 1 0 0 0   LITERAL   ';' (string memory at 1014771a8)
  7ff32b8033a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 01e5e 1 1 0 0 0    EITHER    => [ 7ff32b803360 7ff32b803380 ] (array memory at 1015e1e00)
  7ff32b8033c0 |  4 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0 0cb5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b8032a0 7ff32b8032c0 7ff32b8032e0 7ff32b803300 7ff32b803320 7ff32b803340 7ff32b8033a0 ] (array memory at 1015ccb00)
  7ff32b8033e0 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0cd7147 1 1 0 0 0   LITERAL   'static' (string memory at 1014771cd)
  7ff32b803400 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0d67147 1 1 0 0 0   LITERAL   'if' (string memory at 1014771d6)
  7ff32b803420 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0db7147 1 1 0 0 0   LITERAL   '(' (string memory at 1014771db)
  7ff32b803440 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0de7147 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 1014771de)
  7ff32b803460 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f07147 1 1 0 0 0   LITERAL   ')' (string memory at 1014771f0)
  7ff32b803480 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 020f45d 1 1 0 0 0  SEQUENCE    => [ 7ff32b8033e0 7ff32b803400 7ff32b803420 7ff32b803440 7ff32b803460 ] (array memory at 1015df420)
  7ff32b8034a0 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0107247 1 1 0 0 0      TREF   'alignAttribute' at 7ff32a027e20 (string memory at 101477210)
  7ff32b8034c0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0267247 1 1 0 0 0      TREF   'linkageAttribute' at 7ff32a02ab60 (string memory at 101477226)
  7ff32b8034e0 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 03e7247 1 1 0 0 0      TREF   'atAttribute' at 7ff32a02aa80 (string memory at 10147723e)
  7ff32b803500 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0517247 1 1 0 0 0      TREF   'typeConstructor' at 7ff32b0000e0 (string memory at 101477251)
  7ff32b803520 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0687247 1 1 0 0 0      TREF   'deprecated' at 7ff32a02ab00 (string memory at 101477268)
  7ff32b803540 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 07b7247 1 1 0 0 0   LITERAL   'abstract' (string memory at 10147727b)
  7ff32b803560 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 08d7247 1 1 0 0 0   LITERAL   'auto' (string memory at 10147728d)
  7ff32b803580 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 09b7247 1 1 0 0 0   LITERAL   'enum' (string memory at 10147729b)
  7ff32b8035a0 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0a97247 1 1 0 0 0   LITERAL   'extern' (string memory at 1014772a9)
  7ff32b8035c0 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0b97247 1 1 0 0 0   LITERAL   'final' (string memory at 1014772b9)
  7ff32b8035e0 |  1 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0c87247 1 1 0 0 0   LITERAL   'nothrow' (string memory at 1014772c8)
  7ff32b803600 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0d97247 1 1 0 0 0   LITERAL   'override' (string memory at 1014772d9)
  7ff32b803620 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0eb7247 1 1 0 0 0   LITERAL   'pure' (string memory at 1014772eb)
  7ff32b803640 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0f97247 1 1 0 0 0   LITERAL   'ref' (string memory at 1014772f9)
  7ff32b803660 |  1 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0 67347 1 1 0 0 0   LITERAL   '__gshared' (string memory at 101477306)
  7ff32b803680 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0197347 1 1 0 0 0   LITERAL   'scope' (string memory at 101477319)
  7ff32b8036a0 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0287347 1 1 0 0 0   LITERAL   'static' (string memory at 101477328)
  7ff32b8036c0 |  1 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0387347 1 1 0 0 0   LITERAL   'synchronized' (string memory at 101477338)
  7ff32b8036e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0401e5e 1 1 0 0 0    EITHER    => [ 7ff32b8036a0 7ff32b8036c0 ] (array memory at 1015e1e40)
  7ff32b803700 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0601e5e 1 1 0 0 0    EITHER    => [ 7ff32b803680 7ff32b8036e0 ] (array memory at 1015e1e60)
  7ff32b803720 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0801e5e 1 1 0 0 0    EITHER    => [ 7ff32b803660 7ff32b803700 ] (array memory at 1015e1e80)
  7ff32b803740 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a01e5e 1 1 0 0 0    EITHER    => [ 7ff32b803640 7ff32b803720 ] (array memory at 1015e1ea0)
  7ff32b803760 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c01e5e 1 1 0 0 0    EITHER    => [ 7ff32b803620 7ff32b803740 ] (array memory at 1015e1ec0)
  7ff32b803780 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e01e5e 1 1 0 0 0    EITHER    => [ 7ff32b803600 7ff32b803760 ] (array memory at 1015e1ee0)
  7ff32b8037a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 01f5e 1 1 0 0 0    EITHER    => [ 7ff32b8035e0 7ff32b803780 ] (array memory at 1015e1f00)
  7ff32b8037c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0201f5e 1 1 0 0 0    EITHER    => [ 7ff32b8035c0 7ff32b8037a0 ] (array memory at 1015e1f20)
  7ff32b8037e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0401f5e 1 1 0 0 0    EITHER    => [ 7ff32b8035a0 7ff32b8037c0 ] (array memory at 1015e1f40)
  7ff32b803800 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0601f5e 1 1 0 0 0    EITHER    => [ 7ff32b803580 7ff32b8037e0 ] (array memory at 1015e1f60)
  7ff32b803820 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0801f5e 1 1 0 0 0    EITHER    => [ 7ff32b803560 7ff32b803800 ] (array memory at 1015e1f80)
  7ff32b803840 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a01f5e 1 1 0 0 0    EITHER    => [ 7ff32b803540 7ff32b803820 ] (array memory at 1015e1fa0)
  7ff32b803860 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c01f5e 1 1 0 0 0    EITHER    => [ 7ff32b803520 7ff32b803840 ] (array memory at 1015e1fc0)
  7ff32b803880 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e01f5e 1 1 0 0 0    EITHER    => [ 7ff32b803500 7ff32b803860 ] (array memory at 1015e1fe0)
  7ff32b8038a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0205e 1 1 0 0 0    EITHER    => [ 7ff32b8034e0 7ff32b803880 ] (array memory at 1015e2000)
  7ff32b8038c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020205e 1 1 0 0 0    EITHER    => [ 7ff32b8034c0 7ff32b8038a0 ] (array memory at 1015e2020)
  7ff32b8038e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040205e 1 1 0 0 0    EITHER    => [ 7ff32b8034a0 7ff32b8038c0 ] (array memory at 1015e2040)
  7ff32b803900 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0607347 1 1 0 0 0   LITERAL   '{' (string memory at 101477360)
  7ff32b803920 | 32 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0637347 1 1 0 0 0      TREF * 'declaration' at 7ff32a801140 (string memory at 101477363)
  7ff32b803940 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0717347 1 1 0 0 0   LITERAL   '}' (string memory at 101477371)
  7ff32b803960 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 060205e 1 1 0 0 0  SEQUENCE    => [ 7ff32b803900 7ff32b803920 7ff32b803940 ] (array memory at 1015e2060)
  7ff32b803980 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0977347 1 1 0 0 0   LITERAL   'struct' (string memory at 101477397)
  7ff32b8039a0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 09f7347 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 10147739f)
  7ff32b8039c0 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 0ab7347 1 1 0 0 0      TREF   'templateParameters' at 7ff32a0279a0 (string memory at 1014773ab)
  7ff32b8039e0 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0be7347 1 1 0 0 0      TREF ? 'constraint' at 7ff32a800aa0 (string memory at 1014773be)
  7ff32b803a00 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0205e 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b8039c0 7ff32b8039e0 ] (array memory at 1015e20a0)
  7ff32b803a20 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0cd7347 1 1 0 0 0      TREF   'structBody' at 7ff32a8009e0 (string memory at 1014773cd)
  7ff32b803a40 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0db7347 1 1 0 0 0   LITERAL   ';' (string memory at 1014773db)
  7ff32b803a60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0205e 1 1 0 0 0    EITHER    => [ 7ff32b803a20 7ff32b803a40 ] (array memory at 1015e20c0)
  7ff32b803a80 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 050f45d 1 1 0 0 0  SEQUENCE    => [ 7ff32b803980 7ff32b8039a0 7ff32b803a00 7ff32b803a60 ] (array memory at 1015df450)
  7ff32b803aa0 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0e77347 1 1 0 0 0   LITERAL   'struct' (string memory at 1014773e7)
  7ff32b803ac0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0ef7347 1 1 0 0 0      TREF   'structBody' at 7ff32a8009e0 (string memory at 1014773ef)
  7ff32b803ae0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0205e 1 1 0 0 0  SEQUENCE    => [ 7ff32b803aa0 7ff32b803ac0 ] (array memory at 1015e20e0)
  7ff32b803b00 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0215e 1 1 0 0 0    EITHER    => [ 7ff32b803a80 7ff32b803ae0 ] (array memory at 1015e2100)
  7ff32b803b20 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 01b7447 1 1 0 0 0   LITERAL   '{' (string memory at 10147741b)
  7ff32b803b40 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0c0 a5e 1 1 0 0 0    EITHER    => [ 7ff32b803d00 ] (array memory at 1015e0ac0)
  7ff32b803b60 | 12 0 0 0 0 0 0 018 0 0 0 0 0 0 01e7447 1 1 0 0 0      TREF ? 'structMemberInitializers' at 7ff32b803b40 (string memory at 10147741e)
  7ff32b803b80 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0397447 1 1 0 0 0   LITERAL   '}' (string memory at 101477439)
  7ff32b803ba0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 040215e 1 1 0 0 0  SEQUENCE    => [ 7ff32b803b20 7ff32b803b60 7ff32b803b80 ] (array memory at 1015e2140)
  7ff32b803bc0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0637447 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101477463)
  7ff32b803be0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 06f7447 1 1 0 0 0   LITERAL   ':' (string memory at 10147746f)
  7ff32b803c00 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060215e 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b803bc0 7ff32b803be0 ] (array memory at 1015e2160)
  7ff32b803c20 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 0747447 1 1 0 0 0      TREF   'nonVoidInitializer' at 7ff32a028440 (string memory at 101477474)
  7ff32b803c40 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080215e 1 1 0 0 0  SEQUENCE    => [ 7ff32b803c00 7ff32b803c20 ] (array memory at 1015e2180)
  7ff32b803c60 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 090 a5e 1 1 0 0 0    EITHER    => [ 7ff32b803c40 ] (array memory at 1015e0a90)
  7ff32b803c80 |  2 0 0 0 0 0 0 017 0 0 0 0 0 0 0ae7447 1 1 0 0 0      TREF   'structMemberInitializer' at 7ff32b803c60 (string memory at 1014774ae)
  7ff32b803ca0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0c87447 1 1 0 0 0   LITERAL   ',' (string memory at 1014774c8)
  7ff32b803cc0 | 12 0 0 0 0 0 0 017 0 0 0 0 0 0 0cb7447 1 1 0 0 0      TREF ? 'structMemberInitializer' at 7ff32b803c60 (string memory at 1014774cb)
  7ff32b803ce0 | 34 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0215e 1 1 0 0 0  SEQUENCE *  => [ 7ff32b803ca0 7ff32b803cc0 ] (array memory at 1015e21c0)
  7ff32b803d00 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0215e 1 1 0 0 0  SEQUENCE    => [ 7ff32b803c80 7ff32b803ce0 ] (array memory at 1015e21e0)
  7ff32b803d20 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 57547 1 1 0 0 0   LITERAL   'switch' (string memory at 101477505)
  7ff32b803d40 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 e7547 1 1 0 0 0   LITERAL   '(' (string memory at 10147750e)
  7ff32b803d60 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0117547 1 1 0 0 0      TREF   'expression' at 7ff32a801d40 (string memory at 101477511)
  7ff32b803d80 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 01d7547 1 1 0 0 0   LITERAL   ')' (string memory at 10147751d)
  7ff32b803da0 |  2 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0207547 1 1 0 0 0      TREF   'statement' at 7ff32a802d20 (string memory at 101477520)
  7ff32b803dc0 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 080f45d 1 1 0 0 0  SEQUENCE    => [ 7ff32b803d20 7ff32b803d40 7ff32b803d60 7ff32b803d80 7ff32b803da0 ] (array memory at 1015df480)
  7ff32b803de0 | 11 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0407547 1 1 0 0 0   LITERAL ? '.' (string memory at 101477540)
  7ff32b803e00 |  2 0 0 0 0 0 0 019 0 0 0 0 0 0 0447547 1 1 0 0 0      TREF   'identifierOrTemplateChain' at 7ff32b001a80 (string memory at 101477544)
  7ff32b803e20 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020225e 1 1 0 0 0  SEQUENCE    => [ 7ff32b803de0 7ff32b803e00 ] (array memory at 1015e2220)
  7ff32b803e40 |  1 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0837547 1 1 0 0 0   LITERAL   'synchronized' (string memory at 101477583)
  7ff32b803e60 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0937547 1 1 0 0 0   LITERAL   '(' (string memory at 101477593)
  7ff32b803e80 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0967547 1 1 0 0 0      TREF   'expression' at 7ff32a801d40 (string memory at 101477596)
  7ff32b803ea0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a27547 1 1 0 0 0   LITERAL   ')' (string memory at 1014775a2)
  7ff32b803ec0 | 14 0 0 0 0 0 0 0 3 0 0 0 0 0 0 040225e 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b803e60 7ff32b803e80 7ff32b803ea0 ] (array memory at 1015e2240)
  7ff32b803ee0 |  2 0 0 0 0 0 0 018 0 0 0 0 0 0 0a77547 1 1 0 0 0      TREF   'statementNoCaseNoDefault' at 7ff32a8032e0 (string memory at 1014775a7)
  7ff32b803f00 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 060225e 1 1 0 0 0  SEQUENCE    => [ 7ff32b803e40 7ff32b803ec0 7ff32b803ee0 ] (array memory at 1015e2260)
  7ff32b803f20 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0e67547 1 1 0 0 0   LITERAL   'alias' (string memory at 1014775e6)
  7ff32b803f40 | 12 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0ed7547 1 1 0 0 0      TREF ? 'type' at 7ff32a0276e0 (string memory at 1014775ed)
  7ff32b803f60 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0f37547 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 1014775f3)
  7ff32b803f80 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 07647 1 1 0 0 0   LITERAL   ':' (string memory at 101477600)
  7ff32b803fa0 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 47647 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 101477604)
  7ff32b803fc0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0 b7647 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 10147760b)
  7ff32b803fe0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0225e 1 1 0 0 0    EITHER    => [ 7ff32b803fa0 7ff32b803fc0 ] (array memory at 1015e22a0)
  7ff32b804000 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0225e 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b803f80 7ff32b803fe0 ] (array memory at 1015e22c0)
  7ff32b804020 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0217647 1 1 0 0 0   LITERAL   '=' (string memory at 101477621)
  7ff32b804040 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0257647 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 101477625)
  7ff32b804060 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 02c7647 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 10147762c)
  7ff32b804080 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0225e 1 1 0 0 0    EITHER    => [ 7ff32b804040 7ff32b804060 ] (array memory at 1015e22e0)
  7ff32b8040a0 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0235e 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b804020 7ff32b804080 ] (array memory at 1015e2300)
  7ff32b8040c0 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0b0f45d 1 1 0 0 0  SEQUENCE    => [ 7ff32b803f20 7ff32b803f40 7ff32b803f60 7ff32b804000 7ff32b8040a0 ] (array memory at 1015df4b0)
  7ff32b8040e0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b0 b5e 1 1 0 0 0    EITHER    => [ 7ff32b8040c0 ] (array memory at 1015e0bb0)
  7ff32b804100 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0617647 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 101477661)
  7ff32b804120 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 06d7647 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 10147766d)
  7ff32b804140 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040235e 1 1 0 0 0    EITHER    => [ 7ff32b804100 7ff32b804120 ] (array memory at 1015e2340)
  7ff32b804160 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e0 b5e 1 1 0 0 0    EITHER    => [ 7ff32b804140 ] (array memory at 1015e0be0)
  7ff32b804180 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0a17647 1 1 0 0 0      TREF   'templateArgument' at 7ff32b804160 (string memory at 1014776a1)
  7ff32b8041a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0b47647 1 1 0 0 0   LITERAL   ',' (string memory at 1014776b4)
  7ff32b8041c0 | 12 0 0 0 0 0 0 010 0 0 0 0 0 0 0b77647 1 1 0 0 0      TREF ? 'templateArgument' at 7ff32b804160 (string memory at 1014776b7)
  7ff32b8041e0 | 34 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080235e 1 1 0 0 0  SEQUENCE *  => [ 7ff32b8041a0 7ff32b8041c0 ] (array memory at 1015e2380)
  7ff32b804200 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0235e 1 1 0 0 0  SEQUENCE    => [ 7ff32b804180 7ff32b8041e0 ] (array memory at 1015e23a0)
  7ff32b804220 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 010 c5e 1 1 0 0 0    EITHER    => [ 7ff32b804200 ] (array memory at 1015e0c10)
  7ff32b804240 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0ec7647 1 1 0 0 0   LITERAL   '!' (string memory at 1014776ec)
  7ff32b804260 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f17647 1 1 0 0 0   LITERAL   '(' (string memory at 1014776f1)
  7ff32b804280 | 12 0 0 0 0 0 0 014 0 0 0 0 0 0 0f47647 1 1 0 0 0      TREF ? 'templateArgumentList' at 7ff32b804220 (string memory at 1014776f4)
  7ff32b8042a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 b7747 1 1 0 0 0   LITERAL   ')' (string memory at 10147770b)
  7ff32b8042c0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0e0235e 1 1 0 0 0  SEQUENCE    => [ 7ff32b804260 7ff32b804280 7ff32b8042a0 ] (array memory at 1015e23e0)
  7ff32b8042e0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0245e 1 1 0 0 0  SEQUENCE    => [ 7ff32b804240 7ff32b8042c0 ] (array memory at 1015e2400)
  7ff32b804300 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d0 e5e 1 1 0 0 0    EITHER    => [ 7ff32b804d80 ] (array memory at 1015e0ed0)
  7ff32b804320 |  2 0 0 0 0 0 0 016 0 0 0 0 0 0 0117747 1 1 0 0 0      TREF   'templateSingleArgument' at 7ff32b804300 (string memory at 101477711)
  7ff32b804340 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040245e 1 1 0 0 0    EITHER    => [ 7ff32b8042e0 7ff32b804320 ] (array memory at 1015e2440)
  7ff32b804360 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 060 c5e 1 1 0 0 0    EITHER    => [ 7ff32b804340 ] (array memory at 1015e0c60)
  7ff32b804380 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 04d7747 1 1 0 0 0   LITERAL   'template' (string memory at 10147774d)
  7ff32b8043a0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0577747 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101477757)
  7ff32b8043c0 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 0627747 1 1 0 0 0      TREF   'templateParameters' at 7ff32a0279a0 (string memory at 101477762)
  7ff32b8043e0 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0757747 1 1 0 0 0      TREF ? 'constraint' at 7ff32a800aa0 (string memory at 101477775)
  7ff32b804400 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0827747 1 1 0 0 0   LITERAL   '{' (string memory at 101477782)
  7ff32b804420 | 32 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0857747 1 1 0 0 0      TREF * 'declaration' at 7ff32a801140 (string memory at 101477785)
  7ff32b804440 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0937747 1 1 0 0 0   LITERAL   '}' (string memory at 101477793)
  7ff32b804460 |  4 0 0 0 0 0 0 0 7 0 0 0 0 0 0 040cb5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b804380 7ff32b8043a0 7ff32b8043c0 7ff32b8043e0 7ff32b804400 7ff32b804420 7ff32b804440 ] (array memory at 1015ccb40)
  7ff32b804480 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0b57747 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 1014777b5)
  7ff32b8044a0 |  2 0 0 0 0 0 0 011 0 0 0 0 0 0 0c07747 1 1 0 0 0      TREF   'templateArguments' at 7ff32b804360 (string memory at 1014777c0)
  7ff32b8044c0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0245e 1 1 0 0 0  SEQUENCE    => [ 7ff32b804480 7ff32b8044a0 ] (array memory at 1015e24a0)
  7ff32b8044e0 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0f97747 1 1 0 0 0   LITERAL   'mixin' (string memory at 1014777f9)
  7ff32b804500 |  2 0 0 0 0 0 0 011 0 0 0 0 0 0 0 07847 1 1 0 0 0      TREF   'mixinTemplateName' at 7ff32b0041c0 (string memory at 101477800)
  7ff32b804520 | 12 0 0 0 0 0 0 011 0 0 0 0 0 0 0127847 1 1 0 0 0      TREF ? 'templateArguments' at 7ff32b804360 (string memory at 101477812)
  7ff32b804540 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0257847 1 1 0 0 0      TREF ? 'Identifier' at 7ff32a027960 (string memory at 101477825)
  7ff32b804560 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 010f55d 1 1 0 0 0  SEQUENCE    => [ 7ff32b8044e0 7ff32b804500 7ff32b804520 7ff32b804540 ] (array memory at 1015df510)
  7ff32b804580 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 050 f5e 1 1 0 0 0    EITHER    => [ 7ff32b804f40 ] (array memory at 1015e0f50)
  7ff32b8045a0 |  2 0 0 0 0 0 0 015 0 0 0 0 0 0 0537847 1 1 0 0 0      TREF   'templateTypeParameter' at 7ff32b804580 (string memory at 101477853)
  7ff32b8045c0 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 080 f5e 1 1 0 0 0    EITHER    => [ 7ff32b805040 ] (array memory at 1015e0f80)
  7ff32b8045e0 |  2 0 0 0 0 0 0 016 0 0 0 0 0 0 0707847 1 1 0 0 0      TREF   'templateValueParameter' at 7ff32b8045c0 (string memory at 101477870)
  7ff32b804600 |  2 0 0 0 0 0 0 016 0 0 0 0 0 0 08e7847 1 1 0 0 0      TREF   'templateAliasParameter' at 7ff32b8040e0 (string memory at 10147788e)
  7ff32b804620 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 010 f5e 1 1 0 0 0    EITHER    => [ 7ff32b804e40 ] (array memory at 1015e0f10)
  7ff32b804640 |  2 0 0 0 0 0 0 016 0 0 0 0 0 0 0ac7847 1 1 0 0 0      TREF   'templateTupleParameter' at 7ff32b804620 (string memory at 1014778ac)
  7ff32b804660 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f0 e5e 1 1 0 0 0    EITHER    => [ 7ff32b804de0 ] (array memory at 1015e0ef0)
  7ff32b804680 |  2 0 0 0 0 0 0 015 0 0 0 0 0 0 0ca7847 1 1 0 0 0      TREF   'templateThisParameter' at 7ff32b804660 (string memory at 1014778ca)
  7ff32b8046a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060255e 1 1 0 0 0    EITHER    => [ 7ff32b804640 7ff32b804680 ] (array memory at 1015e2560)
  7ff32b8046c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080255e 1 1 0 0 0    EITHER    => [ 7ff32b804600 7ff32b8046a0 ] (array memory at 1015e2580)
  7ff32b8046e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0255e 1 1 0 0 0    EITHER    => [ 7ff32b8045e0 7ff32b8046c0 ] (array memory at 1015e25a0)
  7ff32b804700 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0255e 1 1 0 0 0    EITHER    => [ 7ff32b8045a0 7ff32b8046e0 ] (array memory at 1015e25c0)
  7ff32b804720 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 020 d5e 1 1 0 0 0    EITHER    => [ 7ff32b804700 ] (array memory at 1015e0d20)
  7ff32b804740 |  2 0 0 0 0 0 0 011 0 0 0 0 0 0 0 47947 1 1 0 0 0      TREF   'templateParameter' at 7ff32b804720 (string memory at 101477904)
  7ff32b804760 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0187947 1 1 0 0 0   LITERAL   ',' (string memory at 101477918)
  7ff32b804780 | 12 0 0 0 0 0 0 011 0 0 0 0 0 0 01b7947 1 1 0 0 0      TREF ? 'templateParameter' at 7ff32b804720 (string memory at 10147791b)
  7ff32b8047a0 | 34 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0265e 1 1 0 0 0  SEQUENCE *  => [ 7ff32b804760 7ff32b804780 ] (array memory at 1015e2600)
  7ff32b8047c0 | 11 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0317947 1 1 0 0 0   LITERAL ? ',' (string memory at 101477931)
  7ff32b8047e0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 020265e 1 1 0 0 0  SEQUENCE    => [ 7ff32b804740 7ff32b8047a0 7ff32b8047c0 ] (array memory at 1015e2620)
  7ff32b804800 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0577947 1 1 0 0 0   LITERAL   '(' (string memory at 101477957)
  7ff32b804820 | 12 0 0 0 0 0 0 015 0 0 0 0 0 0 05a7947 1 1 0 0 0      TREF ? 'templateParameterList' at 7ff32b003400 (string memory at 10147795a)
  7ff32b804840 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0727947 1 1 0 0 0   LITERAL   ')' (string memory at 101477972)
  7ff32b804860 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 040265e 1 1 0 0 0  SEQUENCE    => [ 7ff32b804800 7ff32b804820 7ff32b804840 ] (array memory at 1015e2640)
  7ff32b804880 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 09c7947 1 1 0 0 0      TREF   'builtinType' at 7ff32a800060 (string memory at 10147799c)
  7ff32b8048a0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0af7947 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 1014779af)
  7ff32b8048c0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0c17947 1 1 0 0 0      TREF   'CharacterLiteral' at 7ff32b8017c0 (string memory at 1014779c1)
  7ff32b8048e0 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0d97947 1 1 0 0 0      TREF   'StringLiteral' at 7ff32a0292c0 (string memory at 1014779d9)
  7ff32b804900 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0ee7947 1 1 0 0 0      TREF   'IntegerLiteral' at 7ff32a028a80 (string memory at 1014779ee)
  7ff32b804920 |  2 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0 47a47 1 1 0 0 0      TREF   'FloatLiteral' at 7ff32a029280 (string memory at 101477a04)
  7ff32b804940 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0197a47 1 1 0 0 0   LITERAL   'true' (string memory at 101477a19)
  7ff32b804960 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0277a47 1 1 0 0 0   LITERAL   'false' (string memory at 101477a27)
  7ff32b804980 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0367a47 1 1 0 0 0   LITERAL   'null' (string memory at 101477a36)
  7ff32b8049a0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0447a47 1 1 0 0 0   LITERAL   'this' (string memory at 101477a44)
  7ff32b8049c0 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0527a47 1 1 0 0 0   LITERAL   '__DATE__' (string memory at 101477a52)
  7ff32b8049e0 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0647a47 1 1 0 0 0   LITERAL   '__FILE__' (string memory at 101477a64)
  7ff32b804a00 |  1 0 0 0 0 0 0 012 0 0 0 0 0 0 0767a47 1 1 0 0 0   LITERAL   '__FILE_FULL_PATH__' (string memory at 101477a76)
  7ff32b804a20 |  1 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0927a47 1 1 0 0 0   LITERAL   '__FUNCTION__' (string memory at 101477a92)
  7ff32b804a40 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0a87a47 1 1 0 0 0   LITERAL   '__LINE__' (string memory at 101477aa8)
  7ff32b804a60 |  1 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0ba7a47 1 1 0 0 0   LITERAL   '__MODULE__' (string memory at 101477aba)
  7ff32b804a80 |  1 0 0 0 0 0 0 013 0 0 0 0 0 0 0ce7a47 1 1 0 0 0   LITERAL   '__PRETTY_FUNCTION__' (string memory at 101477ace)
  7ff32b804aa0 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0eb7a47 1 1 0 0 0   LITERAL   '__TIME__' (string memory at 101477aeb)
  7ff32b804ac0 |  1 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0fd7a47 1 1 0 0 0   LITERAL   '__TIMESTAMP__' (string memory at 101477afd)
  7ff32b804ae0 |  1 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0147b47 1 1 0 0 0   LITERAL   '__VENDOR__' (string memory at 101477b14)
  7ff32b804b00 |  1 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0287b47 1 1 0 0 0   LITERAL   '__VERSION__' (string memory at 101477b28)
  7ff32b804b20 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060265e 1 1 0 0 0    EITHER    => [ 7ff32b804ae0 7ff32b804b00 ] (array memory at 1015e2660)
  7ff32b804b40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080265e 1 1 0 0 0    EITHER    => [ 7ff32b804ac0 7ff32b804b20 ] (array memory at 1015e2680)
  7ff32b804b60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0265e 1 1 0 0 0    EITHER    => [ 7ff32b804aa0 7ff32b804b40 ] (array memory at 1015e26a0)
  7ff32b804b80 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0265e 1 1 0 0 0    EITHER    => [ 7ff32b804a80 7ff32b804b60 ] (array memory at 1015e26c0)
  7ff32b804ba0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0265e 1 1 0 0 0    EITHER    => [ 7ff32b804a60 7ff32b804b80 ] (array memory at 1015e26e0)
  7ff32b804bc0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0275e 1 1 0 0 0    EITHER    => [ 7ff32b804a40 7ff32b804ba0 ] (array memory at 1015e2700)
  7ff32b804be0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020275e 1 1 0 0 0    EITHER    => [ 7ff32b804a20 7ff32b804bc0 ] (array memory at 1015e2720)
  7ff32b804c00 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040275e 1 1 0 0 0    EITHER    => [ 7ff32b804a00 7ff32b804be0 ] (array memory at 1015e2740)
  7ff32b804c20 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060275e 1 1 0 0 0    EITHER    => [ 7ff32b8049e0 7ff32b804c00 ] (array memory at 1015e2760)
  7ff32b804c40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080275e 1 1 0 0 0    EITHER    => [ 7ff32b8049c0 7ff32b804c20 ] (array memory at 1015e2780)
  7ff32b804c60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0275e 1 1 0 0 0    EITHER    => [ 7ff32b8049a0 7ff32b804c40 ] (array memory at 1015e27a0)
  7ff32b804c80 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0275e 1 1 0 0 0    EITHER    => [ 7ff32b804980 7ff32b804c60 ] (array memory at 1015e27c0)
  7ff32b804ca0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0275e 1 1 0 0 0    EITHER    => [ 7ff32b804960 7ff32b804c80 ] (array memory at 1015e27e0)
  7ff32b804cc0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0285e 1 1 0 0 0    EITHER    => [ 7ff32b804940 7ff32b804ca0 ] (array memory at 1015e2800)
  7ff32b804ce0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020285e 1 1 0 0 0    EITHER    => [ 7ff32b804920 7ff32b804cc0 ] (array memory at 1015e2820)
  7ff32b804d00 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040285e 1 1 0 0 0    EITHER    => [ 7ff32b804900 7ff32b804ce0 ] (array memory at 1015e2840)
  7ff32b804d20 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060285e 1 1 0 0 0    EITHER    => [ 7ff32b8048e0 7ff32b804d00 ] (array memory at 1015e2860)
  7ff32b804d40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080285e 1 1 0 0 0    EITHER    => [ 7ff32b8048c0 7ff32b804d20 ] (array memory at 1015e2880)
  7ff32b804d60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0285e 1 1 0 0 0    EITHER    => [ 7ff32b8048a0 7ff32b804d40 ] (array memory at 1015e28a0)
  7ff32b804d80 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0285e 1 1 0 0 0    EITHER    => [ 7ff32b804880 7ff32b804d60 ] (array memory at 1015e28c0)
  7ff32b804da0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 05a7b47 1 1 0 0 0   LITERAL   'this' (string memory at 101477b5a)
  7ff32b804dc0 |  2 0 0 0 0 0 0 015 0 0 0 0 0 0 0607b47 1 1 0 0 0      TREF   'templateTypeParameter' at 7ff32b804580 (string memory at 101477b60)
  7ff32b804de0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0285e 1 1 0 0 0  SEQUENCE    => [ 7ff32b804da0 7ff32b804dc0 ] (array memory at 1015e28e0)
  7ff32b804e00 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 09b7b47 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101477b9b)
  7ff32b804e20 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0a77b47 1 1 0 0 0   LITERAL   '...' (string memory at 101477ba7)
  7ff32b804e40 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0295e 1 1 0 0 0  SEQUENCE    => [ 7ff32b804e00 7ff32b804e20 ] (array memory at 1015e2900)
  7ff32b804e60 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0d07b47 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101477bd0)
  7ff32b804e80 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0dd7b47 1 1 0 0 0   LITERAL   ':' (string memory at 101477bdd)
  7ff32b804ea0 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0e07b47 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 101477be0)
  7ff32b804ec0 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020295e 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b804e80 7ff32b804ea0 ] (array memory at 1015e2920)
  7ff32b804ee0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e97b47 1 1 0 0 0   LITERAL   '=' (string memory at 101477be9)
  7ff32b804f00 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0ec7b47 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 101477bec)
  7ff32b804f20 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060295e 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b804ee0 7ff32b804f00 ] (array memory at 1015e2960)
  7ff32b804f40 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 040295e 1 1 0 0 0  SEQUENCE    => [ 7ff32b804e60 7ff32b804ec0 7ff32b804f20 ] (array memory at 1015e2940)
  7ff32b804f60 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0187c47 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 101477c18)
  7ff32b804f80 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 01d7c47 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101477c1d)
  7ff32b804fa0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 02a7c47 1 1 0 0 0   LITERAL   ':' (string memory at 101477c2a)
  7ff32b804fc0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 02d7c47 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 101477c2d)
  7ff32b804fe0 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0295e 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b804fa0 7ff32b804fc0 ] (array memory at 1015e29a0)
  7ff32b805000 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0315e 1 1 0 0 0    EITHER    => [ 7ff32b805620 ] (array memory at 1015e3100)
  7ff32b805020 | 12 0 0 0 0 0 0 01d 0 0 0 0 0 0 0407c47 1 1 0 0 0      TREF ? 'templateValueParameterDefault' at 7ff32b805000 (string memory at 101477c40)
  7ff32b805040 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 040f55d 1 1 0 0 0  SEQUENCE    => [ 7ff32b804f60 7ff32b804f80 7ff32b804fe0 7ff32b805020 ] (array memory at 1015df540)
  7ff32b805060 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 08e7c47 1 1 0 0 0   LITERAL   '=' (string memory at 101477c8e)
  7ff32b805080 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0927c47 1 1 0 0 0   LITERAL   '__DATE__' (string memory at 101477c92)
  7ff32b8050a0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0295e 1 1 0 0 0  SEQUENCE    => [ 7ff32b805060 7ff32b805080 ] (array memory at 1015e29e0)
  7ff32b8050c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a47c47 1 1 0 0 0   LITERAL   '=' (string memory at 101477ca4)
  7ff32b8050e0 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0a87c47 1 1 0 0 0   LITERAL   '__FILE__' (string memory at 101477ca8)
  7ff32b805100 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 02a5e 1 1 0 0 0  SEQUENCE    => [ 7ff32b8050c0 7ff32b8050e0 ] (array memory at 1015e2a00)
  7ff32b805120 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0ba7c47 1 1 0 0 0   LITERAL   '=' (string memory at 101477cba)
  7ff32b805140 |  1 0 0 0 0 0 0 012 0 0 0 0 0 0 0be7c47 1 1 0 0 0   LITERAL   '__FILE_FULL_PATH__' (string memory at 101477cbe)
  7ff32b805160 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0202a5e 1 1 0 0 0  SEQUENCE    => [ 7ff32b805120 7ff32b805140 ] (array memory at 1015e2a20)
  7ff32b805180 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0da7c47 1 1 0 0 0   LITERAL   '=' (string memory at 101477cda)
  7ff32b8051a0 |  1 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0de7c47 1 1 0 0 0   LITERAL   '__FUNCTION__' (string memory at 101477cde)
  7ff32b8051c0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0402a5e 1 1 0 0 0  SEQUENCE    => [ 7ff32b805180 7ff32b8051a0 ] (array memory at 1015e2a40)
  7ff32b8051e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f47c47 1 1 0 0 0   LITERAL   '=' (string memory at 101477cf4)
  7ff32b805200 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0f87c47 1 1 0 0 0   LITERAL   '__LINE__' (string memory at 101477cf8)
  7ff32b805220 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0602a5e 1 1 0 0 0  SEQUENCE    => [ 7ff32b8051e0 7ff32b805200 ] (array memory at 1015e2a60)
  7ff32b805240 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 a7d47 1 1 0 0 0   LITERAL   '=' (string memory at 101477d0a)
  7ff32b805260 |  1 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0 e7d47 1 1 0 0 0   LITERAL   '__MODULE__' (string memory at 101477d0e)
  7ff32b805280 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0802a5e 1 1 0 0 0  SEQUENCE    => [ 7ff32b805240 7ff32b805260 ] (array memory at 1015e2a80)
  7ff32b8052a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0227d47 1 1 0 0 0   LITERAL   '=' (string memory at 101477d22)
  7ff32b8052c0 |  1 0 0 0 0 0 0 013 0 0 0 0 0 0 0267d47 1 1 0 0 0   LITERAL   '__PRETTY_FUNCTION__' (string memory at 101477d26)
  7ff32b8052e0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a02a5e 1 1 0 0 0  SEQUENCE    => [ 7ff32b8052a0 7ff32b8052c0 ] (array memory at 1015e2aa0)
  7ff32b805300 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0437d47 1 1 0 0 0   LITERAL   '=' (string memory at 101477d43)
  7ff32b805320 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0477d47 1 1 0 0 0   LITERAL   '__TIME__' (string memory at 101477d47)
  7ff32b805340 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c02a5e 1 1 0 0 0  SEQUENCE    => [ 7ff32b805300 7ff32b805320 ] (array memory at 1015e2ac0)
  7ff32b805360 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0597d47 1 1 0 0 0   LITERAL   '=' (string memory at 101477d59)
  7ff32b805380 |  1 0 0 0 0 0 0 0 d 0 0 0 0 0 0 05d7d47 1 1 0 0 0   LITERAL   '__TIMESTAMP__' (string memory at 101477d5d)
  7ff32b8053a0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e02a5e 1 1 0 0 0  SEQUENCE    => [ 7ff32b805360 7ff32b805380 ] (array memory at 1015e2ae0)
  7ff32b8053c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0747d47 1 1 0 0 0   LITERAL   '=' (string memory at 101477d74)
  7ff32b8053e0 |  1 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0787d47 1 1 0 0 0   LITERAL   '__VENDOR__' (string memory at 101477d78)
  7ff32b805400 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 02b5e 1 1 0 0 0  SEQUENCE    => [ 7ff32b8053c0 7ff32b8053e0 ] (array memory at 1015e2b00)
  7ff32b805420 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 08c7d47 1 1 0 0 0   LITERAL   '=' (string memory at 101477d8c)
  7ff32b805440 |  1 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0907d47 1 1 0 0 0   LITERAL   '__VERSION__' (string memory at 101477d90)
  7ff32b805460 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0202b5e 1 1 0 0 0  SEQUENCE    => [ 7ff32b805420 7ff32b805440 ] (array memory at 1015e2b20)
  7ff32b805480 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a57d47 1 1 0 0 0   LITERAL   '=' (string memory at 101477da5)
  7ff32b8054a0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0a87d47 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 101477da8)
  7ff32b8054c0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0402b5e 1 1 0 0 0  SEQUENCE    => [ 7ff32b805480 7ff32b8054a0 ] (array memory at 1015e2b40)
  7ff32b8054e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0602b5e 1 1 0 0 0    EITHER    => [ 7ff32b805460 7ff32b8054c0 ] (array memory at 1015e2b60)
  7ff32b805500 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0802b5e 1 1 0 0 0    EITHER    => [ 7ff32b805400 7ff32b8054e0 ] (array memory at 1015e2b80)
  7ff32b805520 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a02b5e 1 1 0 0 0    EITHER    => [ 7ff32b8053a0 7ff32b805500 ] (array memory at 1015e2ba0)
  7ff32b805540 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c02b5e 1 1 0 0 0    EITHER    => [ 7ff32b805340 7ff32b805520 ] (array memory at 1015e2bc0)
  7ff32b805560 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e02b5e 1 1 0 0 0    EITHER    => [ 7ff32b8052e0 7ff32b805540 ] (array memory at 1015e2be0)
  7ff32b805580 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 02c5e 1 1 0 0 0    EITHER    => [ 7ff32b805280 7ff32b805560 ] (array memory at 1015e2c00)
  7ff32b8055a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0202c5e 1 1 0 0 0    EITHER    => [ 7ff32b805220 7ff32b805580 ] (array memory at 1015e2c20)
  7ff32b8055c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0402c5e 1 1 0 0 0    EITHER    => [ 7ff32b8051c0 7ff32b8055a0 ] (array memory at 1015e2c40)
  7ff32b8055e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0602c5e 1 1 0 0 0    EITHER    => [ 7ff32b805160 7ff32b8055c0 ] (array memory at 1015e2c60)
  7ff32b805600 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0802c5e 1 1 0 0 0    EITHER    => [ 7ff32b805100 7ff32b8055e0 ] (array memory at 1015e2c80)
  7ff32b805620 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a02c5e 1 1 0 0 0    EITHER    => [ 7ff32b8050a0 7ff32b805600 ] (array memory at 1015e2ca0)
  7ff32b805640 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0d97d47 1 1 0 0 0      TREF   'orOrExpression' at 7ff32b800240 (string memory at 101477dd9)
  7ff32b805660 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0ea7d47 1 1 0 0 0   LITERAL   '?' (string memory at 101477dea)
  7ff32b805680 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0ed7d47 1 1 0 0 0      TREF   'expression' at 7ff32a801d40 (string memory at 101477ded)
  7ff32b8056a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0f97d47 1 1 0 0 0   LITERAL   ':' (string memory at 101477df9)
  7ff32b8056c0 |  2 0 0 0 0 0 0 011 0 0 0 0 0 0 0fc7d47 1 1 0 0 0      TREF   'ternaryExpression' at 7ff32a02a2e0 (string memory at 101477dfc)
  7ff32b8056e0 | 14 0 0 0 0 0 0 0 4 0 0 0 0 0 0 070f55d 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b805660 7ff32b805680 7ff32b8056a0 7ff32b8056c0 ] (array memory at 1015df570)
  7ff32b805700 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e02c5e 1 1 0 0 0  SEQUENCE    => [ 7ff32b805640 7ff32b8056e0 ] (array memory at 1015e2ce0)
  7ff32b805720 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 02e7e47 1 1 0 0 0   LITERAL   'throw' (string memory at 101477e2e)
  7ff32b805740 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0357e47 1 1 0 0 0      TREF   'expression' at 7ff32a801d40 (string memory at 101477e35)
  7ff32b805760 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0417e47 1 1 0 0 0   LITERAL   ';' (string memory at 101477e41)
  7ff32b805780 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 02d5e 1 1 0 0 0  SEQUENCE    => [ 7ff32b805720 7ff32b805740 7ff32b805760 ] (array memory at 1015e2d00)
  7ff32b8057a0 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0647e47 1 1 0 0 0   LITERAL   '__traits' (string memory at 101477e64)
  7ff32b8057c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 06f7e47 1 1 0 0 0   LITERAL   '(' (string memory at 101477e6f)
  7ff32b8057e0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0727e47 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101477e72)
  7ff32b805800 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 07e7e47 1 1 0 0 0   LITERAL   ',' (string memory at 101477e7e)
  7ff32b805820 |  2 0 0 0 0 0 0 014 0 0 0 0 0 0 0817e47 1 1 0 0 0      TREF   'templateArgumentList' at 7ff32b804220 (string memory at 101477e81)
  7ff32b805840 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0977e47 1 1 0 0 0   LITERAL   ')' (string memory at 101477e97)
  7ff32b805860 |  4 0 0 0 0 0 0 0 6 0 0 0 0 0 0 080cb5c 1 1 0 0 0  SEQUENCE    => [ 7ff32b8057a0 7ff32b8057c0 7ff32b8057e0 7ff32b805800 7ff32b805820 7ff32b805840 ] (array memory at 1015ccb80)
  7ff32b805880 |  1 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0b67e47 1 1 0 0 0   LITERAL   'try' (string memory at 101477eb6)
  7ff32b8058a0 |  2 0 0 0 0 0 0 016 0 0 0 0 0 0 0bb7e47 1 1 0 0 0      TREF   'declarationOrStatement' at 7ff32a800760 (string memory at 101477ebb)
  7ff32b8058c0 |  2 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0d37e47 1 1 0 0 0      TREF   'catches' at 7ff32a8008a0 (string memory at 101477ed3)
  7ff32b8058e0 |  2 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0dd7e47 1 1 0 0 0      TREF   'catches' at 7ff32a8008a0 (string memory at 101477edd)
  7ff32b805900 |  2 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0e57e47 1 1 0 0 0      TREF   'finally' at 7ff32a803ea0 (string memory at 101477ee5)
  7ff32b805920 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0602d5e 1 1 0 0 0  SEQUENCE    => [ 7ff32b8058e0 7ff32b805900 ] (array memory at 1015e2d60)
  7ff32b805940 |  2 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0ef7e47 1 1 0 0 0      TREF   'finally' at 7ff32a803ea0 (string memory at 101477eef)
  7ff32b805960 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0802d5e 1 1 0 0 0    EITHER    => [ 7ff32b805920 7ff32b805940 ] (array memory at 1015e2d80)
  7ff32b805980 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a02d5e 1 1 0 0 0    EITHER    => [ 7ff32b8058c0 7ff32b805960 ] (array memory at 1015e2da0)
  7ff32b8059a0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0402d5e 1 1 0 0 0  SEQUENCE    => [ 7ff32b805880 7ff32b8058a0 7ff32b805980 ] (array memory at 1015e2d40)
  7ff32b8059c0 | 12 0 0 0 0 0 0 010 0 0 0 0 0 0 0 b7f47 1 1 0 0 0      TREF ? 'typeConstructors' at 7ff32b001e00 (string memory at 101477f0b)
  7ff32b8059e0 |  2 0 0 0 0 0 0 0 5 0 0 0 0 0 0 01d7f47 1 1 0 0 0      TREF   'type2' at 7ff32a02b5e0 (string memory at 101477f1d)
  7ff32b805a00 |  8 0 0 0 0 0 0 0 1 0 0 0 0 0 0 030355e 1 1 0 0 0    EITHER    => [ 7ff32b8066a0 ] (array memory at 1015e3530)
  7ff32b805a20 | 32 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0237f47 1 1 0 0 0      TREF * 'typeSuffix' at 7ff32b805a00 (string memory at 101477f23)
  7ff32b805a40 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0c02d5e 1 1 0 0 0  SEQUENCE    => [ 7ff32b8059c0 7ff32b8059e0 7ff32b805a20 ] (array memory at 1015e2dc0)
  7ff32b805a60 |  2 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0457f47 1 1 0 0 0      TREF   'builtinType' at 7ff32a800060 (string memory at 101477f45)
  7ff32b805a80 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 0587f47 1 1 0 0 0      TREF   'typeIdentifierPart' at 7ff32b0017a0 (string memory at 101477f58)
  7ff32b805aa0 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0737f47 1 1 0 0 0   LITERAL   'super' (string memory at 101477f73)
  7ff32b805ac0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 07b7f47 1 1 0 0 0   LITERAL   '.' (string memory at 101477f7b)
  7ff32b805ae0 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 07e7f47 1 1 0 0 0      TREF   'typeIdentifierPart' at 7ff32b0017a0 (string memory at 101477f7e)
  7ff32b805b00 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 02e5e 1 1 0 0 0  SEQUENCE    => [ 7ff32b805aa0 7ff32b805ac0 7ff32b805ae0 ] (array memory at 1015e2e00)
  7ff32b805b20 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0997f47 1 1 0 0 0   LITERAL   'this' (string memory at 101477f99)
  7ff32b805b40 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0a07f47 1 1 0 0 0   LITERAL   '.' (string memory at 101477fa0)
  7ff32b805b60 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 0a37f47 1 1 0 0 0      TREF   'typeIdentifierPart' at 7ff32b0017a0 (string memory at 101477fa3)
  7ff32b805b80 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0202e5e 1 1 0 0 0  SEQUENCE    => [ 7ff32b805b20 7ff32b805b40 7ff32b805b60 ] (array memory at 1015e2e20)
  7ff32b805ba0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0bd7f47 1 1 0 0 0      TREF   'typeofExpression' at 7ff32b004100 (string memory at 101477fbd)
  7ff32b805bc0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d07f47 1 1 0 0 0   LITERAL   '.' (string memory at 101477fd0)
  7ff32b805be0 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 0d37f47 1 1 0 0 0      TREF   'typeIdentifierPart' at 7ff32b0017a0 (string memory at 101477fd3)
  7ff32b805c00 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0402e5e 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b805bc0 7ff32b805be0 ] (array memory at 1015e2e40)
  7ff32b805c20 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0602e5e 1 1 0 0 0  SEQUENCE    => [ 7ff32b805ba0 7ff32b805c00 ] (array memory at 1015e2e60)
  7ff32b805c40 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0ef7f47 1 1 0 0 0      TREF   'typeConstructor' at 7ff32b0000e0 (string memory at 101477fef)
  7ff32b805c60 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 08047 1 1 0 0 0   LITERAL   '(' (string memory at 101478000)
  7ff32b805c80 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 38047 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 101478003)
  7ff32b805ca0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 98047 1 1 0 0 0   LITERAL   ')' (string memory at 101478009)
  7ff32b805cc0 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0d0f55d 1 1 0 0 0  SEQUENCE    => [ 7ff32b805c40 7ff32b805c60 7ff32b805c80 7ff32b805ca0 ] (array memory at 1015df5d0)
  7ff32b805ce0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0138047 1 1 0 0 0      TREF   'traitsExpression' at 7ff32b8014c0 (string memory at 101478013)
  7ff32b805d00 |  2 0 0 0 0 0 0 0 6 0 0 0 0 0 0 02b8047 1 1 0 0 0      TREF   'vector' at 7ff32b801380 (string memory at 10147802b)
  7ff32b805d20 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0398047 1 1 0 0 0      TREF   'mixinExpression' at 7ff32b003ec0 (string memory at 101478039)
  7ff32b805d40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a02e5e 1 1 0 0 0    EITHER    => [ 7ff32b805d00 7ff32b805d20 ] (array memory at 1015e2ea0)
  7ff32b805d60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c02e5e 1 1 0 0 0    EITHER    => [ 7ff32b805ce0 7ff32b805d40 ] (array memory at 1015e2ec0)
  7ff32b805d80 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e02e5e 1 1 0 0 0    EITHER    => [ 7ff32b805cc0 7ff32b805d60 ] (array memory at 1015e2ee0)
  7ff32b805da0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 02f5e 1 1 0 0 0    EITHER    => [ 7ff32b805c20 7ff32b805d80 ] (array memory at 1015e2f00)
  7ff32b805dc0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0202f5e 1 1 0 0 0    EITHER    => [ 7ff32b805b80 7ff32b805da0 ] (array memory at 1015e2f20)
  7ff32b805de0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0402f5e 1 1 0 0 0    EITHER    => [ 7ff32b805b00 7ff32b805dc0 ] (array memory at 1015e2f40)
  7ff32b805e00 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0602f5e 1 1 0 0 0    EITHER    => [ 7ff32b805a80 7ff32b805de0 ] (array memory at 1015e2f60)
  7ff32b805e20 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0802f5e 1 1 0 0 0    EITHER    => [ 7ff32b805a60 7ff32b805e00 ] (array memory at 1015e2f80)
  7ff32b805e40 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 06a8047 1 1 0 0 0   LITERAL   'const' (string memory at 10147806a)
  7ff32b805e60 |  1 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0798047 1 1 0 0 0   LITERAL   'immutable' (string memory at 101478079)
  7ff32b805e80 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 08c8047 1 1 0 0 0   LITERAL   'inout' (string memory at 10147808c)
  7ff32b805ea0 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 09b8047 1 1 0 0 0   LITERAL   'shared' (string memory at 10147809b)
  7ff32b805ec0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a02f5e 1 1 0 0 0    EITHER    => [ 7ff32b805e80 7ff32b805ea0 ] (array memory at 1015e2fa0)
  7ff32b805ee0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c02f5e 1 1 0 0 0    EITHER    => [ 7ff32b805e60 7ff32b805ec0 ] (array memory at 1015e2fc0)
  7ff32b805f00 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e02f5e 1 1 0 0 0    EITHER    => [ 7ff32b805e40 7ff32b805ee0 ] (array memory at 1015e2fe0)
  7ff32b805f20 | 22 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0c28047 1 1 0 0 0      TREF + 'typeConstructor' at 7ff32b0000e0 (string memory at 1014780c2)
  7ff32b805f40 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0f68047 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 1014780f6)
  7ff32b805f60 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 38147 1 1 0 0 0   LITERAL   'struct' (string memory at 101478103)
  7ff32b805f80 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0138147 1 1 0 0 0   LITERAL   'union' (string memory at 101478113)
  7ff32b805fa0 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0228147 1 1 0 0 0   LITERAL   'class' (string memory at 101478122)
  7ff32b805fc0 |  1 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0318147 1 1 0 0 0   LITERAL   'interface' (string memory at 101478131)
  7ff32b805fe0 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0448147 1 1 0 0 0   LITERAL   'enum' (string memory at 101478144)
  7ff32b806000 |  1 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0528147 1 1 0 0 0   LITERAL   '_vector' (string memory at 101478152)
  7ff32b806020 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0638147 1 1 0 0 0   LITERAL   'function' (string memory at 101478163)
  7ff32b806040 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0758147 1 1 0 0 0   LITERAL   'delegate' (string memory at 101478175)
  7ff32b806060 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0878147 1 1 0 0 0   LITERAL   'super' (string memory at 101478187)
  7ff32b806080 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0968147 1 1 0 0 0   LITERAL   'const' (string memory at 101478196)
  7ff32b8060a0 |  1 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0a58147 1 1 0 0 0   LITERAL   'immutable' (string memory at 1014781a5)
  7ff32b8060c0 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0b88147 1 1 0 0 0   LITERAL   'inout' (string memory at 1014781b8)
  7ff32b8060e0 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0c78147 1 1 0 0 0   LITERAL   'shared' (string memory at 1014781c7)
  7ff32b806100 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0d78147 1 1 0 0 0   LITERAL   'return' (string memory at 1014781d7)
  7ff32b806120 |  1 0 0 0 0 0 0 0 b 0 0 0 0 0 0 0e78147 1 1 0 0 0   LITERAL   '_parameters' (string memory at 1014781e7)
  7ff32b806140 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0fc8147 1 1 0 0 0   LITERAL   'module' (string memory at 1014781fc)
  7ff32b806160 |  1 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0 c8247 1 1 0 0 0   LITERAL   'package' (string memory at 10147820c)
  7ff32b806180 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0405e 1 1 0 0 0    EITHER    => [ 7ff32b806140 7ff32b806160 ] (array memory at 1015e4000)
  7ff32b8061a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020405e 1 1 0 0 0    EITHER    => [ 7ff32b806120 7ff32b806180 ] (array memory at 1015e4020)
  7ff32b8061c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040405e 1 1 0 0 0    EITHER    => [ 7ff32b806100 7ff32b8061a0 ] (array memory at 1015e4040)
  7ff32b8061e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060405e 1 1 0 0 0    EITHER    => [ 7ff32b8060e0 7ff32b8061c0 ] (array memory at 1015e4060)
  7ff32b806200 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080405e 1 1 0 0 0    EITHER    => [ 7ff32b8060c0 7ff32b8061e0 ] (array memory at 1015e4080)
  7ff32b806220 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0405e 1 1 0 0 0    EITHER    => [ 7ff32b8060a0 7ff32b806200 ] (array memory at 1015e40a0)
  7ff32b806240 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0405e 1 1 0 0 0    EITHER    => [ 7ff32b806080 7ff32b806220 ] (array memory at 1015e40c0)
  7ff32b806260 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0405e 1 1 0 0 0    EITHER    => [ 7ff32b806060 7ff32b806240 ] (array memory at 1015e40e0)
  7ff32b806280 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0415e 1 1 0 0 0    EITHER    => [ 7ff32b806040 7ff32b806260 ] (array memory at 1015e4100)
  7ff32b8062a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020415e 1 1 0 0 0    EITHER    => [ 7ff32b806020 7ff32b806280 ] (array memory at 1015e4120)
  7ff32b8062c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040415e 1 1 0 0 0    EITHER    => [ 7ff32b806000 7ff32b8062a0 ] (array memory at 1015e4140)
  7ff32b8062e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060415e 1 1 0 0 0    EITHER    => [ 7ff32b805fe0 7ff32b8062c0 ] (array memory at 1015e4160)
  7ff32b806300 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080415e 1 1 0 0 0    EITHER    => [ 7ff32b805fc0 7ff32b8062e0 ] (array memory at 1015e4180)
  7ff32b806320 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0415e 1 1 0 0 0    EITHER    => [ 7ff32b805fa0 7ff32b806300 ] (array memory at 1015e41a0)
  7ff32b806340 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0415e 1 1 0 0 0    EITHER    => [ 7ff32b805f80 7ff32b806320 ] (array memory at 1015e41c0)
  7ff32b806360 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0415e 1 1 0 0 0    EITHER    => [ 7ff32b805f60 7ff32b806340 ] (array memory at 1015e41e0)
  7ff32b806380 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0425e 1 1 0 0 0    EITHER    => [ 7ff32b805f40 7ff32b806360 ] (array memory at 1015e4200)
  7ff32b8063a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0318247 1 1 0 0 0   LITERAL   '*' (string memory at 101478231)
  7ff32b8063c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 03c8247 1 1 0 0 0   LITERAL   '[' (string memory at 10147823c)
  7ff32b8063e0 | 12 0 0 0 0 0 0 0 4 0 0 0 0 0 0 03f8247 1 1 0 0 0      TREF ? 'type' at 7ff32a0276e0 (string memory at 10147823f)
  7ff32b806400 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0468247 1 1 0 0 0   LITERAL   ']' (string memory at 101478246)
  7ff32b806420 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 020425e 1 1 0 0 0  SEQUENCE    => [ 7ff32b8063c0 7ff32b8063e0 7ff32b806400 ] (array memory at 1015e4220)
  7ff32b806440 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0518247 1 1 0 0 0   LITERAL   '[' (string memory at 101478251)
  7ff32b806460 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0548247 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 101478254)
  7ff32b806480 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0668247 1 1 0 0 0   LITERAL   ']' (string memory at 101478266)
  7ff32b8064a0 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 040425e 1 1 0 0 0  SEQUENCE    => [ 7ff32b806440 7ff32b806460 7ff32b806480 ] (array memory at 1015e4240)
  7ff32b8064c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0718247 1 1 0 0 0   LITERAL   '[' (string memory at 101478271)
  7ff32b8064e0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0748247 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 101478274)
  7ff32b806500 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0868247 1 1 0 0 0   LITERAL   '..' (string memory at 101478286)
  7ff32b806520 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 08b8247 1 1 0 0 0      TREF   'assignExpression' at 7ff32a027d80 (string memory at 10147828b)
  7ff32b806540 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 09d8247 1 1 0 0 0   LITERAL   ']' (string memory at 10147829d)
  7ff32b806560 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 0f65d 1 1 0 0 0  SEQUENCE    => [ 7ff32b8064c0 7ff32b8064e0 7ff32b806500 7ff32b806520 7ff32b806540 ] (array memory at 1015df600)
  7ff32b806580 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0a98247 1 1 0 0 0   LITERAL   'delegate' (string memory at 1014782a9)
  7ff32b8065a0 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0b68247 1 1 0 0 0   LITERAL   'function' (string memory at 1014782b6)
  7ff32b8065c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080425e 1 1 0 0 0    EITHER    => [ 7ff32b806580 7ff32b8065a0 ] (array memory at 1015e4280)
  7ff32b8065e0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0c18247 1 1 0 0 0      TREF   'parameters' at 7ff32a027860 (string memory at 1014782c1)
  7ff32b806600 | 32 0 0 0 0 0 0 017 0 0 0 0 0 0 0cc8247 1 1 0 0 0      TREF * 'memberFunctionAttribute' at 7ff32a027b20 (string memory at 1014782cc)
  7ff32b806620 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0a0425e 1 1 0 0 0  SEQUENCE    => [ 7ff32b8065c0 7ff32b8065e0 7ff32b806600 ] (array memory at 1015e42a0)
  7ff32b806640 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0425e 1 1 0 0 0    EITHER    => [ 7ff32b806560 7ff32b806620 ] (array memory at 1015e42c0)
  7ff32b806660 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0425e 1 1 0 0 0    EITHER    => [ 7ff32b8064a0 7ff32b806640 ] (array memory at 1015e42e0)
  7ff32b806680 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0435e 1 1 0 0 0    EITHER    => [ 7ff32b806420 7ff32b806660 ] (array memory at 1015e4300)
  7ff32b8066a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020435e 1 1 0 0 0    EITHER    => [ 7ff32b8063a0 7ff32b806680 ] (array memory at 1015e4320)
  7ff32b8066c0 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 58347 1 1 0 0 0   LITERAL   'typeid' (string memory at 101478305)
  7ff32b8066e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 e8347 1 1 0 0 0   LITERAL   '(' (string memory at 10147830e)
  7ff32b806700 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0128347 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 101478312)
  7ff32b806720 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0198347 1 1 0 0 0      TREF   'expression' at 7ff32a801d40 (string memory at 101478319)
  7ff32b806740 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060435e 1 1 0 0 0    EITHER    => [ 7ff32b806700 7ff32b806720 ] (array memory at 1015e4360)
  7ff32b806760 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0268347 1 1 0 0 0   LITERAL   ')' (string memory at 101478326)
  7ff32b806780 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 030f65d 1 1 0 0 0  SEQUENCE    => [ 7ff32b8066c0 7ff32b8066e0 7ff32b806740 7ff32b806760 ] (array memory at 1015df630)
  7ff32b8067a0 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0498347 1 1 0 0 0   LITERAL   'typeof' (string memory at 101478349)
  7ff32b8067c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0528347 1 1 0 0 0   LITERAL   '(' (string memory at 101478352)
  7ff32b8067e0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0568347 1 1 0 0 0      TREF   'expression' at 7ff32a801d40 (string memory at 101478356)
  7ff32b806800 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0648347 1 1 0 0 0   LITERAL   'return' (string memory at 101478364)
  7ff32b806820 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0435e 1 1 0 0 0    EITHER    => [ 7ff32b8067e0 7ff32b806800 ] (array memory at 1015e43a0)
  7ff32b806840 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 06e8347 1 1 0 0 0   LITERAL   ')' (string memory at 10147836e)
  7ff32b806860 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 060f65d 1 1 0 0 0  SEQUENCE    => [ 7ff32b8067a0 7ff32b8067c0 7ff32b806820 7ff32b806840 ] (array memory at 1015df660)
  7ff32b806880 |  2 0 0 0 0 0 0 011 0 0 0 0 0 0 0918347 1 1 0 0 0      TREF   'primaryExpression' at 7ff32b801c80 (string memory at 101478391)
  7ff32b8068a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0ab8347 1 1 0 0 0   LITERAL   '&' (string memory at 1014783ab)
  7ff32b8068c0 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0ae8347 1 1 0 0 0      TREF   'unaryExpression' at 7ff32a800360 (string memory at 1014783ae)
  7ff32b8068e0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0435e 1 1 0 0 0  SEQUENCE    => [ 7ff32b8068a0 7ff32b8068c0 ] (array memory at 1015e43c0)
  7ff32b806900 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0c68347 1 1 0 0 0   LITERAL   '!' (string memory at 1014783c6)
  7ff32b806920 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0c98347 1 1 0 0 0      TREF   'unaryExpression' at 7ff32a800360 (string memory at 1014783c9)
  7ff32b806940 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0435e 1 1 0 0 0  SEQUENCE    => [ 7ff32b806900 7ff32b806920 ] (array memory at 1015e43e0)
  7ff32b806960 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e18347 1 1 0 0 0   LITERAL   '*' (string memory at 1014783e1)
  7ff32b806980 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0e48347 1 1 0 0 0      TREF   'unaryExpression' at 7ff32a800360 (string memory at 1014783e4)
  7ff32b8069a0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0445e 1 1 0 0 0  SEQUENCE    => [ 7ff32b806960 7ff32b806980 ] (array memory at 1015e4400)
  7ff32b8069c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0fc8347 1 1 0 0 0   LITERAL   '+' (string memory at 1014783fc)
  7ff32b8069e0 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0ff8347 1 1 0 0 0      TREF   'unaryExpression' at 7ff32a800360 (string memory at 1014783ff)
  7ff32b806a00 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020445e 1 1 0 0 0  SEQUENCE    => [ 7ff32b8069c0 7ff32b8069e0 ] (array memory at 1015e4420)
  7ff32b806a20 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0178447 1 1 0 0 0   LITERAL   '-' (string memory at 101478417)
  7ff32b806a40 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 01a8447 1 1 0 0 0      TREF   'unaryExpression' at 7ff32a800360 (string memory at 10147841a)
  7ff32b806a60 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040445e 1 1 0 0 0  SEQUENCE    => [ 7ff32b806a20 7ff32b806a40 ] (array memory at 1015e4440)
  7ff32b806a80 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0328447 1 1 0 0 0   LITERAL   '~' (string memory at 101478432)
  7ff32b806aa0 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0358447 1 1 0 0 0      TREF   'unaryExpression' at 7ff32a800360 (string memory at 101478435)
  7ff32b806ac0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060445e 1 1 0 0 0  SEQUENCE    => [ 7ff32b806a80 7ff32b806aa0 ] (array memory at 1015e4460)
  7ff32b806ae0 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 04d8447 1 1 0 0 0   LITERAL   '++' (string memory at 10147844d)
  7ff32b806b00 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0518447 1 1 0 0 0      TREF   'unaryExpression' at 7ff32a800360 (string memory at 101478451)
  7ff32b806b20 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080445e 1 1 0 0 0  SEQUENCE    => [ 7ff32b806ae0 7ff32b806b00 ] (array memory at 1015e4480)
  7ff32b806b40 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0698447 1 1 0 0 0   LITERAL   '--' (string memory at 101478469)
  7ff32b806b60 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 06d8447 1 1 0 0 0      TREF   'unaryExpression' at 7ff32a800360 (string memory at 10147846d)
  7ff32b806b80 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0445e 1 1 0 0 0  SEQUENCE    => [ 7ff32b806b40 7ff32b806b60 ] (array memory at 1015e44a0)
  7ff32b806ba0 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0848447 1 1 0 0 0      TREF   'newExpression' at 7ff32b0047a0 (string memory at 101478484)
  7ff32b806bc0 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0998447 1 1 0 0 0      TREF   'deleteExpression' at 7ff32a8030c0 (string memory at 101478499)
  7ff32b806be0 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0b18447 1 1 0 0 0      TREF   'castExpression' at 7ff32a8003c0 (string memory at 1014784b1)
  7ff32b806c00 |  2 0 0 0 0 0 0 010 0 0 0 0 0 0 0c78447 1 1 0 0 0      TREF   'assertExpression' at 7ff32a02a2c0 (string memory at 1014784c7)
  7ff32b806c20 |  2 0 0 0 0 0 0 016 0 0 0 0 0 0 0df8447 1 1 0 0 0      TREF   'functionCallExpression' at 7ff32b000560 (string memory at 1014784df)
  7ff32b806c40 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0fd8447 1 1 0 0 0      TREF   'indexExpression' at 7ff32b0026e0 (string memory at 1014784fd)
  7ff32b806c60 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0158547 1 1 0 0 0   LITERAL   '(' (string memory at 101478515)
  7ff32b806c80 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0188547 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 101478518)
  7ff32b806ca0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 01e8547 1 1 0 0 0   LITERAL   ')' (string memory at 10147851e)
  7ff32b806cc0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0228547 1 1 0 0 0   LITERAL   '.' (string memory at 101478522)
  7ff32b806ce0 |  2 0 0 0 0 0 0 01c 0 0 0 0 0 0 0258547 1 1 0 0 0      TREF   'identifierOrTemplateInstance' at 7ff32b001720 (string memory at 101478525)
  7ff32b806d00 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 090f65d 1 1 0 0 0  SEQUENCE    => [ 7ff32b806c60 7ff32b806c80 7ff32b806ca0 7ff32b806cc0 7ff32b806ce0 ] (array memory at 1015df690)
  7ff32b806d20 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0498547 1 1 0 0 0      TREF   'unaryExpression' at 7ff32a800360 (string memory at 101478549)
  7ff32b806d40 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 05a8547 1 1 0 0 0   LITERAL   '.' (string memory at 10147855a)
  7ff32b806d60 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 05d8547 1 1 0 0 0      TREF   'newExpression' at 7ff32b0047a0 (string memory at 10147855d)
  7ff32b806d80 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0e0445e 1 1 0 0 0  SEQUENCE    => [ 7ff32b806d20 7ff32b806d40 7ff32b806d60 ] (array memory at 1015e44e0)
  7ff32b806da0 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0728547 1 1 0 0 0      TREF   'unaryExpression' at 7ff32a800360 (string memory at 101478572)
  7ff32b806dc0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0838547 1 1 0 0 0   LITERAL   '.' (string memory at 101478583)
  7ff32b806de0 |  2 0 0 0 0 0 0 01c 0 0 0 0 0 0 0868547 1 1 0 0 0      TREF   'identifierOrTemplateInstance' at 7ff32b001720 (string memory at 101478586)
  7ff32b806e00 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0455e 1 1 0 0 0  SEQUENCE    => [ 7ff32b806da0 7ff32b806dc0 7ff32b806de0 ] (array memory at 1015e4500)
  7ff32b806e20 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0aa8547 1 1 0 0 0      TREF   'unaryExpression' at 7ff32a800360 (string memory at 1014785aa)
  7ff32b806e40 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0bb8547 1 1 0 0 0   LITERAL   '--' (string memory at 1014785bb)
  7ff32b806e60 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020455e 1 1 0 0 0  SEQUENCE    => [ 7ff32b806e20 7ff32b806e40 ] (array memory at 1015e4520)
  7ff32b806e80 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0c68547 1 1 0 0 0      TREF   'unaryExpression' at 7ff32a800360 (string memory at 1014785c6)
  7ff32b806ea0 |  1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0d78547 1 1 0 0 0   LITERAL   '++' (string memory at 1014785d7)
  7ff32b806ec0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040455e 1 1 0 0 0  SEQUENCE    => [ 7ff32b806e80 7ff32b806ea0 ] (array memory at 1015e4540)
  7ff32b806ee0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060455e 1 1 0 0 0    EITHER    => [ 7ff32b806e60 7ff32b806ec0 ] (array memory at 1015e4560)
  7ff32b806f00 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080455e 1 1 0 0 0    EITHER    => [ 7ff32b806e00 7ff32b806ee0 ] (array memory at 1015e4580)
  7ff32b806f20 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0455e 1 1 0 0 0    EITHER    => [ 7ff32b806d80 7ff32b806f00 ] (array memory at 1015e45a0)
  7ff32b806f40 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0455e 1 1 0 0 0    EITHER    => [ 7ff32b806d00 7ff32b806f20 ] (array memory at 1015e45c0)
  7ff32b806f60 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0455e 1 1 0 0 0    EITHER    => [ 7ff32b806c40 7ff32b806f40 ] (array memory at 1015e45e0)
  7ff32b806f80 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0465e 1 1 0 0 0    EITHER    => [ 7ff32b806c20 7ff32b806f60 ] (array memory at 1015e4600)
  7ff32b806fa0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020465e 1 1 0 0 0    EITHER    => [ 7ff32b806c00 7ff32b806f80 ] (array memory at 1015e4620)
  7ff32b806fc0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040465e 1 1 0 0 0    EITHER    => [ 7ff32b806be0 7ff32b806fa0 ] (array memory at 1015e4640)
  7ff32b806fe0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060465e 1 1 0 0 0    EITHER    => [ 7ff32b806bc0 7ff32b806fc0 ] (array memory at 1015e4660)
  7ff32b807000 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080465e 1 1 0 0 0    EITHER    => [ 7ff32b806ba0 7ff32b806fe0 ] (array memory at 1015e4680)
  7ff32b807020 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0465e 1 1 0 0 0    EITHER    => [ 7ff32b806b80 7ff32b807000 ] (array memory at 1015e46a0)
  7ff32b807040 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0465e 1 1 0 0 0    EITHER    => [ 7ff32b806b20 7ff32b807020 ] (array memory at 1015e46c0)
  7ff32b807060 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0465e 1 1 0 0 0    EITHER    => [ 7ff32b806ac0 7ff32b807040 ] (array memory at 1015e46e0)
  7ff32b807080 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0475e 1 1 0 0 0    EITHER    => [ 7ff32b806a60 7ff32b807060 ] (array memory at 1015e4700)
  7ff32b8070a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020475e 1 1 0 0 0    EITHER    => [ 7ff32b806a00 7ff32b807080 ] (array memory at 1015e4720)
  7ff32b8070c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040475e 1 1 0 0 0    EITHER    => [ 7ff32b8069a0 7ff32b8070a0 ] (array memory at 1015e4740)
  7ff32b8070e0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060475e 1 1 0 0 0    EITHER    => [ 7ff32b806940 7ff32b8070c0 ] (array memory at 1015e4760)
  7ff32b807100 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080475e 1 1 0 0 0    EITHER    => [ 7ff32b8068e0 7ff32b8070e0 ] (array memory at 1015e4780)
  7ff32b807120 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0475e 1 1 0 0 0    EITHER    => [ 7ff32b806880 7ff32b807100 ] (array memory at 1015e47a0)
  7ff32b807140 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0fd8547 1 1 0 0 0   LITERAL   'union' (string memory at 1014785fd)
  7ff32b807160 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0 48647 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 101478604)
  7ff32b807180 |  2 0 0 0 0 0 0 012 0 0 0 0 0 0 0108647 1 1 0 0 0      TREF   'templateParameters' at 7ff32a0279a0 (string memory at 101478610)
  7ff32b8071a0 | 12 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0238647 1 1 0 0 0      TREF ? 'constraint' at 7ff32a800aa0 (string memory at 101478623)
  7ff32b8071c0 | 14 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0e0475e 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b807180 7ff32b8071a0 ] (array memory at 1015e47e0)
  7ff32b8071e0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0328647 1 1 0 0 0      TREF   'structBody' at 7ff32a8009e0 (string memory at 101478632)
  7ff32b807200 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0408647 1 1 0 0 0   LITERAL   ';' (string memory at 101478640)
  7ff32b807220 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0485e 1 1 0 0 0    EITHER    => [ 7ff32b8071e0 7ff32b807200 ] (array memory at 1015e4800)
  7ff32b807240 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0c0f65d 1 1 0 0 0  SEQUENCE    => [ 7ff32b807140 7ff32b807160 7ff32b8071c0 7ff32b807220 ] (array memory at 1015df6c0)
  7ff32b807260 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 04c8647 1 1 0 0 0   LITERAL   'union' (string memory at 10147864c)
  7ff32b807280 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0538647 1 1 0 0 0      TREF   'structBody' at 7ff32a8009e0 (string memory at 101478653)
  7ff32b8072a0 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 020485e 1 1 0 0 0  SEQUENCE    => [ 7ff32b807260 7ff32b807280 ] (array memory at 1015e4820)
  7ff32b8072c0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040485e 1 1 0 0 0    EITHER    => [ 7ff32b807240 7ff32b8072a0 ] (array memory at 1015e4840)
  7ff32b8072e0 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0768647 1 1 0 0 0   LITERAL   'unittest' (string memory at 101478676)
  7ff32b807300 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0808647 1 1 0 0 0      TREF   'blockStatement' at 7ff32a02b520 (string memory at 101478680)
  7ff32b807320 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060485e 1 1 0 0 0  SEQUENCE    => [ 7ff32b8072e0 7ff32b807300 ] (array memory at 1015e4860)
  7ff32b807340 | 32 0 0 0 0 0 0 0 c 0 0 0 0 0 0 0b38647 1 1 0 0 0      TREF * 'storageClass' at 7ff32a0276a0 (string memory at 1014786b3)
  7ff32b807360 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0c18647 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 1014786c1)
  7ff32b807380 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0c68647 1 1 0 0 0      TREF   'declarator' at 7ff32a802f00 (string memory at 1014786c6)
  7ff32b8073a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0d38647 1 1 0 0 0   LITERAL   ',' (string memory at 1014786d3)
  7ff32b8073c0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0d68647 1 1 0 0 0      TREF   'declarator' at 7ff32a802f00 (string memory at 1014786d6)
  7ff32b8073e0 | 34 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0a0485e 1 1 0 0 0  SEQUENCE *  => [ 7ff32b8073a0 7ff32b8073c0 ] (array memory at 1015e48a0)
  7ff32b807400 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e48647 1 1 0 0 0   LITERAL   ';' (string memory at 1014786e4)
  7ff32b807420 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0f0f65d 1 1 0 0 0  SEQUENCE    => [ 7ff32b807340 7ff32b807360 7ff32b807380 7ff32b8073e0 7ff32b807400 ] (array memory at 1015df6f0)
  7ff32b807440 |  2 0 0 0 0 0 0 0 f 0 0 0 0 0 0 0ee8647 1 1 0 0 0      TREF   'autoDeclaration' at 7ff32a02b3a0 (string memory at 1014786ee)
  7ff32b807460 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0485e 1 1 0 0 0    EITHER    => [ 7ff32b807420 7ff32b807440 ] (array memory at 1015e48c0)
  7ff32b807480 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0148747 1 1 0 0 0   LITERAL   '__vector' (string memory at 101478714)
  7ff32b8074a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0208747 1 1 0 0 0   LITERAL   '(' (string memory at 101478720)
  7ff32b8074c0 |  2 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0238747 1 1 0 0 0      TREF   'type' at 7ff32a0276e0 (string memory at 101478723)
  7ff32b8074e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0298747 1 1 0 0 0   LITERAL   ')' (string memory at 101478729)
  7ff32b807500 | 14 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0e0485e 1 1 0 0 0  SEQUENCE ?  => [ 7ff32b8074a0 7ff32b8074c0 7ff32b8074e0 ] (array memory at 1015e48e0)
  7ff32b807520 |  4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0495e 1 1 0 0 0  SEQUENCE    => [ 7ff32b807480 7ff32b807500 ] (array memory at 1015e4900)
  7ff32b807540 |  1 0 0 0 0 0 0 0 7 0 0 0 0 0 0 04e8747 1 1 0 0 0   LITERAL   'version' (string memory at 10147874e)
  7ff32b807560 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0588747 1 1 0 0 0   LITERAL   '(' (string memory at 101478758)
  7ff32b807580 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 05c8747 1 1 0 0 0      TREF   'IntegerLiteral' at 7ff32a028a80 (string memory at 10147875c)
  7ff32b8075a0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 06d8747 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 10147876d)
  7ff32b8075c0 |  1 0 0 0 0 0 0 0 8 0 0 0 0 0 0 07b8747 1 1 0 0 0   LITERAL   'unittest' (string memory at 10147877b)
  7ff32b8075e0 |  1 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0888747 1 1 0 0 0   LITERAL   'assert' (string memory at 101478788)
  7ff32b807600 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 040495e 1 1 0 0 0    EITHER    => [ 7ff32b8075c0 7ff32b8075e0 ] (array memory at 1015e4940)
  7ff32b807620 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 060495e 1 1 0 0 0    EITHER    => [ 7ff32b8075a0 7ff32b807600 ] (array memory at 1015e4960)
  7ff32b807640 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 080495e 1 1 0 0 0    EITHER    => [ 7ff32b807580 7ff32b807620 ] (array memory at 1015e4980)
  7ff32b807660 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0928747 1 1 0 0 0   LITERAL   ')' (string memory at 101478792)
  7ff32b807680 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 020f75d 1 1 0 0 0  SEQUENCE    => [ 7ff32b807540 7ff32b807560 7ff32b807640 7ff32b807660 ] (array memory at 1015df720)
  7ff32b8076a0 |  1 0 0 0 0 0 0 0 7 0 0 0 0 0 0 0b98747 1 1 0 0 0   LITERAL   'version' (string memory at 1014787b9)
  7ff32b8076c0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0c38747 1 1 0 0 0   LITERAL   '=' (string memory at 1014787c3)
  7ff32b8076e0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0c78747 1 1 0 0 0      TREF   'Identifier' at 7ff32a027960 (string memory at 1014787c7)
  7ff32b807700 |  2 0 0 0 0 0 0 0 e 0 0 0 0 0 0 0d48747 1 1 0 0 0      TREF   'IntegerLiteral' at 7ff32a028a80 (string memory at 1014787d4)
  7ff32b807720 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0c0495e 1 1 0 0 0    EITHER    => [ 7ff32b8076e0 7ff32b807700 ] (array memory at 1015e49c0)
  7ff32b807740 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0e58747 1 1 0 0 0   LITERAL   ';' (string memory at 1014787e5)
  7ff32b807760 |  4 0 0 0 0 0 0 0 4 0 0 0 0 0 0 050f75d 1 1 0 0 0  SEQUENCE    => [ 7ff32b8076a0 7ff32b8076c0 7ff32b807720 7ff32b807740 ] (array memory at 1015df750)
  7ff32b807780 |  1 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0 68847 1 1 0 0 0   LITERAL   'while' (string memory at 101478806)
  7ff32b8077a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 e8847 1 1 0 0 0   LITERAL   '(' (string memory at 10147880e)
  7ff32b8077c0 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 0118847 1 1 0 0 0      TREF   'expression' at 7ff32a801d40 (string memory at 101478811)
  7ff32b8077e0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 01d8847 1 1 0 0 0   LITERAL   ')' (string memory at 10147881d)
  7ff32b807800 |  2 0 0 0 0 0 0 016 0 0 0 0 0 0 0208847 1 1 0 0 0      TREF   'declarationOrStatement' at 7ff32a800760 (string memory at 101478820)
  7ff32b807820 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 080f75d 1 1 0 0 0  SEQUENCE    => [ 7ff32b807780 7ff32b8077a0 7ff32b8077c0 7ff32b8077e0 7ff32b807800 ] (array memory at 1015df780)
  7ff32b807840 |  1 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0548847 1 1 0 0 0   LITERAL   'with' (string memory at 101478854)
  7ff32b807860 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 05b8847 1 1 0 0 0   LITERAL   '(' (string memory at 10147885b)
  7ff32b807880 |  2 0 0 0 0 0 0 0 a 0 0 0 0 0 0 05e8847 1 1 0 0 0      TREF   'expression' at 7ff32a801d40 (string memory at 10147885e)
  7ff32b8078a0 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 06a8847 1 1 0 0 0   LITERAL   ')' (string memory at 10147886a)
  7ff32b8078c0 |  2 0 0 0 0 0 0 016 0 0 0 0 0 0 06d8847 1 1 0 0 0      TREF   'declarationOrStatement' at 7ff32a800760 (string memory at 10147886d)
  7ff32b8078e0 |  4 0 0 0 0 0 0 0 5 0 0 0 0 0 0 0b0f75d 1 1 0 0 0  SEQUENCE    => [ 7ff32b807840 7ff32b807860 7ff32b807880 7ff32b8078a0 7ff32b8078c0 ] (array memory at 1015df7b0)
  7ff32b807900 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0a28847 1 1 0 0 0      TREF   'andExpression' at 7ff32a027f80 (string memory at 1014788a2)
  7ff32b807920 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0b78847 1 1 0 0 0      TREF   'xorExpression' at 7ff32b800140 (string memory at 1014788b7)
  7ff32b807940 |  1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0c68847 1 1 0 0 0   LITERAL   '^' (string memory at 1014788c6)
  7ff32b807960 |  2 0 0 0 0 0 0 0 d 0 0 0 0 0 0 0c98847 1 1 0 0 0      TREF   'andExpression' at 7ff32a027f80 (string memory at 1014788c9)
  7ff32b807980 |  4 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0204a5e 1 1 0 0 0  SEQUENCE    => [ 7ff32b807920 7ff32b807940 7ff32b807960 ] (array memory at 1015e4a20)
  7ff32b8079a0 |  8 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0404a5e 1 1 0 0 0    EITHER    => [ 7ff32b807900 7ff32b807980 ] (array memory at 1015e4a40)

11 undefined term(s): StringLiteral, AsmExp, stringLiteralList, Identifier, IntegerLiteral, CharacterLiteral, functionAttributes, basicType, FloatLiteral, stringLiteral, identifier
ebnf 'dlang.ebnf', 228 pattern(s):
  newAnonClassExpression:
      'new' arguments? 'class' arguments? baseClassList? structBody
    ;
  withStatement:
      'with' '(' expression ')' declarationOrStatement
    ;
  templateThisParameter:
      'this' templateTypeParameter
    ;
  operands:
      (asmExp | asmExp ',' operands)
    ;
  statementNoCaseNoDefault:
      (labeledStatement | (blockStatement | (ifStatement | (whileStatement | (doStatement | (forStatement | (foreachStatement | (switchStatement | (finalSwitchStatement | (continueStatement | (breakStatement | (returnStatement | (gotoStatement | (withStatement | (synchronizedStatement | (tryStatement | (throwStatement | (scopeGuardStatement | (pragmaStatement | (asmStatement | (conditionalStatement | (staticAssertStatement | (versionSpecification | (debugSpecification | expressionStatement))))))))))))))))))))))))
    ;
  argumentList:
      assignExpression ',' assignExpression?*
    ;
  initializer:
      ('void' | nonVoidInitializer)
    ;
  asmMulExp:
      (asmBrExp | asmMulExp ('*' | ('/' | '%')) asmBrExp)
    ;
  declarationOrStatement:
      (declaration | statement)
    ;
  templateSingleArgument:
      (builtinType | (Identifier | (CharacterLiteral | (StringLiteral | (IntegerLiteral | (FloatLiteral | ('true' | ('false' | ('null' | ('this' | ('__DATE__' | ('__FILE__' | ('__FILE_FULL_PATH__' | ('__FUNCTION__' | ('__LINE__' | ('__MODULE__' | ('__PRETTY_FUNCTION__' | ('__TIME__' | ('__TIMESTAMP__' | ('__VENDOR__' | '__VERSION__'))))))))))))))))))))
    ;
  staticForeachStatement:
      'static' foreachStatement
    ;
  parameterAttribute:
      (atAttribute | (typeConstructor | ('final' | ('in' | ('lazy' | ('out' | ('ref' | ('scope' | ('auto' | 'return')))))))))
    ;
  functionContract:
      (inOutContractExpression | inOutStatement)
    ;
  namespaceList:
      ternaryExpression ',' ternaryExpression?* ','?
    ;
  inStatement:
      'in' blockStatement
    ;
  gccAsmOperandList:
      gccAsmOperand ',' gccAsmOperand*
    ;
  declaratorIdentifierList:
      Identifier ',' Identifier*
    ;
  nonVoidInitializer:
      (assignExpression | (arrayInitializer | structInitializer))
    ;
  catches:
      (catch+ | catch* lastCatch)
    ;
  foreachStatement:
      (('foreach' | 'foreach_reverse') '(' foreachTypeList ';' expression ')' declarationOrStatement | ('foreach' | 'foreach_reverse') '(' foreachType ';' expression '..' expression ')' declarationOrStatement)
    ;
  gccAsmOperand:
      '[' identifier ']'? stringLiteral '(' assignExpression ')'
    ;
  functionCallExpression:
      (symbol arguments | (unaryExpression arguments | type arguments))
    ;
  mixinTemplateDeclaration:
      'mixin' templateDeclaration
    ;
  structDeclaration:
      ('struct' Identifier templateParameters constraint?? (structBody | ';') | 'struct' structBody)
    ;
  identifierOrTemplateInstance:
      (Identifier | templateInstance)
    ;
  StringLiteral: MISSING REFERENCE
  AsmExp: MISSING REFERENCE
  finally:
      'finally' declarationOrStatement
    ;
  enumMemberAttribute:
      (atAttribute | deprecated)
    ;
  enumBody:
      '{' enumMember ',' enumMember?* '}'
    ;
  missingFunctionBody:
      (';' | functionContract* ';')
    ;
  foreachTypeList:
      foreachType ',' foreachType*
    ;
  finalSwitchStatement:
      'final' switchStatement
    ;
  baseClassList:
      baseClass ',' baseClass*
    ;
  pragmaExpression:
      'pragma' '(' Identifier ',' argumentList? ')'
    ;
  forStatement:
      'for' '(' (declaration | statementNoCaseNoDefault) expression? ';' expression? ')' declarationOrStatement
    ;
  cmpExpression:
      (shiftExpression | (equalExpression | (identityExpression | (relExpression | inExpression))))
    ;
  shiftExpression:
      (addExpression | shiftExpression ('<<' | ('>>' | '>>>')) addExpression)
    ;
  type:
      typeConstructors? type2 typeSuffix*
    ;
  declaration:
      (attribute* declaration2 | attribute+ '{' declaration* '}')
    ;
  asmOrExp:
      (asmXorExp | asmOrExp '|' asmXorExp)
    ;
  staticDestructor:
      'static' '~' 'this' '(' ')' memberFunctionAttribute* (functionBody | ';')
    ;
  templateValueParameter:
      type Identifier ':' assignExpression? templateValueParameterDefault?
    ;
  relExpression:
      (shiftExpression | relExpression relOperator shiftExpression)
    ;
  structInitializer:
      '{' structMemberInitializers? '}'
    ;
  assocArrayLiteral:
      '[' keyValuePairs ']'
    ;
  moduleDeclaration:
      deprecated? 'module' identifierChain ';'
    ;
  templateDeclaration:
      'template' Identifier templateParameters constraint? '{' declaration* '}'
    ;
  powExpression:
      (unaryExpression | powExpression '^^' unaryExpression)
    ;
  tryStatement:
      'try' declarationOrStatement (catches | (catches finally | finally))
    ;
  staticConstructor:
      'static' 'this' '(' ')' memberFunctionAttribute* (functionBody | ';')
    ;
  staticAssertDeclaration:
      staticAssertStatement
    ;
  invariant:
      ('invariant' '(' '('? blockStatement | 'invariant' '(' assertArguments ')' ';')
    ;
  asmBrExp:
      (asmUnaExp | asmBrExp? '[' asmExp ']')
    ;
  asmLogOrExp:
      (asmLogAndExp | asmLogOrExp '||' asmLogAndExp)
    ;
  staticAssertStatement:
      'static' assertExpression ';'
    ;
  versionCondition:
      'version' '(' (IntegerLiteral | (Identifier | ('unittest' | 'assert'))) ')'
    ;
  functionLiteralExpression:
      ('delegate' 'ref'? type? parameters functionAttribute*? specifiedFunctionBody | ('function' 'ref'? type? parameters functionAttribute*? specifiedFunctionBody | ('ref'? parameters functionAttribute* specifiedFunctionBody | (specifiedFunctionBody | (Identifier '=>' assignExpression | ('function' 'ref'? type? parameters functionAttribute* '=>' assignExpression | ('delegate' 'ref'? type? parameters functionAttribute* '=>' assignExpression | 'ref'? parameters functionAttribute* '=>' assignExpression)))))))
    ;
  asmLogAndExp:
      asmOrExp asmLogAndExp '&&' asmOrExp
    ;
  arrayMemberInitialization:
      assignExpression ':'? nonVoidInitializer
    ;
  importBindings:
      singleImport ':' importBind ',' importBind*
    ;
  mixinExpression:
      'mixin' '(' argumentList ')'
    ;
  symbol:
      '.'? identifierOrTemplateChain
    ;
  continueStatement:
      'continue' Identifier? ';'
    ;
  identityExpression:
      shiftExpression ('is' | '!' 'is') shiftExpression
    ;
  importBind:
      Identifier '=' Identifier?
    ;
  stringLiteralList: MISSING REFERENCE
  declarationsAndStatements:
      declarationOrStatement+
    ;
  staticForeachDeclaration:
      ('static' ('foreach' | 'foreach_reverse') '(' foreachTypeList ';' expression ')' (declaration | '{' declaration* '}') | 'static' ('foreach' | 'foreach_reverse') '(' foreachType ';' expression '..' expression ')' (declaration | '{' declaration* '}'))
    ;
  indexExpression:
      (unaryExpression '[' ']' | unaryExpression '[' index ',' index* ']')
    ;
  linkageAttribute:
      ('extern' '(' Identifier ')' | ('extern' '(' Identifier '-' Identifier ')' | 'extern' '(' Identifier '++' (',' typeIdentifierPart | (namespaceList | ('struct' | 'class')))? ')'))
    ;
  compileCondition:
      (versionCondition | (debugCondition | staticIfCondition))
    ;
  keyValuePairs:
      keyValuePair ',' keyValuePair* ','?
    ;
  asmEqualExp:
      (asmRelExp | asmEqualExp ('==' | '!=') asmRelExp)
    ;
  anonymousEnumDeclaration:
      'enum' ':' type? '{' anonymousEnumMember+ '}'
    ;
  caseStatement:
      'case' argumentList ':' declarationsAndStatements
    ;
  typeConstructors:
      typeConstructor+
    ;
  castQualifier:
      ('const' | ('const' 'shared' | ('immutable' | ('inout' | ('inout' 'shared' | ('shared' | ('shared' 'const' | 'shared' 'inout')))))))
    ;
  pragmaStatement:
      (pragmaExpression statement | (pragmaExpression blockStatement | pragmaExpression ';'))
    ;
  templateMixinExpression:
      'mixin' mixinTemplateName templateArguments? Identifier?
    ;
  constructor:
      'this' templateParameters? parameters memberFunctionAttribute* constraint? (functionBody | ';')
    ;
  ifCondition:
      ('auto' Identifier '=' expression | (typeConstructors Identifier '=' expression | (typeConstructors? type Identifier '=' expression | expression)))
    ;
  Identifier: MISSING REFERENCE
  typeIdentifierPart:
      (identifierOrTemplateInstance | (identifierOrTemplateInstance '.' typeIdentifierPart | (identifierOrTemplateInstance '[' assignExpression ']' | identifierOrTemplateInstance '[' assignExpression ']' '.' typeIdentifierPart)))
    ;
  newExpression:
      ('new' type ('[' assignExpression ']' | arguments)? | newAnonClassExpression)
    ;
  index:
      assignExpression '..' assignExpression?
    ;
  breakStatement:
      'break' Identifier? ';'
    ;
  IntegerLiteral: MISSING REFERENCE
  equalExpression:
      shiftExpression ('==' | '!=') shiftExpression
    ;
  sharedStaticConstructor:
      'shared' 'static' 'this' '(' ')' memberFunctionAttribute* (functionBody | ';')
    ;
  caseRangeStatement:
      'case' assignExpression ':' '...' 'case' assignExpression ':' declarationsAndStatements
    ;
  templateAliasParameter:
      'alias' type? Identifier ':' (type | assignExpression)? '=' (type | assignExpression)?
    ;
  unittest:
      'unittest' blockStatement
    ;
  lastCatch:
      'catch' statementNoCaseNoDefault
    ;
  postblit:
      'this' '(' 'this' ')' memberFunctionAttribute* (functionBody | ';')
    ;
  scopeGuardStatement:
      'scope' '(' Identifier ')' statementNoCaseNoDefault
    ;
  module:
      moduleDeclaration? declaration*
    ;
  identifierChain:
      Identifier '.' Identifier*
    ;
  parameters:
      ('(' parameter ',' parameter* ',' '...'? ')' | ('(' '...' ')' | '(' ')'))
    ;
  enumMember:
      enumMemberAttribute* Identifier '=' assignExpression?
    ;
  inExpression:
      shiftExpression ('in' | '!' 'in') shiftExpression
    ;
  asmExp:
      asmLogOrExp '?' asmExp ':' asmExp?
    ;
  keyValuePair:
      assignExpression ':' assignExpression
    ;
  CharacterLiteral: MISSING REFERENCE
  functionBody:
      (specifiedFunctionBody | missingFunctionBody)
    ;
  versionSpecification:
      'version' '=' (Identifier | IntegerLiteral) ';'
    ;
  assignExpression:
      ternaryExpression assignOperator assignExpression?
    ;
  staticIfCondition:
      'static' 'if' '(' assignExpression ')'
    ;
  atAttribute:
      ('@' Identifier | ('@' Identifier '(' argumentList? ')' | ('@' '(' argumentList ')' | '@' templateInstance)))
    ;
  importDeclaration:
      ('import' singleImport ',' singleImport* ',' importBindings? ';' | 'import' importBindings ';')
    ;
  primaryExpression:
      (identifierOrTemplateInstance | ('.' identifierOrTemplateInstance | (typeConstructor '(' basicType ')' '.' Identifier | (basicType '.' Identifier | (basicType arguments | (typeofExpression | (typeidExpression | (vector | (arrayLiteral | (assocArrayLiteral | ('(' expression ')' | (isExpression | (functionLiteralExpression | (traitsExpression | (mixinExpression | (importExpression | ('$' | ('this' | ('super' | ('null' | ('true' | ('false' | ('__DATE__' | ('__FILE__' | ('__FILE_FULL_PATH__' | ('__FUNCTION__' | ('__LINE__' | ('__MODULE__' | ('__PRETTY_FUNCTION__' | ('__TIME__' | ('__TIMESTAMP__' | ('__VENDOR__' | ('__VERSION__' | (IntegerLiteral | (FloatLiteral | (StringLiteral+ | CharacterLiteral))))))))))))))))))))))))))))))))))))
    ;
  autoDeclaration:
      storageClass+ autoDeclarationPart ',' autoDeclarationPart* ';'
    ;
  arguments:
      '(' argumentList? ')'
    ;
  deprecated:
      'deprecated' '(' StringLiteral+ ')'?
    ;
  autoDeclarationPart:
      Identifier templateParameters? '=' initializer
    ;
  templateParameters:
      '(' templateParameterList? ')'
    ;
  typeSpecialization:
      (type | ('struct' | ('union' | ('class' | ('interface' | ('enum' | ('_vector' | ('function' | ('delegate' | ('super' | ('const' | ('immutable' | ('inout' | ('shared' | ('return' | ('_parameters' | ('module' | 'package')))))))))))))))))
    ;
  unaryExpression:
      (primaryExpression | ('&' unaryExpression | ('!' unaryExpression | ('*' unaryExpression | ('+' unaryExpression | ('-' unaryExpression | ('~' unaryExpression | ('++' unaryExpression | ('--' unaryExpression | (newExpression | (deleteExpression | (castExpression | (assertExpression | (functionCallExpression | (indexExpression | ('(' type ')' '.' identifierOrTemplateInstance | (unaryExpression '.' newExpression | (unaryExpression '.' identifierOrTemplateInstance | (unaryExpression '--' | unaryExpression '++')))))))))))))))))))
    ;
  templateTypeParameter:
      Identifier ':' type? '=' type?
    ;
  templateTupleParameter:
      Identifier '...'
    ;
  arrayLiteral:
      '[' argumentList? ']'
    ;
  builtinType:
      ('bool' | ('byte' | ('ubyte' | ('short' | ('ushort' | ('int' | ('uint' | ('long' | ('ulong' | ('char' | ('wchar' | ('dchar' | ('float' | ('double' | ('real' | ('ifloat' | ('idouble' | ('ireal' | ('cfloat' | ('cdouble' | ('creal' | 'void')))))))))))))))))))))
    ;
  attributeDeclaration:
      attribute ':'
    ;
  catch:
      'catch' '(' type Identifier? ')' declarationOrStatement
    ;
  blockStatement:
      '{' declarationsAndStatements? '}'
    ;
  declaration2:
      (aliasDeclaration | (aliasThisDeclaration | (anonymousEnumDeclaration | (attributeDeclaration | (classDeclaration | (conditionalDeclaration | (constructor | (debugSpecification | (destructor | (enumDeclaration | (eponymousTemplateDeclaration | (functionDeclaration | (importDeclaration | (interfaceDeclaration | (invariant | (mixinDeclaration | (mixinTemplateDeclaration | (pragmaDeclaration | (sharedStaticConstructor | (sharedStaticDestructor | (staticAssertDeclaration | (staticConstructor | (staticDestructor | (structDeclaration | (templateDeclaration | (unionDeclaration | (unittest | (variableDeclaration | versionSpecification))))))))))))))))))))))))))))
    ;
  inContractExpression:
      'in' '(' assertArguments ')'
    ;
  returnStatement:
      'return' expression? ';'
    ;
  andExpression:
      (cmpExpression | andExpression '&' cmpExpression)
    ;
  templateArguments:
      ('!' '(' templateArgumentList? ')' | templateSingleArgument)
    ;
  classDeclaration:
      ('class' Identifier ';' | ('class' Identifier ':' baseClassList? structBody | ('class' Identifier templateParameters constraint? (structBody | ';') | ('class' Identifier templateParameters constraint? ':' baseClassList? structBody | 'class' Identifier templateParameters ':' baseClassList? constraint? structBody))))
    ;
  memberFunctionAttribute:
      (functionAttribute | ('immutable' | ('inout' | ('shared' | ('const' | ('return' | 'scope'))))))
    ;
  orOrExpression:
      (andAndExpression | orOrExpression '||' andAndExpression)
    ;
  debugCondition:
      'debug' '(' (IntegerLiteral | Identifier) ')'?
    ;
  aliasThisDeclaration:
      'alias' Identifier 'this' ';'
    ;
  asmAddExp:
      (asmMulExp | asmAddExp ('+' | '-') asmMulExp)
    ;
  anonymousEnumMember:
      (type identifier '=' assignExpression | (identifier '=' assignExpression | identifier))
    ;
  expressionStatement:
      expression ';'
    ;
  templateParameterList:
      templateParameter ',' templateParameter?* ','?
    ;
  sharedStaticDestructor:
      'shared' 'static' '~' 'this' '(' ')' memberFunctionAttribute* (functionBody | ';')
    ;
  foreachType:
      ('ref' | ('alias' | ('enum' | typeConstructor)))* type? Identifier
    ;
  inOutContractExpression:
      (inContractExpression | outContractExpression)
    ;
  gccAsmInstruction:
      (expression ':' gccAsmOperandList? ':' gccAsmOperandList? ':' stringLiteralList?? ';' | expression ':' ':' gccAsmOperandList? ':' stringLiteralList ';' ':' declaratorIdentifierList ';')
    ;
  interfaceDeclaration:
      ('interface' Identifier ';' | ('interface' Identifier ':' baseClassList? structBody | ('interface' Identifier templateParameters constraint? ':' baseClassList? structBody | 'interface' Identifier templateParameters ':' baseClassList? constraint? structBody)))
    ;
  structBody:
      '{' declaration* '}'
    ;
  synchronizedStatement:
      'synchronized' '(' expression ')'? statementNoCaseNoDefault
    ;
  functionAttribute:
      (atAttribute | ('pure' | 'nothrow'))
    ;
  functionDeclaration:
      ((storageClass+ | type) Identifier parameters memberFunctionAttribute* (functionBody | ';') | (storageClass+ | type) Identifier templateParameters parameters memberFunctionAttribute* constraint? (functionBody | ';'))
    ;
  addExpression:
      (mulExpression | addExpression ('+' | ('-' | '~')) mulExpression)
    ;
  deleteExpression:
      'delete' unaryExpression
    ;
  mixinTemplateName:
      (symbol | typeofExpression '.' identifierOrTemplateChain)
    ;
  inOutStatement:
      (inStatement | outStatement)
    ;
  typeofExpression:
      'typeof' '(' (expression | 'return') ')'
    ;
  vector:
      '__vector' '(' type ')'?
    ;
  defaultStatement:
      'default' ':' declarationsAndStatements
    ;
  ifStatement:
      'if' '(' ifCondition ')' declarationOrStatement 'else' declarationOrStatement?
    ;
  aliasDeclaration:
      ('alias' aliasInitializer ',' aliasInitializer* ';' | ('alias' storageClass* type declaratorIdentifierList ';' | 'alias' storageClass* type identifier '(' parameters ''* ';'))
    ;
  ternaryExpression:
      orOrExpression '?' expression ':' ternaryExpression?
    ;
  mulExpression:
      (powExpression | mulExpression ('*' | ('/' | '%')) powExpression)
    ;
  storageClass:
      (alignAttribute | (linkageAttribute | (atAttribute | (typeConstructor | (deprecated | ('abstract' | ('auto' | ('enum' | ('extern' | ('final' | ('nothrow' | ('override' | ('pure' | ('ref' | ('__gshared' | ('scope' | ('static' | 'synchronized')))))))))))))))))
    ;
  relOperator:
      ('<' | ('<=' | ('>' | ('>=' | ('!<>=' | ('!<>' | ('<>' | ('<>=' | ('!>' | ('!>=' | ('!<' | '!<=')))))))))))
    ;
  templateArgument:
      (type | assignExpression)
    ;
  conditionalStatement:
      compileCondition declarationOrStatement 'else' declarationOrStatement?
    ;
  structMemberInitializers:
      structMemberInitializer ',' structMemberInitializer?*
    ;
  typeSuffix:
      ('*' | ('[' type? ']' | ('[' assignExpression ']' | ('[' assignExpression '..' assignExpression ']' | ('delegate' | 'function') parameters memberFunctionAttribute*))))
    ;
  traitsExpression:
      '__traits' '(' Identifier ',' templateArgumentList ')'
    ;
  templateInstance:
      Identifier templateArguments
    ;
  isExpression:
      ('is' '(' type identifier? ')' | ('is' '(' type identifier? ':' typeSpecialization ')' | ('is' '(' type identifier? '=' typeSpecialization ')' | ('is' '(' type identifier? ':' typeSpecialization ',' templateParameterList ')' | 'is' '(' type identifier? '=' typeSpecialization ',' templateParameterList ')'))))
    ;
  identifierOrTemplateChain:
      identifierOrTemplateInstance '.' identifierOrTemplateInstance*
    ;
  templateValueParameterDefault:
      ('=' '__DATE__' | ('=' '__FILE__' | ('=' '__FILE_FULL_PATH__' | ('=' '__FUNCTION__' | ('=' '__LINE__' | ('=' '__MODULE__' | ('=' '__PRETTY_FUNCTION__' | ('=' '__TIME__' | ('=' '__TIMESTAMP__' | ('=' '__VENDOR__' | ('=' '__VERSION__' | '=' assignExpression)))))))))))
    ;
  andAndExpression:
      (orExpression | andAndExpression '&&' orExpression)
    ;
  outContractExpression:
      'out' '(' Identifier? ';' assertArguments ')'
    ;
  functionAttributes: MISSING REFERENCE
  debugSpecification:
      'debug' '=' (Identifier | IntegerLiteral) ';'
    ;
  asmStatement:
      'asm' functionAttributes? '{' (asmInstruction+ | gccAsmInstruction+) '}'
    ;
  baseClass:
      type2
    ;
  constraint:
      'if' '(' expression ')'
    ;
  whileStatement:
      'while' '(' expression ')' declarationOrStatement
    ;
  unionDeclaration:
      ('union' Identifier templateParameters constraint?? (structBody | ';') | 'union' structBody)
    ;
  alignAttribute:
      'align' '(' assignExpression ')'?
    ;
  assertExpression:
      'assert' '(' assertArguments ')'
    ;
  statement:
      (statementNoCaseNoDefault | (caseStatement | (caseRangeStatement | defaultStatement)))
    ;
  outStatement:
      'out' '(' Identifier ')'? blockStatement
    ;
  asmPrimaryExp:
      (IntegerLiteral | (FloatLiteral | (StringLiteral | (register | (register ':' AsmExp | (identifierChain | ('$' | ('this' | '__LOCAL_SIZE'))))))))
    ;
  attribute:
      (pragmaExpression | (alignAttribute | (deprecated | (atAttribute | (linkageAttribute | ('export' | ('package' '(' identifierChain ')'? | ('private' | ('protected' | ('public' | ('static' | ('extern' | ('abstract' | ('final' | ('override' | ('synchronized' | ('auto' | ('scope' | ('const' | ('immutable' | ('inout' | ('shared' | ('_gshared' | ('nothrow' | ('pure' | 'ref')))))))))))))))))))))))))
    ;
  destructor:
      '~' 'this' '(' ')' memberFunctionAttribute* (functionBody | ';')
    ;
  pragmaDeclaration:
      pragmaExpression ';'
    ;
  register:
      (Identifier | Identifier '(' IntegerLiteral ')')
    ;
  structMemberInitializer:
      Identifier ':'? nonVoidInitializer
    ;
  type2:
      (builtinType | (typeIdentifierPart | ('super' '.' typeIdentifierPart | ('this' '.' typeIdentifierPart | (typeofExpression '.' typeIdentifierPart? | (typeConstructor '(' type ')' | (traitsExpression | (vector | mixinExpression))))))))
    ;
  eponymousTemplateDeclaration:
      'enum' Identifier templateParameters '=' assignExpression ';'
    ;
  basicType: MISSING REFERENCE
  parameter:
      (parameterAttribute* type | (parameterAttribute* type Identifier? '...' | parameterAttribute* type Identifier? '=' assignExpression?))
    ;
  asmShiftExp:
      asmAddExp asmShiftExp ('<<' | ('>>' | '>>>')) asmAddExp
    ;
  arrayInitializer:
      ('[' ']' | '[' arrayMemberInitialization ',' arrayMemberInitialization?* ']')
    ;
  labeledStatement:
      Identifier ':' declarationOrStatement?
    ;
  enumDeclaration:
      ('enum' Identifier ':' type? ';' | 'enum' Identifier ':' type? enumBody)
    ;
  variableDeclaration:
      (storageClass* type declarator ',' declarator* ';' | autoDeclaration)
    ;
  typeidExpression:
      'typeid' '(' (type | expression) ')'
    ;
  conditionalDeclaration:
      (compileCondition declaration | (compileCondition '{' declaration* '}' | (compileCondition ':' declaration+ | (compileCondition declaration 'else' ':' declaration* | (compileCondition declaration 'else' declaration | (compileCondition declaration 'else' '{' declaration* '}' | (compileCondition '{' declaration* '}' 'else' declaration | (compileCondition '{' declaration* '}' 'else' '{' declaration* '}' | (compileCondition '{' declaration* '}' 'else' ':' declaration* | (compileCondition ':' declaration+ 'else' declaration | (compileCondition ':' declaration+ 'else' '{' declaration* '}' | compileCondition ':' declaration+ 'else' ':' declaration*)))))))))))
    ;
  templateArgumentList:
      templateArgument ',' templateArgument?*
    ;
  templateParameter:
      (templateTypeParameter | (templateValueParameter | (templateAliasParameter | (templateTupleParameter | templateThisParameter))))
    ;
  expression:
      assignExpression ',' assignExpression*
    ;
  FloatLiteral: MISSING REFERENCE
  asmUnaExp:
      (asmTypePrefix asmExp | (Identifier asmExp | ('+' asmUnaExp | ('-' asmUnaExp | ('!' asmUnaExp | ('~' asmUnaExp | asmPrimaryExp))))))
    ;
  asmXorExp:
      (asmAndExp | asmXorExp '^' asmAndExp)
    ;
  asmRelExp:
      (asmShiftExp | asmRelExp ('<' | ('<=' | ('>' | '>='))) asmShiftExp?)
    ;
  assignOperator:
      ('=' | ('>>>=' | ('>>=' | ('<<=' | ('+=' | ('-=' | ('*=' | ('%=' | ('&=' | ('/=' | ('|=' | ('^^=' | ('^=' | '~=')))))))))))))
    ;
  importExpression:
      'import' '(' assignExpression ')'
    ;
  declarator:
      (Identifier | (Identifier '=' initializer | Identifier templateParameters '=' initializer))
    ;
  typeConstructor:
      ('const' | ('immutable' | ('inout' | 'shared')))
    ;
  castExpression:
      'cast' '(' (type | castQualifier)? ')' unaryExpression
    ;
  specifiedFunctionBody:
      ('do'? blockStatement | (functionContract* inOutContractExpression 'do'? blockStatement | functionContract* inOutStatement 'do' blockStatement))
    ;
  throwStatement:
      'throw' expression ';'
    ;
  xorExpression:
      (andExpression | xorExpression '^' andExpression)
    ;
  orExpression:
      (xorExpression | orExpression '|' xorExpression)
    ;
  switchStatement:
      'switch' '(' expression ')' statement
    ;
  asmAndExp:
      (asmEqualExp | asmAndExp '&' asmEqualExp)
    ;
  singleImport:
      Identifier '='? identifierChain
    ;
  assertArguments:
      assignExpression ',' assignExpression? ','?
    ;
  asmTypePrefix:
      (Identifier Identifier? | ('byte' Identifier? | ('short' Identifier? | ('int' Identifier? | ('float' Identifier? | ('double' Identifier? | 'real' Identifier?))))))
    ;
  stringLiteral: MISSING REFERENCE
  doStatement:
      'do' statementNoCaseNoDefault 'while' '(' expression ')' ';'
    ;
  gotoStatement:
      'goto' (Identifier | ('default' | 'case' expression?)) ';'
    ;
  aliasInitializer:
      (Identifier templateParameters? '=' storageClass* type | (Identifier templateParameters? '=' storageClass* type parameters memberFunctionAttribute* | Identifier templateParameters? '=' functionLiteralExpression))
    ;
  asmInstruction:
      (Identifier | ('align' IntegerLiteral | ('align' Identifier | (Identifier ':' asmInstruction | (Identifier operands | ('in' operands | ('out' operands | ('int' operands | ';'))))))))
    ;
  mixinDeclaration:
      (mixinExpression ';' | templateMixinExpression ';')
    ;
  identifier: MISSING REFERENCE

